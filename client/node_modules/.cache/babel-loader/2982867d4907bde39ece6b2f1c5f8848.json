{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\AddPres.tsx\";\nimport React, { useState } from 'react';\n\nconst AddPres = ({\n  addPres\n}) => {\n  const [options] = React.useState([{\n    label: \"\"\n  }, {\n    value: 5,\n    label: \"5\"\n  }, {\n    value: 10,\n    label: '10'\n  }, {\n    value: 15,\n    label: '15'\n  }]);\n  const [formData, setFormData] = useState();\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n  const [time, setTime] = useState(); //handles text input (name and description)\n\n  const handleInput = e => {\n    if (e.currentTarget.id === 'name') {\n      setName(e.currentTarget.value);\n      setFormData({ ...formData,\n        [e.currentTarget.id]: e.currentTarget.value\n      });\n    } else if (e.currentTarget.id === 'description') {\n      setDescription(e.currentTarget.value);\n      setFormData({ ...formData,\n        [e.currentTarget.id]: e.currentTarget.value\n      });\n    }\n  }; //handles option input (time)\n\n\n  const handleOption = e => {\n    setTime(parseInt(e.target.value, 10));\n    setFormData({ ...formData,\n      \"time\": parseInt(e.target.value, 10)\n    });\n  };\n\n  function onSubmitFn(e, formData) {\n    addPres(e, formData);\n    setName(undefined);\n    setDescription(undefined);\n    setTime(undefined);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    onSubmit: e => onSubmitFn(e, formData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputMeetingLen\",\n    style: {\n      width: '150px'\n    },\n    value: name,\n    onChange: handleInput,\n    type: \"text\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputMeetingLen\",\n    style: {\n      width: '400px'\n    },\n    onChange: handleInput,\n    value: description,\n    type: \"text\",\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      backgroundColor: 'rgba(200,200,200,.5)',\n      marginRight: '2px'\n    },\n    onChange: handleOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, options.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.value,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, item.label))), \" min\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submitButton\" //enable add presenter button once all sections have been filled\n    ,\n    disabled: name === undefined || description === undefined || time === undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Add Presenter\")));\n};\n\nexport default AddPres;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/AddPres.tsx"],"names":["React","useState","AddPres","addPres","options","label","value","formData","setFormData","name","setName","description","setDescription","time","setTime","handleInput","e","currentTarget","id","handleOption","parseInt","target","onSubmitFn","undefined","display","flexDirection","width","marginLeft","backgroundColor","marginRight","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\ntype Props = {\r\n    addPres: (e: React.FormEvent, formData: IPresenter | any) => void\r\n}\r\n\r\nconst AddPres: React.FC<Props> = ({addPres}) => {\r\n    const [options] = React.useState([\r\n        {label: \"\"},\r\n        {value: 5, label: \"5\"},\r\n        {value: 10, label: '10'},\r\n        {value: 15, label: '15'},\r\n    ]);\r\n    const [formData, setFormData] = useState<IPresenter | {}>()\r\n    const [name, setName] = useState<string>();\r\n    const [description, setDescription] = useState<string>()\r\n    const [time, setTime] = useState<number>();\r\n\r\n    //handles text input (name and description)\r\n    const handleInput = (e: React.FormEvent<HTMLInputElement>): void => {\r\n        if (e.currentTarget.id === 'name') {\r\n            setName(e.currentTarget.value)\r\n            setFormData({\r\n                ...formData,\r\n                [e.currentTarget.id]: e.currentTarget.value,\r\n            })\r\n        } else if (e.currentTarget.id === 'description') {\r\n            setDescription(e.currentTarget.value)\r\n            setFormData({\r\n                ...formData,\r\n                [e.currentTarget.id]: e.currentTarget.value,\r\n            })\r\n        }\r\n    }\r\n\r\n    //handles option input (time)\r\n    const handleOption = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n        setTime(parseInt(e.target.value, 10));\r\n        setFormData({\r\n            ...formData,\r\n            \"time\": parseInt(e.target.value, 10),\r\n        })\r\n    }\r\n\r\n    function onSubmitFn(e: React.FormEvent, formData: {} | IPresenter | undefined) {\r\n        addPres(e, formData)\r\n        setName(undefined)\r\n        setDescription(undefined)\r\n        setTime(undefined)\r\n    }\r\n\r\n    return (\r\n        <form className='Form' onSubmit={(e) => onSubmitFn(e, formData)}>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div>\r\n                    <label htmlFor='name'>Name: </label>\r\n                    <input className='inputMeetingLen' style={{width: '150px'}} value={name}\r\n                           onChange={handleInput} type='text' id='name'/>\r\n                </div>\r\n                <div style={{marginLeft: '10px',}}>\r\n                    <label htmlFor='description'>Description: </label>\r\n                    <input className='inputMeetingLen' style={{width: '400px'}} onChange={handleInput}\r\n                           value={description} type='text' id='description'/>\r\n                </div>\r\n                <div style={{marginLeft: '10px'}}>\r\n                    <label htmlFor='time'>Time: </label>\r\n                    <select style={{backgroundColor: 'rgba(200,200,200,.5)', marginRight: '2px'}}\r\n                            onChange={handleOption}>\r\n                        {options.map(item => (\r\n                            <option\r\n                                key={item.value}\r\n                                value={item.value}\r\n                            >\r\n                                {item.label}\r\n                            </option>\r\n                        ))}\r\n                    </select> min\r\n                </div>\r\n                <button className=\"submitButton\" //enable add presenter button once all sections have been filled\r\n                        disabled={name === undefined || description === undefined || time === undefined}>Add Presenter\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddPres\r\n"]},"metadata":{},"sourceType":"module"}