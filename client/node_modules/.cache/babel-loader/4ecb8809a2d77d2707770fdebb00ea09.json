{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './TodoItem.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\n\nconst Todo = props => {\n  const [realTime, setTime] = useState(0);\n\n  const timeCallback = timerTime => {\n    setTime(timerTime);\n  };\n\n  useEffect(() => {\n    const sendTimeParent = props.callbackFromParent2;\n    sendTimeParent(realTime);\n  }, [realTime, props.callbackFromParent2]); //returns color to indicate how much of the designated time was used\n\n  function getColor() {\n    const diff = realTime - props.todo.time; //less than or equal to designated time + 1 minute\n\n    if (realTime <= props.todo.time + 1000) {\n      return 'rgb(198,246,241)';\n    } else if (props.bonusTime > 0) {\n      if (diff > 4) {\n        //overtime\n        return 'rgb(254,188,254)';\n      }\n\n      if (diff > 1) {\n        //slightly overtime\n        return 'rgb(255,202,255)';\n      } //overtime and no more bonus time (cutting into people's time)\n\n    } else if (props.bonusTime < 1) {\n      return 'rgb(252,190,236)';\n    }\n  }\n\n  let reducedTime = props.todo.time - props.todo.extra;\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.todo._id,\n    index: props.index,\n    isDragDisabled: props.done || props.active || !props.admin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, provided => {\n    const style = {\n      height: props.percent + '%',\n      color: props.done ? 'grey' : '',\n      ...provided.draggableProps.style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"Card\",\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      start: props.active,\n      time: realTime < reducedTime ? reducedTime : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: realTime < props.todo.time ? \"Card--text\" : props.bonusTime > 0 ? \"Card--reverse\" : \"Card--reverse2\",\n      style: {\n        animationPlayState: props.active ? 'running' : 'paused',\n        animationDuration: reducedTime + 'ms, .5s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      style: {\n        textDecoration: props.done ? 'line-through' : 'none',\n        width: 60 + 9 * props.longestName + \"px\",\n        backgroundColor: props.done ? getColor() : !props.active ? 'rgba(240, 240, 240,1)' : '',\n        textIndent: !props.admin ? '17.5%' : '' // background: !props.active && !props.done ? 'rgba(240, 240, 240,1)' : '',\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"trashWrapper\",\n      disabled: props.active || props.done,\n      style: {\n        display: !props.admin ? 'none' : '',\n        cursor: !props.active && !props.done ? 'pointer' : 'default'\n      },\n      onClick: () => props.deleteTodoApp(props.todo._id, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FaRegTrashAlt, {\n      className: \"trashcan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }\n    })), props.todo.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      style: {\n        textDecoration: props.done ? 'line-through' : 'none',\n        backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : '' // background: !props.active && !props.done ? 'rgb(230, 230, 230)' : '',\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, props.todo.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time\",\n      style: {\n        backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : '' // backgroundColor: props.done && !props.active ? 'rgba(240, 240, 240, 1)' : '',\n        // background: !props.active && !props.done ? 'rgb(230, 230, 230)' : '',\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, Math.ceil(props.todo.time / 1000) < Math.ceil(props.todo.initTime / 1000) ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'inline'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"crossedOut\" // style={{\n      //     color: 'grey',\n      //     opacity: '70%',\n      //     display: 'inline',\n      //     marginRight: '4px'\n      // }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }, Math.ceil(props.todo.initTime / 1000)), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 45\n      }\n    }, \" \", Math.ceil(props.todo.time / 1000))) : props.active ? Math.ceil(reducedTime / 1000) : Math.ceil(props.todo.initTime / 1000), \" min\"), /*#__PURE__*/React.createElement(Timer, {\n      callbackFromParent: timeCallback,\n      active: props.active,\n      done: props.done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }))));\n  });\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","Timer","Slider","FaRegTrashAlt","Todo","props","realTime","setTime","timeCallback","timerTime","sendTimeParent","callbackFromParent2","getColor","diff","todo","time","bonusTime","reducedTime","extra","_id","index","done","active","admin","provided","style","height","percent","color","draggableProps","innerRef","dragHandleProps","animationPlayState","animationDuration","textDecoration","width","longestName","backgroundColor","textIndent","display","cursor","deleteTodoApp","name","description","Math","ceil","initTime"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,aAAR,QAA4B,gBAA5B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAGP;AAEF,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBR,QAAQ,CAAS,CAAT,CAApC;;AACA,QAAMS,YAAY,GAAIC,SAAD,IAAuB;AACxCF,IAAAA,OAAO,CAACE,SAAD,CAAP;AACH,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,cAAc,GAAGL,KAAK,CAACM,mBAA7B;AACAD,IAAAA,cAAc,CAACJ,QAAD,CAAd;AACH,GAHQ,EAGN,CAACA,QAAD,EAAWD,KAAK,CAACM,mBAAjB,CAHM,CAAT,CAPE,CAYF;;AACA,WAASC,QAAT,GAAmB;AACf,UAAMC,IAAI,GAAGP,QAAQ,GAACD,KAAK,CAACS,IAAN,CAAWC,IAAjC,CADe,CAEf;;AACA,QAAIT,QAAQ,IAAID,KAAK,CAACS,IAAN,CAAWC,IAAX,GAAkB,IAAlC,EAAwC;AACpC,aAAO,kBAAP;AACH,KAFD,MAEO,IAAIV,KAAK,CAACW,SAAN,GAAkB,CAAtB,EAAyB;AAC5B,UAAIH,IAAI,GAAG,CAAX,EAAc;AAAE;AACZ,eAAO,kBAAP;AACH;;AACD,UAAIA,IAAI,GAAG,CAAX,EAAc;AAAE;AACZ,eAAO,kBAAP;AACH,OAN2B,CAO5B;;AACH,KARM,MAQA,IAAIR,KAAK,CAACW,SAAN,GAAkB,CAAtB,EAAyB;AAC5B,aAAO,kBAAP;AACH;AACJ;;AAED,MAAIC,WAAW,GAAGZ,KAAK,CAACS,IAAN,CAAWC,IAAX,GAAkBV,KAAK,CAACS,IAAN,CAAWI,KAA/C;AACA,sBACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEb,KAAK,CAACS,IAAN,CAAWK,GAAnC;AAAwC,IAAA,KAAK,EAAEd,KAAK,CAACe,KAArD;AAA4D,IAAA,cAAc,EAAEf,KAAK,CAACgB,IAAN,IAAchB,KAAK,CAACiB,MAApB,IAA6B,CAACjB,KAAK,CAACkB,KAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,QAAQ,IAAI;AACT,UAAMC,KAAK,GAAG;AACVC,MAAAA,MAAM,EAAErB,KAAK,CAACsB,OAAN,GAAgB,GADd;AAEVC,MAAAA,KAAK,EAAEvB,KAAK,CAACgB,IAAN,GAAa,MAAb,GAAsB,EAFnB;AAGV,SAAGG,QAAQ,CAACK,cAAT,CAAwBJ;AAHjB,KAAd;AAMA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAED,QAAQ,CAACM;AAApC,OACSN,QAAQ,CAACK,cADlB,EAESL,QAAQ,CAACO,eAFlB;AAEmC,MAAA,KAAK,EAAEN,KAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEpB,KAAK,CAACiB,MAArB;AAA6B,MAAA,IAAI,EAAGhB,QAAQ,GAAGW,WAAZ,GAC/BA,WAD+B,GACjB,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI;AACI,MAAA,SAAS,EAAGX,QAAQ,GAAGD,KAAK,CAACS,IAAN,CAAWC,IAAvB,GAA+B,YAA/B,GAA8CV,KAAK,CAACW,SAAN,GAAkB,CAAlB,GACrD,eADqD,GACnC,gBAF1B;AAGI,MAAA,KAAK,EAAE;AACHgB,QAAAA,kBAAkB,EAAE3B,KAAK,CAACiB,MAAN,GAAe,SAAf,GAA2B,QAD5C;AAEHW,QAAAA,iBAAiB,EAAEhB,WAAW,GAAG;AAF9B,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI;AAAK,MAAA,SAAS,EAAC,MAAf;AACK,MAAA,KAAK,EAAE;AACHiB,QAAAA,cAAc,EAAE7B,KAAK,CAACgB,IAAN,GAAa,cAAb,GAA8B,MAD3C;AAEHc,QAAAA,KAAK,EAAE,KAAK,IAAI9B,KAAK,CAAC+B,WAAf,GAA6B,IAFjC;AAGHC,QAAAA,eAAe,EAAEhC,KAAK,CAACgB,IAAN,GAAaT,QAAQ,EAArB,GAA0B,CAACP,KAAK,CAACiB,MAAP,GAAgB,uBAAhB,GAA0C,EAHlF;AAIHgB,QAAAA,UAAU,EAAE,CAACjC,KAAK,CAACkB,KAAP,GAAa,OAAb,GAAqB,EAJ9B,CAKH;;AALG,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,QAAQ,EAAElB,KAAK,CAACiB,MAAN,IAAgBjB,KAAK,CAACgB,IAAjE;AACQ,MAAA,KAAK,EAAE;AAACkB,QAAAA,OAAO,EAAE,CAAClC,KAAK,CAACkB,KAAP,GAAc,MAAd,GAAqB,EAA/B;AAAkCiB,QAAAA,MAAM,EAAE,CAACnC,KAAK,CAACiB,MAAP,IAAiB,CAACjB,KAAK,CAACgB,IAAxB,GAA+B,SAA/B,GAA2C;AAArF,OADf;AAEQ,MAAA,OAAO,EAAE,MAAMhB,KAAK,CAACoC,aAAN,CAAoBpC,KAAK,CAACS,IAAN,CAAWK,GAA/B,EAAoCd,KAAK,CAACe,KAA1C,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGC,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CARJ,EAaKf,KAAK,CAACS,IAAN,CAAW4B,IAbhB,CAPJ,eAsBI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAChCR,QAAAA,cAAc,EAAE7B,KAAK,CAACgB,IAAN,GAAa,cAAb,GAA8B,MADd;AAEhCgB,QAAAA,eAAe,EAAEhC,KAAK,CAACgB,IAAN,GAAa,wBAAb,GAAwC,CAAChB,KAAK,CAACiB,MAAP,GAAgB,oBAAhB,GAAuC,EAFhE,CAGhC;;AAHgC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIjB,KAAK,CAACS,IAAN,CAAW6B,WAJf,CAtBJ,eA4BI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AACzBN,QAAAA,eAAe,EAAEhC,KAAK,CAACgB,IAAN,GAAa,wBAAb,GAAwC,CAAChB,KAAK,CAACiB,MAAP,GAAgB,oBAAhB,GAAuC,EADvE,CAEzB;AACA;;AAHyB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsB,IAAI,CAACC,IAAL,CAAUxC,KAAK,CAACS,IAAN,CAAWC,IAAX,GAAkB,IAA5B,IAAoC6B,IAAI,CAACC,IAAL,CAAUxC,KAAK,CAACS,IAAN,CAAWgC,QAAX,GAAsB,IAAhC,CAApC,gBACG;AAAM,MAAA,KAAK,EAAE;AAACP,QAAAA,OAAO,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAC,YAAhB,CACM;AACA;AACA;AACA;AACA;AACA;AANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKK,IAAI,CAACC,IAAL,CAAUxC,KAAK,CAACS,IAAN,CAAWgC,QAAX,GAAsB,IAAhC,CARL,CADA,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQF,IAAI,CAACC,IAAL,CAAUxC,KAAK,CAACS,IAAN,CAAWC,IAAX,GAAkB,IAA5B,CAAR,CAVJ,CADH,GAYaV,KAAK,CAACiB,MAAN,GAAesB,IAAI,CAACC,IAAL,CAAU5B,WAAW,GAAG,IAAxB,CAAf,GACJ2B,IAAI,CAACC,IAAL,CAAUxC,KAAK,CAACS,IAAN,CAAWgC,QAAX,GAAsB,IAAhC,CAdd,SALJ,eAqBI,oBAAC,KAAD;AAAO,MAAA,kBAAkB,EAAEtC,YAA3B;AACO,MAAA,MAAM,EAAEH,KAAK,CAACiB,MADrB;AAEO,MAAA,IAAI,EAAEjB,KAAK,CAACgB,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,CA5BJ,CALJ,CADJ;AA8DH,GAtEL,CADJ;AA0EH,CA7GD;;AA8GA,eAAejB,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {Draggable} from 'react-beautiful-dnd'\r\nimport './TodoItem.css'\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\nimport {FaRegTrashAlt} from \"react-icons/fa\";\r\n\r\nconst Todo = (props: {\r\n    admin: boolean, percent: number, todo: ITodo, active: boolean, done: boolean, index: number, bonusTime: number, longestName :number,\r\n    callbackFromParent2(listInfo: number): void, deleteTodoApp: (_id: string, index:number) => void\r\n}) => {\r\n\r\n    const [realTime, setTime] = useState<number>(0);\r\n    const timeCallback = (timerTime: number) => {\r\n        setTime(timerTime);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const sendTimeParent = props.callbackFromParent2\r\n        sendTimeParent(realTime);\r\n    }, [realTime, props.callbackFromParent2])\r\n\r\n    //returns color to indicate how much of the designated time was used\r\n    function getColor(){\r\n        const diff = realTime-props.todo.time\r\n        //less than or equal to designated time + 1 minute\r\n        if (realTime <= props.todo.time + 1000) {\r\n            return 'rgb(198,246,241)';\r\n        } else if (props.bonusTime > 0) {\r\n            if (diff > 4) { //overtime\r\n                return 'rgb(254,188,254)';\r\n            }\r\n            if (diff > 1) { //slightly overtime\r\n                return 'rgb(255,202,255)';\r\n            }\r\n            //overtime and no more bonus time (cutting into people's time)\r\n        } else if (props.bonusTime < 1) {\r\n            return 'rgb(252,190,236)';\r\n        }\r\n    }\r\n\r\n    let reducedTime = props.todo.time - props.todo.extra\r\n    return (\r\n        <Draggable draggableId={props.todo._id} index={props.index} isDragDisabled={props.done || props.active|| !props.admin}>\r\n            {provided => {\r\n                const style = {\r\n                    height: props.percent + '%',\r\n                    color: props.done ? 'grey' : '',\r\n                    ...provided.draggableProps.style,\r\n\r\n                };\r\n                return (\r\n                    <div className=\"Card\" ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         {...provided.dragHandleProps} style={style}>\r\n                        <Slider start={props.active} time={(realTime < reducedTime) ?\r\n                            reducedTime : 0}/>\r\n                        <div\r\n                            className={(realTime < props.todo.time) ? \"Card--text\" : props.bonusTime > 0 ?\r\n                                \"Card--reverse\" : \"Card--reverse2\"}\r\n                            style={{\r\n                                animationPlayState: props.active ? 'running' : 'paused',\r\n                                animationDuration: reducedTime + 'ms, .5s',\r\n                            }}>\r\n                            <div className='name'\r\n                                 style={{\r\n                                     textDecoration: props.done ? 'line-through' : 'none',\r\n                                     width: 60 + 9 * props.longestName + \"px\",\r\n                                     backgroundColor: props.done ? getColor() : !props.active ? 'rgba(240, 240, 240,1)' : '',\r\n                                     textIndent: !props.admin?'17.5%':'',\r\n                                     // background: !props.active && !props.done ? 'rgba(240, 240, 240,1)' : '',\r\n                                 }}>\r\n                                <button className=\"trashWrapper\" disabled={props.active || props.done}\r\n                                        style={{display: !props.admin? 'none':'',cursor: !props.active && !props.done ? 'pointer' : 'default'}}\r\n                                        onClick={() => props.deleteTodoApp(props.todo._id, props.index)}\r\n                                ><FaRegTrashAlt className=\"trashcan\"/>\r\n                                </button>\r\n                                {props.todo.name}\r\n                            </div>\r\n                            <div className='description' style={{\r\n                                textDecoration: props.done ? 'line-through' : 'none',\r\n                                backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : '',\r\n                                // background: !props.active && !props.done ? 'rgb(230, 230, 230)' : '',\r\n                            }}>{props.todo.description}\r\n                            </div>\r\n                            <div className=\"time\" style={{\r\n                                backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : '',\r\n                                // backgroundColor: props.done && !props.active ? 'rgba(240, 240, 240, 1)' : '',\r\n                                // background: !props.active && !props.done ? 'rgb(230, 230, 230)' : '',\r\n                            }}>\r\n                                <div className=\"set-time\">\r\n                                    {Math.ceil(props.todo.time / 1000) < Math.ceil(props.todo.initTime / 1000) ?\r\n                                        <span style={{display: 'inline'}}>\r\n                                        <span className=\"crossedOut\"\r\n                                              // style={{\r\n                                              //     color: 'grey',\r\n                                              //     opacity: '70%',\r\n                                              //     display: 'inline',\r\n                                              //     marginRight: '4px'\r\n                                              // }}\r\n                                        >\r\n                                            {Math.ceil(props.todo.initTime / 1000)}</span>\r\n                                            <span> {Math.ceil(props.todo.time / 1000)}</span>\r\n                                        </span> : props.active ? Math.ceil(reducedTime / 1000)\r\n                                            : Math.ceil(props.todo.initTime / 1000)} min\r\n                                </div>\r\n                                <Timer callbackFromParent={timeCallback}\r\n                                       active={props.active}\r\n                                       done={props.done}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Draggable>\r\n    )\r\n}\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}