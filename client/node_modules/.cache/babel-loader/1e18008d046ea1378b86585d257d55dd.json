{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName } from \"../API\";\nimport './TodoItem.css';\n\nconst Todo = ({\n  todo,\n  active,\n  index\n}) => {\n  const [longest, setLong] = useState(50);\n  useEffect(() => {\n    handleLongest();\n  });\n\n  const handleLongest = () => {\n    getLongestName().then(({\n      data: {\n        longest\n      }\n    }) => setLong(longest)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    isDragDisabled: active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"Card\",\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card--text\",\n    style: {\n      border: active ? 'dotted' : 'none',\n      transitionProperty: 'background-position',\n      transitionTimingFunction: 'linear',\n      transitionDuration: todo.time / 60 + 's',\n      backgroundPosition: active ? '0%' : '100%',\n      textDecoration: active ? 'line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    style: {\n      width: longest * 6.5 + \"px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \" \", todo.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    style: {\n      paddingBottom: todo.time / 3 + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, todo.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, todo.time, \" min\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"real-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"- min\")))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","getLongestName","Todo","todo","active","index","longest","setLong","handleLongest","then","data","catch","err","console","log","_id","provided","innerRef","draggableProps","dragHandleProps","border","transitionProperty","transitionTimingFunction","transitionDuration","time","backgroundPosition","textDecoration","width","name","paddingBottom","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,OAAO,gBAAP;;AAQA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAA6B;AACvD,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBR,QAAQ,CAAS,EAAT,CAAnC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,aAAa;AAChB,GAFQ,CAAT;;AAGA,QAAMA,aAAa,GAAG,MAAY;AAC9BP,IAAAA,cAAc,GACTQ,IADL,CACU,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA;AAAF;AAAR,KAAD,KAAqCC,OAAO,CAACD,OAAD,CADtD,EAEKK,KAFL,CAEYC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAF3B;AAGH,GAJD;;AAMA,sBACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAET,IAAI,CAACY,GAA7B;AAAkC,IAAA,KAAK,EAAEV,KAAzC;AAAgD,IAAA,cAAc,EAAED,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKY,QAAQ,iBACf;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,QAAQ,CAACC;AAApC,KACSD,QAAQ,CAACE,cADlB,EAESF,QAAQ,CAACG,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AACK,IAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAEhB,MAAM,GAAG,QAAH,GAAa,MADxB;AAEHiB,MAAAA,kBAAkB,EAAE,qBAFjB;AAGHC,MAAAA,wBAAwB,EAAE,QAHvB;AAIHC,MAAAA,kBAAkB,EAAEpB,IAAI,CAACqB,IAAL,GAAU,EAAV,GAAa,GAJ9B;AAKHC,MAAAA,kBAAkB,EAAErB,MAAM,GAAG,IAAH,GAAS,MALhC;AAMHsB,MAAAA,cAAc,EAAEtB,MAAM,GAAG,cAAH,GAAoB;AANvC,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAACuB,MAAAA,KAAK,EAAErB,OAAO,GAAC,GAAR,GAAc;AAAtB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6DH,IAAI,CAACyB,IAAlE,MARF,eASE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAE1B,IAAI,CAACqB,IAAL,GAAU,CAAV,GAAc;AAA9B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyErB,IAAI,CAAC2B,WAA9E,CATF,eAUI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3B,IAAI,CAACqB,IADV,SADJ,eAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CAVJ,CAHF,CAFE,CADF;AA2BH,CAtCD;;AAwCA,eAAetB,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport {getLongestName} from \"../API\";\r\nimport './TodoItem.css'\r\n\r\ntype Props = TodoProps & {\r\n    updateTodo: (todo: ITodo) => void\r\n    deleteTodo: (_id: string) => void\r\n    index: number\r\n    active: boolean\r\n}\r\nconst Todo: React.FC<Props> = ({ todo, active, index }) => {\r\n    const [longest, setLong] = useState<number>(50);\r\n    useEffect(() => {\r\n        handleLongest()\r\n    },)\r\n    const handleLongest = (): void => {\r\n        getLongestName()\r\n            .then(({ data: { longest} }:number|any) => setLong(longest))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n      <Draggable draggableId={todo._id} index={index} isDragDisabled={active}>\r\n          {provided => (\r\n    <div className='Card' ref={provided.innerRef}\r\n         {...provided.draggableProps}\r\n         {...provided.dragHandleProps}>\r\n      <div className=\"Card--text\"\r\n           style={{\r\n               border: active ? 'dotted': 'none',\r\n               transitionProperty: 'background-position',\r\n               transitionTimingFunction: 'linear',\r\n               transitionDuration: todo.time/60+'s',\r\n               backgroundPosition: active ? '0%': '100%',\r\n               textDecoration: active ? 'line-through' : 'none',}}>\r\n        <div className='name' style={{width: longest*6.5 + \"px\"}} > {todo.name} </div>\r\n        <div className='description' style={{paddingBottom: todo.time/3 + '%'}}>{todo.description}</div>\r\n          <div className=\"time\">\r\n              <div className=\"set-time\">\r\n                  {todo.time} min</div>\r\n              <div className=\"real-time\">\r\n                  - min</div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n          )}\r\n      </Draggable>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}