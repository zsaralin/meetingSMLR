{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getLongestName = async () => {\n  try {\n    const longest = await axios.post(baseUrl + '/todos-long');\n    return longest;\n  } catch (error) {\n    throw new Error(error);\n  }\n}; // export const addTodo = async (\n//   formData: ITodo\n// ): Promise<AxiosResponse<ApiDataType>> => {\n//   try {\n//     const todo: Omit<ITodo, '_id'> = {\n//       name: formData.name,\n//       description: formData.description,\n//       status: false\n//     }\n//     const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n//       baseUrl + '/add-todo',\n//       todo\n//     )\n//     return saveTodo\n//   } catch (error) {\n//     throw new Error(error)\n//   }\n// }\n\nexport const updateTodo = async todo => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","getLongestName","longest","post","updateTodo","todo","todoUpdate","status","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAGA,WAAOE,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAUP,OAAO,MAAME,cAAc,GAAG,YAAiD;AAC7E,MAAI;AACF,UAAMC,OAAmC,GAAG,MAAMR,KAAK,CAACS,IAAN,CAC9CR,OAAO,GAAG,aADoC,CAAlD;AAGA,WAAOO,OAAP;AACD,GALD,CAKE,OAAOH,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,UAAU,GAAG,MACxBC,IADwB,IAEgB;AACxC,MAAI;AACF,UAAMC,UAAiC,GAAG;AACxCC,MAAAA,MAAM,EAAE;AADgC,KAA1C;AAGA,UAAMC,WAAuC,GAAG,MAAMd,KAAK,CAACe,GAAN,CACnD,GAAEd,OAAQ,cAAaU,IAAI,CAACK,GAAI,EADmB,EAEpDJ,UAFoD,CAAtD;AAIA,WAAOE,WAAP;AACD,GATD,CASE,OAAOT,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAfM;AAiBP,OAAO,MAAMY,UAAU,GAAG,MACxBD,GADwB,IAEgB;AACxC,MAAI;AACF,UAAME,WAAuC,GAAG,MAAMlB,KAAK,CAACmB,MAAN,CACnD,GAAElB,OAAQ,gBAAee,GAAI,EADsB,CAAtD;AAGA,WAAOE,WAAP;AACD,GALD,CAKE,OAAOb,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXM","sourcesContent":["import axios, { AxiosResponse } from 'axios'\r\n\r\nconst baseUrl: string = 'http://localhost:4000'\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + '/todos'\r\n    )\r\n    return todos\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\nexport const getLongestName = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const longest: AxiosResponse<ApiDataType> = await axios.post(\r\n        baseUrl + '/todos-long'\r\n    )\r\n    return longest\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n// export const addTodo = async (\r\n//   formData: ITodo\r\n// ): Promise<AxiosResponse<ApiDataType>> => {\r\n//   try {\r\n//     const todo: Omit<ITodo, '_id'> = {\r\n//       name: formData.name,\r\n//       description: formData.description,\r\n//       status: false\r\n//     }\r\n//     const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\r\n//       baseUrl + '/add-todo',\r\n//       todo\r\n//     )\r\n//     return saveTodo\r\n//   } catch (error) {\r\n//     throw new Error(error)\r\n//   }\r\n// }\r\n\r\nexport const updateTodo = async (\r\n  todo: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todoUpdate: Pick<ITodo, 'status'> = {\r\n      status: true,\r\n    }\r\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\r\n      `${baseUrl}/edit-todo/${todo._id}`,\r\n      todoUpdate\r\n    )\r\n    return updatedTodo\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const deleteTodo = async (\r\n  _id: string\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\r\n      `${baseUrl}/delete-todo/${_id}`\r\n    )\r\n    return deletedTodo\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}