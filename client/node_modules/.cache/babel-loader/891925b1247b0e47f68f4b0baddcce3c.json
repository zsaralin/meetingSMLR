{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\MyTimer.tsx\";\nimport React from 'react';\nimport { useState } from 'react';\n\nconst MyTimer = props => {\n  const [time, setTime] = useState({\n    ms: 0,\n    s: 0,\n    m: 0\n  });\n  const [interv, setInterv] = useState();\n  const [status, setStatus] = useState(0); // Not started = 0\n  // started = 1\n  // stopped = 2\n\n  const start = () => {\n    run();\n    setStatus(1);\n    setInterv(setInterval(run, 10));\n  };\n\n  var updatedMs = time.ms,\n      updatedS = time.s,\n      updatedM = time.m,\n      updatedH = time.h;\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n\n    if (updatedMs === 100) {\n      updatedS++;\n      updatedMs = 0;\n    }\n\n    updatedMs++;\n    return setTime({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM\n    });\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setStatus(2);\n  };\n\n  const reset = () => {\n    clearInterval(interv);\n    setStatus(0);\n    setTime({\n      ms: 0,\n      s: 0,\n      m: 0,\n      h: 0\n    });\n  };\n\n  const resume = () => start();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 43\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \" - min \"));\n};\n\nexport default MyTimer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/MyTimer.tsx"],"names":["React","useState","MyTimer","props","time","setTime","ms","s","m","interv","setInterv","status","setStatus","start","run","setInterval","updatedMs","updatedS","updatedM","updatedH","h","stop","clearInterval","reset","resume","fontSize","marginTop","active","done"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAA2B,OAA3B;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAGV;AACF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAACK,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,CAAC,EAAC,CAAT;AAAYC,IAAAA,CAAC,EAAC;AAAd,GAAD,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,CAAD,CAApC,CAHE,CAIF;AACA;AACA;;AAEA,QAAMY,KAAK,GAAG,MAAM;AAChBC,IAAAA,GAAG;AACHF,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAF,IAAAA,SAAS,CAACK,WAAW,CAACD,GAAD,EAAM,EAAN,CAAZ,CAAT;AACH,GAJD;;AAMA,MAAIE,SAAS,GAAGZ,IAAI,CAACE,EAArB;AAAA,MAAyBW,QAAQ,GAAGb,IAAI,CAACG,CAAzC;AAAA,MAA4CW,QAAQ,GAAGd,IAAI,CAACI,CAA5D;AAAA,MAA+DW,QAAQ,GAAGf,IAAI,CAACgB,CAA/E;;AAEA,QAAMN,GAAG,GAAG,MAAM;AACd,QAAGI,QAAQ,KAAK,EAAhB,EAAmB;AACfC,MAAAA,QAAQ;AACRD,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAGD,QAAQ,KAAK,EAAhB,EAAmB;AACfC,MAAAA,QAAQ;AACRD,MAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,QAAGD,SAAS,KAAK,GAAjB,EAAqB;AACjBC,MAAAA,QAAQ;AACRD,MAAAA,SAAS,GAAG,CAAZ;AACH;;AACDA,IAAAA,SAAS;AACT,WAAOX,OAAO,CAAC;AAACC,MAAAA,EAAE,EAACU,SAAJ;AAAeT,MAAAA,CAAC,EAACU,QAAjB;AAA2BT,MAAAA,CAAC,EAACU;AAA7B,KAAD,CAAd;AACH,GAfD;;AAiBA,QAAMG,IAAI,GAAG,MAAM;AACfC,IAAAA,aAAa,CAACb,MAAD,CAAb;AACAG,IAAAA,SAAS,CAAC,CAAD,CAAT;AACH,GAHD;;AAKA,QAAMW,KAAK,GAAG,MAAM;AAChBD,IAAAA,aAAa,CAACb,MAAD,CAAb;AACAG,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAP,IAAAA,OAAO,CAAC;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,CAAC,EAAC,CAAT;AAAYC,MAAAA,CAAC,EAAC,CAAd;AAAiBY,MAAAA,CAAC,EAAC;AAAnB,KAAD,CAAP;AACH,GAJD;;AAMA,QAAMI,MAAM,GAAG,MAAMX,KAAK,EAA1B;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACY,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKvB,KAAK,CAACwB,MAAN,IAAgBxB,KAAK,CAACyB,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJR,CADJ;AASH,CAzDD;;AA2DA,eAAe1B,OAAf","sourcesContent":["import React from 'react'\r\nimport { useState,  } from 'react';\r\n\r\nconst MyTimer = (props:{ active: boolean, done: boolean,\r\n    callbackFromParent(listInfo: number): void\r\n    // callbackFromParentMil(listInfo: number): void;\r\n}) => {\r\n    const [time, setTime] = useState({ms:0, s:0, m:0});\r\n    const [interv, setInterv] = useState();\r\n    const [status, setStatus] = useState(0);\r\n    // Not started = 0\r\n    // started = 1\r\n    // stopped = 2\r\n\r\n    const start = () => {\r\n        run();\r\n        setStatus(1);\r\n        setInterv(setInterval(run, 10));\r\n    };\r\n\r\n    var updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\r\n\r\n    const run = () => {\r\n        if(updatedM === 60){\r\n            updatedH++;\r\n            updatedM = 0;\r\n        }\r\n        if(updatedS === 60){\r\n            updatedM++;\r\n            updatedS = 0;\r\n        }\r\n        if(updatedMs === 100){\r\n            updatedS++;\r\n            updatedMs = 0;\r\n        }\r\n        updatedMs++;\r\n        return setTime({ms:updatedMs, s:updatedS, m:updatedM});\r\n    };\r\n\r\n    const stop = () => {\r\n        clearInterval(interv);\r\n        setStatus(2);\r\n    };\r\n\r\n    const reset = () => {\r\n        clearInterval(interv);\r\n        setStatus(0);\r\n        setTime({ms:0, s:0, m:0, h:0})\r\n    };\r\n\r\n    const resume = () => start();\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%',\r\n        }}>\r\n            {props.active || props.done ? <div>\r\n                </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyTimer;"]},"metadata":{},"sourceType":"module"}