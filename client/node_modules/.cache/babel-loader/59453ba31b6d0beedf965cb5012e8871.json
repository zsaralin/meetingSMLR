{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Presenter from './components/Presenter';\nimport AddPres from './components/AddPres';\nimport Bonus from \"./components/Bonus\";\nimport Header from \"./components/Header\";\nimport Settings from \"./components/Settings\";\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getPresDatabase, addPres, deletePres, getMeetingLen, postMeetingLen } from './API';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; // @ts-ignore\n\nimport audio from './fanfare.mp3';\nlet trumpetSound = new Audio(audio);\ntrumpetSound.muted = true;\nconst ws = new WebSocket(\"ws://localhost:8000\"); //shuffle array of participants so order of meeting isn't the same for every meeting\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nconst useKeyPress = function (targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  function upHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nconst App = () => {\n  const downPress = useKeyPress(\"ArrowDown\");\n  const upPress = useKeyPress(\"ArrowUp\");\n  const [pres, setPres] = useState([]); //array of presenters\n\n  const [selected, setSelected] = useState(); //active presenter\n\n  const [before, setBefore] = useState(); //previous active presenter\n\n  const [cursor, setCursor] = useState(-1); //index of active presenter\n\n  const [realTime, setTime] = useState(0); //index of pres that time is currently being taken from\n\n  const [lastIndex, setLastIndex] = useState(0); //time that has been subtracted from pres when active pres is overtime\n\n  const [amountSubtract, setAmountSubtract] = useState(0); //total (compressed) time of all presenters\n\n  const [totTime, setTotTime] = useState(0); //difference between meeting len and total time of presenters\n\n  const [diff, setDiff] = useState(0);\n  const [compressIndex, setCompressIndex] = useState(cursor + 1);\n  const [meetingLen, setMeetingLen] = useState(0);\n  const [tempMeeting, setTempMeeting] = useState();\n  const [origBonus, setOrigBonus] = useState(0);\n  const [bonusTime, setBonus] = useState(0); //boolean values to display menu/dropdown text\n\n  const [meetingLenMenu, setMeetingLenMenu] = useState(false);\n  const [addPresMenu, setAddPresMenu] = useState(false);\n  const [presenterWarning, setPresenterWarning] = useState(false);\n  ws.addEventListener('open', function () {\n    console.log(\"Connected to server\");\n  });\n\n  ws.onmessage = event => {\n    if (event.data === 'downPress') {\n      downPressFn();\n    } else if (event.data === 'upPress') {\n      upPressFn();\n    } else if (event.data === 'refresh') {\n      window.location.reload();\n    } else if (JSON.parse(event.data).name === 'deletePres') {\n      const object = JSON.parse(event.data);\n      deletePresHelper(object.index);\n    } else if (JSON.parse(event.data).name === 'addPres') {\n      const object = JSON.parse(event.data);\n      addPresHelper(object.newPres);\n    } else if (JSON.parse(event.data).name === 'meetingLen') {\n      const object = JSON.parse(event.data);\n      setMeetingLen(object.meetingLen * 1000);\n    } else if (JSON.parse(event.data).name === 'presOrder') {\n      const object = JSON.parse(event.data);\n      setPres(object.pres);\n    }\n  }; //drag and drop presenters\n\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null || destination.index < source.index && destination.index <= cursor) {\n      window.scrollTo(0, 0);\n      return null;\n    } // Make sure we're actually moving the item\n\n\n    if (destination.index === source.index) {\n      window.scrollTo(0, 0);\n      return null;\n    } // Move the item within the list\n    // Start by making a new list without the dragged item\n\n\n    const newList = pres.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, pres[source.index]); // Update the list\n\n    setPres(newList); //send new order to all clients\n\n    const msg = {\n      name: \"presOrder\",\n      pres: newList\n    };\n    ws.send(JSON.stringify(msg));\n    window.scrollTo(0, 0);\n  };\n\n  const toggleMeetingLenMenu = () => {\n    setMeetingLenMenu(!meetingLenMenu);\n\n    if (addPresMenu) {\n      setAddPresMenu(false);\n    }\n  };\n\n  const closeMenu = () => {\n    setMeetingLenMenu(false);\n    setAddPresMenu(false);\n  };\n\n  const toggleAddPresMenu = () => {\n    setAddPresMenu(!addPresMenu);\n\n    if (meetingLenMenu) {\n      setMeetingLenMenu(false);\n    }\n  };\n\n  const togglePresenterWarning = () => {\n    setPresenterWarning(!presenterWarning);\n  };\n\n  function getLongestName() {\n    let longest = '';\n\n    for (let i = 0; i < pres.length; i++) {\n      if (pres[i].name.length >= longest.length) {\n        longest = pres[i].name;\n      }\n    }\n\n    return longest.length;\n  } //returns special case text for addPres functionality\n\n\n  function dropDownText() {\n    if (cursor === pres.length && bonusTime > 0) {\n      return 'Unable to add presenters during bonus time';\n    } else {\n      return 'Presenter already in meeting!';\n    }\n  }\n\n  function playTrumpetSound() {\n    trumpetSound.muted = false;\n    const playPromise = trumpetSound.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(_ => {\n        console.log(\"audio played auto\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  } //if pres takes less than set time\n\n\n  function presUnderTime() {\n    if (selected !== undefined) {\n      if (selected.overtime === 0 && realTime < selected.time) {\n        let difference = selected.time - realTime;\n        let presDecreased = getTimeLost(); //if other pres are under time\n\n        if (presDecreased > 0) {\n          let subtract = Math.floor(difference / presDecreased); //increase subsequent pres that are under time (until they are back to their set times)\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            if (pres[i].time < pres[i].initTime) {\n              pres[i].time += subtract;\n              difference -= subtract;\n            }\n          }\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            while (difference > 0 && pres[i].time < pres[i].initTime) {\n              pres[i].time += 1;\n              difference -= 1;\n            }\n          }\n        }\n\n        setBonus(bonusTime + difference);\n        selected.extra += selected.time - realTime;\n      }\n    }\n  }\n\n  function beforeUnderTime() {\n    if (before !== undefined) {\n      //if slot before took less than designated time\n      if (before.extra > 0) {\n        let difference = before.extra;\n        let timeLost = getTimeLost();\n        before.extra = 0;\n\n        if (timeLost > 0) {\n          let subtract = Math.floor(difference / timeLost);\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            pres[i].time -= subtract;\n            difference -= subtract;\n          } //increase subsequent slots that are under time (until they are back to their set times)\n\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            while (difference > 0 && pres[i].time < pres[i].initTime) {\n              pres[i].time -= 1;\n              difference -= 1;\n            }\n          }\n        } else {\n          setBonus(bonusTime - difference);\n        }\n      }\n    }\n  }\n\n  function presOvertime() {\n    if (selected !== undefined) {\n      //if person goes overtime\n      if (realTime > Math.round(selected.time - selected.extra) && !(cursor === pres.length - 1 && bonusTime <= 0)) {\n        //increase selected.overtime so their box increases in size\n        //only increase box when there is bonusTime or other people's time left to take from\n        if (isTimeLeft() || bonusTime > 0) {\n          selected.overtime = realTime - Math.round(selected.time - selected.extra);\n        } //decrease other slots if bonusTime == 0\n\n\n        if (bonusTime < 100) {\n          if (isTimeLeft()) {\n            let reducedIndex = cursor + getLastIndex(); //index of presenter that time will be taken from\n\n            pres[reducedIndex].time -= 100;\n            setAmountSubtract(amountSubtract + 100);\n\n            if (amountSubtract === 1000) {\n              //when 1 minute has been taken from presenter, move to next presenter\n              setLastIndex(lastIndex + 1);\n              setAmountSubtract(0);\n            }\n          }\n        } else if (bonusTime >= 100) {\n          //decrease bonusTime\n          setBonus(bonusTime - 100);\n        }\n      }\n    }\n  } //time is taken from presenter with index = cursor + lastIndex when active pres is overtime\n\n\n  function getLastIndex() {\n    //reset lastIndex at 1 if reducedIndex >= pres.length\n    if (cursor + lastIndex >= pres.length) {\n      setLastIndex(1);\n      return lastIndex;\n    } //if presenter with index = cursor + lastIndex is <= 1 minute, begin taking time from next presenter\n    else if (cursor >= 0 && cursor + lastIndex < pres.length && pres[cursor + lastIndex].time <= 1000) {\n        setLastIndex(lastIndex + 1);\n        return lastIndex;\n      } else {\n        return lastIndex;\n      }\n  } //when down key is pressed\n\n\n  function downPressFn() {\n    //play sound only when meeting starts (cursor = -1 --> cursor = 0)\n    if (cursor === -1) {\n      playTrumpetSound();\n    }\n\n    setLastIndex(1);\n    presUnderTime();\n\n    if (cursor < pres.length) {\n      setCursor(prevState => prevState < pres.length ? prevState + 1 : prevState);\n    } else {\n      setCursor(pres.length + 1);\n    }\n\n    setBefore(pres[cursor]);\n    setSelected(pres[cursor + 1]);\n  } //when up key is pressed\n\n\n  function upPressFn() {\n    setLastIndex(1);\n    beforeUnderTime();\n    setBefore(pres[cursor - 2]);\n    setCursor(prevState => prevState > 0 ? prevState - 1 : prevState);\n    setSelected(pres[cursor - 1]);\n  } //set time of each presenter back to original non compressed time\n\n\n  function resetPres() {\n    for (let i = 0; i < pres.length; i++) {\n      pres[i].initTime = pres[i].nonCompressedTime;\n      pres[i].time = pres[i].nonCompressedTime;\n    }\n\n    setTotTime(getTotTime());\n  } //get time from presenter\n\n\n  const timeCallback = presenterTime => {\n    setTime(presenterTime);\n  }; //compress time of presenters if meetingLen< total time of presenters\n\n\n  function compressPres() {\n    if (pres[compressIndex] !== undefined) {\n      if (pres[compressIndex].time > 1000) {\n        pres[compressIndex].initTime -= 1000;\n        pres[compressIndex].time -= 1000;\n        setDiff(diff - 1000);\n      }\n\n      setCompressIndex(compressIndex + 1);\n\n      if (compressIndex === pres.length - 1) {\n        setCompressIndex(cursor + 1);\n      }\n    }\n\n    setTotTime(getTotTime());\n  } //returns total (compressed) time of presenters\n\n\n  const getTotTime = () => {\n    let totTime = 0;\n\n    for (let i = 0; i < pres.length; i++) {\n      totTime += pres[i].time + pres[i].overtime - pres[i].extra;\n    }\n\n    return totTime;\n  }; //returns true if any presenter has time > 1 minute\n\n\n  const isTimeLeft = () => {\n    for (let i = cursor + 1; i < pres.length; i++) {\n      if (pres[i].time > 1000) {\n        return true;\n      }\n    }\n\n    return false;\n  }; //returns total time lost for all presenters (from people going overtime)\n\n\n  const getTimeLost = () => {\n    let timeLost = 0;\n\n    for (let i = cursor + 1; i < pres.length; i++) {\n      if (pres[i].initTime > pres[i].time) {\n        timeLost += pres[i].initTime - pres[i].time;\n      }\n    }\n\n    return timeLost;\n  };\n\n  useEffect(() => {\n    //get meeting length and presenters at start\n    fetchMeetingLen();\n  }, []);\n  useEffect(() => {\n    //get meeting length and presenters at start\n    fetchPres();\n  }, []);\n  useEffect(() => {\n    //when delete/add pres, get and set new total time\n    setTotTime(getTotTime());\n  }, [pres]);\n  useEffect(() => {\n    if (meetingLen > totTime) {\n      //set bonus time\n      setOrigBonus(meetingLen - totTime);\n      setDiff(0);\n    } else {\n      setOrigBonus(0); //set diff to trigger compressPres\n\n      if (meetingLen < totTime) {\n        setDiff(totTime - meetingLen);\n      }\n    }\n  }, [totTime, meetingLen]);\n  useEffect(() => {\n    if (diff > 0 && totTime !== pres.length * 1000) {\n      compressPres();\n    }\n  }, [compressIndex, diff]);\n  useEffect(() => {\n    setCompressIndex(0); //reset start index for compress pres\n\n    resetPres(); //reset pres times when meeting len changes\n  }, [meetingLen]);\n  useEffect(() => {\n    //set bonusTime when origBonus changes\n    setBonus(origBonus);\n  }, [origBonus]);\n  useEffect(() => {\n    presOvertime(); //\n  }, [realTime]);\n  useEffect(() => {\n    //refresh all clients if admin refreshes\n    window.onbeforeunload = () => {\n      if (window.location.pathname === '/admin') {\n        ws.send('refresh');\n      }\n    };\n  });\n  useEffect(() => {\n    if (presenterWarning) {\n      setTimeout(() => {\n        togglePresenterWarning();\n      }, 1000);\n    }\n  }, [presenterWarning]); //returns height (in percent) of presenter's slot\n\n  const getHeight = presenter => {\n    let height = presenter.time - presenter.extra + presenter.overtime;\n    height = height / (totTime + bonusTime) * 100;\n\n    if (height < 6.5) {\n      return 6.5; //minimum height\n    }\n\n    return height;\n  }; //delete pres in database\n\n\n  const handleDeletePres = (_id, index) => {\n    deletePres(_id).then(({\n      status\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Presenter not deleted');\n      } else {\n        //send index of deleted pres to all clients\n        const msg = {\n          name: \"deletePres\",\n          index: index\n        };\n        ws.send(JSON.stringify(msg));\n      }\n    }).catch(err => console.log(err));\n  }; //delete pres in frontend\n\n\n  const deletePresHelper = index => {\n    pres.splice(index, 1);\n    setPres(pres);\n    resetPres(); //ensure same order of presenters after pres is deleted\n\n    const msg = {\n      name: \"presOrder\",\n      pres: pres\n    };\n    ws.send(JSON.stringify(msg));\n  }; //only admin can control the meeting with up/down keys\n\n\n  useEffect(() => {\n    if (downPress && window.location.pathname === '/admin') {\n      ws.send('downPress');\n    }\n  }, [downPress]);\n  useEffect(() => {\n    if (upPress && window.location.pathname === '/admin') {\n      ws.send('upPress');\n    }\n  }, [upPress]); //get pres from database, and shuffle order\n\n  const fetchPres = () => {\n    getPresDatabase().then(({\n      data: {\n        pres\n      }\n    }) => shufflePres(pres)).catch(err => console.log(err));\n  }; //shuffle pres\n\n\n  function shufflePres(inputPres) {\n    //hardcoded arrays\n    let interns = ['Daron', 'Srishti', 'Matthew', 'Vikram', 'Saralin', 'Damien', 'Tobias', 'Karthik', 'Michael'];\n    let fullTimers = ['Jo', 'Kendra', 'Qian', 'Bon', 'David', 'Frederik'];\n    let finalWord = ['Fraser', 'Justin'];\n    let namesList = [];\n    let finalList = [];\n    let presList = [];\n    let otherList = []; //presenters not in hardcoded arrays\n    //shuffle each array\n\n    shuffleArray(interns);\n    shuffleArray(fullTimers);\n    shuffleArray(finalWord); //combine 3 arrays into one\n\n    let orderedList = interns.concat(fullTimers, finalWord);\n    inputPres.forEach(element => {\n      if (orderedList.includes(element.name)) {\n        namesList.push(element.name);\n        presList.push(element);\n      } else {\n        otherList.push(element);\n      }\n    }); //add other presenters (not in hardcoded arrays) to final list\n\n    otherList.forEach(element => {\n      finalList.push(element);\n    });\n\n    for (let i = 0; i < orderedList.length; i++) {\n      if (namesList.includes(orderedList[i])) {\n        let file = presList[namesList.indexOf(orderedList[i])];\n        finalList.push(file);\n      }\n    }\n\n    for (let i = 0; i < finalList.length; i++) {\n      minToSec(finalList[i]);\n    }\n\n    setPres(finalList); //send order of presenters to each client\n\n    const msg = {\n      name: \"presOrder\",\n      pres: finalList\n    };\n    ws.send(JSON.stringify(msg));\n  } //convert time (minutes in DB) to seconds\n\n\n  function minToSec(pres) {\n    pres.time = pres.time * 1000;\n    pres.initTime = pres.initTime * 1000;\n    pres.nonCompressedTime = pres.nonCompressedTime * 1000;\n  } //get meetingLen from database, set meetingLen in seconds\n\n\n  function fetchMeetingLen() {\n    getMeetingLen().then(({\n      data: {\n        meetingLen\n      }\n    }) => setMeetingLen(meetingLen * 1000)).catch(err => console.log(err));\n  } //update meetingLen in database, set meetingLen in seconds\n\n\n  const updateMeetingLen = meetingLen => {\n    if (meetingLen !== undefined) {\n      postMeetingLen(meetingLen).then(response => {\n        console.log(response);\n      });\n      setMeetingLen(meetingLen * 1000);\n      setTempMeeting(undefined);\n      setMeetingLenMenu(false); //send new meetingLen to each client\n\n      const msg = {\n        name: \"meetingLen\",\n        meetingLen: meetingLen\n      };\n      ws.send(JSON.stringify(msg));\n    }\n  };\n\n  const handleForm = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      updateMeetingLen(tempMeeting);\n    }\n  };\n\n  const handleFormOnSubmit = e => {\n    e.preventDefault();\n    updateMeetingLen(tempMeeting);\n  };\n\n  const handleAddPres = (e, formData) => {\n    e.preventDefault();\n    let presNames = pres.map(a => a.name); //array of pres names\n    //if new presenter name does not already exist in pres array AND bonus time is not active --> add pres\n\n    if (!presNames.includes(formData.name) && !(cursor === pres.length && bonusTime > 0)) {\n      addPres(formData).then(({\n        status,\n        data\n      }) => {\n        if (status !== 201) {\n          throw new Error('Error! Presenter not saved');\n        } else if (data.presenter) {\n          const msg = {\n            name: \"addPres\",\n            newPres: data.presenter\n          };\n          ws.send(JSON.stringify(msg));\n        }\n      }).catch(err => console.log(err));\n    } else {\n      //display warning as either presenter name is not unique, or bonus time is active\n      togglePresenterWarning();\n    }\n  }; //add pres to frontend\n\n\n  const addPresHelper = newPres => {\n    minToSec(newPres); //convert time to seconds\n\n    pres.push(newPres); //add new pres to pres array\n\n    setPres(pres); //update state of pres array\n\n    const msg = {\n      name: \"presOrder\",\n      pres: pres\n    }; //send new order of presenters to each client\n\n    ws.send(JSON.stringify(msg));\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"presWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    meetingLen: meetingLen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }, provided => {\n    // const style = {...provided.droppableProps,};\n    return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n      className: \"pres\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 45\n      }\n    }), pres.map((presenter, index) => /*#__PURE__*/React.createElement(Presenter, {\n      admin: false,\n      key: presenter._id,\n      presenter: presenter,\n      deletePresApp: handleDeletePres,\n      index: index,\n      active: index === cursor,\n      done: index < cursor,\n      callbackFromParent: timeCallback,\n      height: getHeight(presenter),\n      bonusTime: bonusTime,\n      longestName: getLongestName(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 53\n      }\n    })), provided.placeholder, /*#__PURE__*/React.createElement(Bonus, {\n      origBonus: origBonus,\n      time: bonusTime,\n      active: cursor === pres.length,\n      done: cursor === pres.length + 1,\n      height: bonusTime / (totTime + bonusTime) * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 49\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"meetingLen1\",\n    onSubmit: handleFormOnSubmit,\n    style: {\n      display: !meetingLenMenu ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 33\n    }\n  }, \" Meeting Length:\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputMeetingLen\",\n    onKeyDown: handleForm,\n    onSubmit: handleFormOnSubmit,\n    type: meetingLenMenu ? \"number\" : \"string\",\n    onChange: e => setTempMeeting(e.target.value),\n    value: tempMeeting || \"\",\n    id: \"meetingLen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 37\n    }\n  }), \" min\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttonStyle\",\n    disabled: tempMeeting === undefined,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 33\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"xOutMeetingLen\",\n    onClick: toggleMeetingLenMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 33\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meetingLenWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meetingLen\",\n    style: {\n      display: !addPresMenu ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(AddPres, {\n    savePres: handleAddPres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"xOutMeetingLen\",\n    onClick: toggleAddPresMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 37\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meetingLen\",\n    style: {\n      width: '13%',\n      opacity: !presenterWarning ? 0 : '100%',\n      transition: !presenterWarning ? 'opacity 5s' : 'opacity 1s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 33\n    }\n  }, \" \", dropDownText())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"presWrapper\",\n    onClick: closeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    meetingLen: meetingLen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 33\n    }\n  }, provided => {\n    const style = { ...provided.droppableProps\n    };\n    return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n      className: \"pres\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 45\n      }\n    }), pres.map((presenter, index) => /*#__PURE__*/React.createElement(Presenter, {\n      admin: true,\n      key: presenter._id,\n      presenter: presenter,\n      deletePresApp: handleDeletePres,\n      index: index,\n      active: index === cursor,\n      done: index < cursor,\n      callbackFromParent: timeCallback,\n      height: getHeight(presenter),\n      bonusTime: bonusTime,\n      longestName: getLongestName(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 53\n      }\n    })), provided.placeholder, /*#__PURE__*/React.createElement(Bonus, {\n      origBonus: origBonus,\n      time: bonusTime,\n      active: cursor === pres.length,\n      done: cursor === pres.length + 1,\n      height: bonusTime / (totTime + bonusTime) * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 49\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Settings, {\n    toggleMeetingLenMenu: toggleMeetingLenMenu,\n    toggleAddPresMenu: toggleAddPresMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","Presenter","AddPres","Bonus","Header","Settings","DragDropContext","Droppable","getPresDatabase","addPres","deletePres","getMeetingLen","postMeetingLen","BrowserRouter","Router","Route","Switch","audio","trumpetSound","Audio","muted","ws","WebSocket","shuffleArray","array","i","length","j","Math","floor","random","temp","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","App","downPress","upPress","pres","setPres","selected","setSelected","before","setBefore","cursor","setCursor","realTime","setTime","lastIndex","setLastIndex","amountSubtract","setAmountSubtract","totTime","setTotTime","diff","setDiff","compressIndex","setCompressIndex","meetingLen","setMeetingLen","tempMeeting","setTempMeeting","origBonus","setOrigBonus","bonusTime","setBonus","meetingLenMenu","setMeetingLenMenu","addPresMenu","setAddPresMenu","presenterWarning","setPresenterWarning","console","log","onmessage","event","data","downPressFn","upPressFn","location","reload","JSON","parse","name","object","deletePresHelper","index","addPresHelper","newPres","onDragEnd","source","destination","undefined","scrollTo","newList","filter","_","idx","splice","msg","send","stringify","toggleMeetingLenMenu","closeMenu","toggleAddPresMenu","togglePresenterWarning","getLongestName","longest","dropDownText","playTrumpetSound","playPromise","play","then","catch","error","presUnderTime","overtime","time","difference","presDecreased","getTimeLost","subtract","initTime","extra","beforeUnderTime","timeLost","presOvertime","round","isTimeLeft","reducedIndex","getLastIndex","prevState","resetPres","nonCompressedTime","getTotTime","timeCallback","presenterTime","compressPres","fetchMeetingLen","fetchPres","onbeforeunload","pathname","setTimeout","getHeight","presenter","height","handleDeletePres","_id","status","Error","err","shufflePres","inputPres","interns","fullTimers","finalWord","namesList","finalList","presList","otherList","orderedList","concat","forEach","element","includes","push","file","indexOf","minToSec","updateMeetingLen","response","handleForm","e","preventDefault","handleFormOnSubmit","handleAddPres","formData","presNames","map","a","provided","droppableProps","innerRef","style","placeholder","display","target","value","width","opacity","transition"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Presenter from './components/Presenter'\r\nimport AddPres from './components/AddPres'\r\nimport Bonus from \"./components/Bonus\";\r\nimport Header from \"./components/Header\";\r\nimport Settings from \"./components/Settings\";\r\n\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\nimport {getPresDatabase, addPres, deletePres, getMeetingLen, postMeetingLen} from './API'\r\nimport {BrowserRouter as Router, Route, Switch,} from \"react-router-dom\";\r\n\r\n// @ts-ignore\r\nimport audio from './fanfare.mp3';\r\nlet trumpetSound = new Audio(audio);\r\ntrumpetSound.muted = true;\r\n\r\nconst ws = new WebSocket(\"ws://localhost:8000\");\r\n\r\n//shuffle array of participants so order of meeting isn't the same for every meeting\r\nfunction shuffleArray(array: any) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nconst useKeyPress = function (targetKey: string) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    function downHandler({key}: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n\r\n    function upHandler({key}: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    },);\r\n    return keyPressed;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n    const downPress = useKeyPress(\"ArrowDown\");\r\n    const upPress = useKeyPress(\"ArrowUp\");\r\n\r\n    const [pres, setPres] = useState<IPresenter[]>([]); //array of presenters\r\n\r\n    const [selected, setSelected] = useState<IPresenter>(); //active presenter\r\n    const [before, setBefore] = useState<IPresenter>(); //previous active presenter\r\n\r\n    const [cursor, setCursor] = useState<number>(-1); //index of active presenter\r\n\r\n    const [realTime, setTime] = useState<number>(0);\r\n\r\n    //index of pres that time is currently being taken from\r\n    const [lastIndex, setLastIndex] = useState<number>(0);\r\n    //time that has been subtracted from pres when active pres is overtime\r\n    const [amountSubtract, setAmountSubtract] = useState<number>(0);\r\n\r\n    //total (compressed) time of all presenters\r\n    const [totTime, setTotTime] = useState<number>(0);\r\n\r\n    //difference between meeting len and total time of presenters\r\n    const [diff, setDiff] = useState<number>(0);\r\n    const [compressIndex, setCompressIndex] = useState<number>(cursor + 1);\r\n\r\n    const [meetingLen, setMeetingLen] = useState<number>(0);\r\n    const [tempMeeting, setTempMeeting] = useState<number>();\r\n\r\n    const [origBonus, setOrigBonus] = useState<number>(0);\r\n    const [bonusTime, setBonus] = useState<number>(0);\r\n\r\n    //boolean values to display menu/dropdown text\r\n    const [meetingLenMenu, setMeetingLenMenu] = useState(false);\r\n    const [addPresMenu, setAddPresMenu] = useState(false);\r\n    const [presenterWarning, setPresenterWarning] = useState(false);\r\n\r\n    ws.addEventListener('open', function () {\r\n        console.log(\"Connected to server\");\r\n    });\r\n    ws.onmessage = (event) => {\r\n        if (event.data === 'downPress') {\r\n            downPressFn();\r\n        } else if (event.data === 'upPress') {\r\n            upPressFn();\r\n        } else if (event.data === 'refresh') {\r\n            window.location.reload();\r\n        } else if (JSON.parse(event.data).name === 'deletePres') {\r\n            const object = JSON.parse(event.data);\r\n            deletePresHelper(object.index)\r\n        } else if (JSON.parse(event.data).name === 'addPres') {\r\n            const object = JSON.parse(event.data);\r\n            addPresHelper(object.newPres)\r\n        } else if (JSON.parse(event.data).name === 'meetingLen') {\r\n            const object = JSON.parse(event.data);\r\n            setMeetingLen(object.meetingLen * 1000)\r\n        } else if (JSON.parse(event.data).name === 'presOrder') {\r\n            const object = JSON.parse(event.data);\r\n            setPres(object.pres)\r\n        }\r\n    }\r\n    //drag and drop presenters\r\n    const onDragEnd = ({source, destination}: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null ||\r\n            (destination.index < source.index && destination.index <= cursor)) {\r\n            window.scrollTo(0, 0);\r\n            return null;\r\n        }\r\n        // Make sure we're actually moving the item\r\n        if (destination.index === source.index) {\r\n            window.scrollTo(0, 0);\r\n            return null;\r\n        }\r\n        // Move the item within the list\r\n        // Start by making a new list without the dragged item\r\n        const newList = pres.filter((_: any, idx: number) => idx !== source.index)\r\n        // Then insert the item at the right location\r\n        newList.splice(destination.index, 0, pres[source.index])\r\n        // Update the list\r\n        setPres(newList)\r\n        //send new order to all clients\r\n        const msg = {name: \"presOrder\", pres: newList}\r\n        ws.send(JSON.stringify(msg))\r\n        window.scrollTo(0, 0)\r\n    }\r\n    const toggleMeetingLenMenu = () => {\r\n        setMeetingLenMenu(!meetingLenMenu);\r\n        if (addPresMenu) {\r\n            setAddPresMenu(false)\r\n        }\r\n    }\r\n    const closeMenu = () => {\r\n        setMeetingLenMenu(false);\r\n        setAddPresMenu(false);\r\n    }\r\n    const toggleAddPresMenu = () => {\r\n        setAddPresMenu(!addPresMenu);\r\n        if (meetingLenMenu) {\r\n            setMeetingLenMenu(false)\r\n        }\r\n    }\r\n    const togglePresenterWarning = () => {\r\n        setPresenterWarning(!presenterWarning);\r\n    }\r\n\r\n    function getLongestName() {\r\n        let longest = '';\r\n        for (let i = 0; i < pres.length; i++) {\r\n            if (pres[i].name.length >= longest.length) {\r\n                longest = pres[i].name;\r\n            }\r\n        }\r\n        return longest.length;\r\n    }\r\n\r\n    //returns special case text for addPres functionality\r\n    function dropDownText() {\r\n        if ((cursor === pres.length && bonusTime > 0)) {\r\n            return 'Unable to add presenters during bonus time'\r\n        } else {\r\n            return 'Presenter already in meeting!'\r\n        }\r\n    }\r\n\r\n    function playTrumpetSound() {\r\n        trumpetSound.muted = false;\r\n        const playPromise = trumpetSound.play();\r\n        if (playPromise !== undefined) {\r\n            playPromise\r\n                .then(_ => {\r\n                    console.log(\"audio played auto\");\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n\r\n    //if pres takes less than set time\r\n    function presUnderTime() {\r\n        if (selected !== undefined) {\r\n            if (selected.overtime === 0 && realTime < selected.time) {\r\n                let difference = selected.time - realTime;\r\n                let presDecreased = getTimeLost();\r\n                //if other pres are under time\r\n                if (presDecreased > 0) {\r\n                    let subtract = Math.floor(difference / presDecreased)\r\n                    //increase subsequent pres that are under time (until they are back to their set times)\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        if (pres[i].time < pres[i].initTime) {\r\n                            pres[i].time += subtract;\r\n                            difference -= subtract;\r\n                        }\r\n                    }\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        while (difference > 0 && pres[i].time < pres[i].initTime) {\r\n                            pres[i].time += 1;\r\n                            difference -= 1;\r\n                        }\r\n                    }\r\n                }\r\n                setBonus(bonusTime + difference);\r\n\r\n                selected.extra += selected.time - realTime\r\n            }\r\n        }\r\n    }\r\n\r\n    function beforeUnderTime() {\r\n        if (before !== undefined) {\r\n            //if slot before took less than designated time\r\n            if (before.extra > 0) {\r\n                let difference = before.extra;\r\n                let timeLost = getTimeLost();\r\n                before.extra = 0;\r\n                if (timeLost > 0) {\r\n                    let subtract = Math.floor(difference / timeLost)\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        pres[i].time -= subtract;\r\n                        difference -= subtract;\r\n                    }\r\n                    //increase subsequent slots that are under time (until they are back to their set times)\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        while (difference > 0 && pres[i].time < pres[i].initTime) {\r\n                            pres[i].time -= 1;\r\n                            difference -= 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    setBonus(bonusTime - difference);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function presOvertime() {\r\n        if (selected !== undefined) {\r\n            //if person goes overtime\r\n            if (realTime > Math.round(selected.time - selected.extra) && !(cursor === pres.length - 1 && bonusTime <= 0)) {\r\n                //increase selected.overtime so their box increases in size\r\n                //only increase box when there is bonusTime or other people's time left to take from\r\n                if (isTimeLeft() || bonusTime > 0) {\r\n                    selected.overtime = (realTime - Math.round(selected.time - selected.extra));\r\n                }\r\n                //decrease other slots if bonusTime == 0\r\n                if (bonusTime < 100) {\r\n                    if (isTimeLeft()) {\r\n                        let reducedIndex = cursor + getLastIndex(); //index of presenter that time will be taken from\r\n                        pres[reducedIndex].time -= 100;\r\n                        setAmountSubtract(amountSubtract + 100)\r\n                        if (amountSubtract === 1000) { //when 1 minute has been taken from presenter, move to next presenter\r\n                            setLastIndex(lastIndex + 1);\r\n                            setAmountSubtract(0)\r\n                        }\r\n                    }\r\n                } else if (bonusTime >= 100) { //decrease bonusTime\r\n                    setBonus(bonusTime - 100)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //time is taken from presenter with index = cursor + lastIndex when active pres is overtime\r\n    function getLastIndex(){\r\n        //reset lastIndex at 1 if reducedIndex >= pres.length\r\n        if (cursor + lastIndex >= pres.length){\r\n            setLastIndex(1)\r\n            return lastIndex;\r\n        }\r\n        //if presenter with index = cursor + lastIndex is <= 1 minute, begin taking time from next presenter\r\n        else if (cursor >= 0 && (cursor + lastIndex) < pres.length && pres[cursor + lastIndex].time <= 1000) {\r\n            setLastIndex(lastIndex+1)\r\n            return lastIndex\r\n        }\r\n        else{\r\n            return lastIndex;\r\n        }\r\n    }\r\n    //when down key is pressed\r\n    function downPressFn() {\r\n        //play sound only when meeting starts (cursor = -1 --> cursor = 0)\r\n        if (cursor === -1) {\r\n            playTrumpetSound();\r\n        }\r\n        setLastIndex(1);\r\n        presUnderTime();\r\n        if (cursor < pres.length) {\r\n            setCursor(prevState =>\r\n                prevState < pres.length ? prevState + 1 : prevState)\r\n        } else {\r\n            setCursor(pres.length + 1);\r\n        }\r\n        setBefore(pres[cursor])\r\n        setSelected(pres[cursor + 1]);\r\n    }\r\n    //when up key is pressed\r\n    function upPressFn() {\r\n        setLastIndex(1);\r\n        beforeUnderTime();\r\n        setBefore(pres[cursor - 2]);\r\n        setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n        setSelected(pres[cursor - 1]);\r\n    }\r\n\r\n    //set time of each presenter back to original non compressed time\r\n    function resetPres() {\r\n        for (let i = 0; i < pres.length; i++) {\r\n            pres[i].initTime = pres[i].nonCompressedTime;\r\n            pres[i].time = pres[i].nonCompressedTime;\r\n        }\r\n        setTotTime(getTotTime())\r\n    }\r\n\r\n    //get time from presenter\r\n    const timeCallback = (presenterTime: number) => {\r\n        setTime(presenterTime);\r\n    }\r\n\r\n    //compress time of presenters if meetingLen< total time of presenters\r\n    function compressPres() {\r\n        if (pres[compressIndex] !== undefined) {\r\n            if (pres[compressIndex].time > 1000) {\r\n                pres[compressIndex].initTime -= 1000;\r\n                pres[compressIndex].time -= 1000;\r\n                setDiff(diff - 1000)\r\n            }\r\n            setCompressIndex(compressIndex + 1);\r\n            if (compressIndex === pres.length - 1) {\r\n                setCompressIndex(cursor + 1);\r\n            }\r\n        }\r\n        setTotTime(getTotTime());\r\n    }\r\n\r\n    //returns total (compressed) time of presenters\r\n    const getTotTime = () => {\r\n        let totTime = 0;\r\n        for (let i = 0; i < pres.length; i++) {\r\n            totTime += pres[i].time + pres[i].overtime - pres[i].extra;\r\n        }\r\n        return totTime;\r\n    }\r\n    //returns true if any presenter has time > 1 minute\r\n    const isTimeLeft = () => {\r\n        for (let i = cursor + 1; i < pres.length; i++) {\r\n            if (pres[i].time > 1000) {\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    //returns total time lost for all presenters (from people going overtime)\r\n    const getTimeLost = (): number => {\r\n        let timeLost = 0;\r\n        for (let i = cursor + 1; i < pres.length; i++) {\r\n            if (pres[i].initTime > pres[i].time) {\r\n                timeLost += pres[i].initTime - pres[i].time;\r\n            }\r\n        }\r\n        return timeLost;\r\n    }\r\n\r\n    useEffect(() => { //get meeting length and presenters at start\r\n        fetchMeetingLen()\r\n    }, [])\r\n    useEffect(() => { //get meeting length and presenters at start\r\n        fetchPres();\r\n    }, [])\r\n    useEffect(() => { //when delete/add pres, get and set new total time\r\n        setTotTime(getTotTime())\r\n    }, [pres])\r\n    useEffect(() => {\r\n        if (meetingLen > totTime) { //set bonus time\r\n            setOrigBonus(meetingLen - totTime);\r\n            setDiff(0)\r\n        } else {\r\n            setOrigBonus(0) //set diff to trigger compressPres\r\n            if (meetingLen < totTime) {\r\n                setDiff(totTime - meetingLen)\r\n            }\r\n        }\r\n    }, [totTime, meetingLen])\r\n    useEffect(() => {\r\n        if (diff > 0 && totTime !== pres.length * 1000) {\r\n            compressPres();\r\n        }\r\n    }, [compressIndex, diff])\r\n    useEffect(() => {\r\n        setCompressIndex(0) //reset start index for compress pres\r\n        resetPres(); //reset pres times when meeting len changes\r\n    }, [meetingLen])\r\n    useEffect(() => { //set bonusTime when origBonus changes\r\n        setBonus(origBonus)\r\n    }, [origBonus])\r\n    useEffect(() => {\r\n        presOvertime() //\r\n    }, [realTime])\r\n    useEffect(() => { //refresh all clients if admin refreshes\r\n        window.onbeforeunload = () => {\r\n            if (window.location.pathname === '/admin') {\r\n                ws.send('refresh')\r\n            }\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (presenterWarning) {\r\n            setTimeout(() => {\r\n                togglePresenterWarning();\r\n            }, 1000)\r\n        }\r\n    }, [presenterWarning])\r\n\r\n    //returns height (in percent) of presenter's slot\r\n    const getHeight = (presenter: IPresenter): number => {\r\n        let height = (presenter.time - presenter.extra + presenter.overtime);\r\n        height = height / (totTime + bonusTime) * 100\r\n        if (height < 6.5) {\r\n            return (6.5); //minimum height\r\n        }\r\n        return height;\r\n    }\r\n\r\n    //delete pres in database\r\n    const handleDeletePres = (_id: string, index: number): void => {\r\n        deletePres(_id)\r\n            .then(({status,}) => {\r\n                if (status !== 200) {\r\n                    throw new Error('Error! Presenter not deleted')\r\n                } else {\r\n                    //send index of deleted pres to all clients\r\n                    const msg = {name: \"deletePres\", index: index};\r\n                    ws.send(JSON.stringify(msg))\r\n                }\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n    //delete pres in frontend\r\n    const deletePresHelper = (index: number) => {\r\n        pres.splice(index, 1);\r\n        setPres(pres)\r\n        resetPres()\r\n        //ensure same order of presenters after pres is deleted\r\n        const msg = {name: \"presOrder\", pres: pres}\r\n        ws.send(JSON.stringify(msg))\r\n    }\r\n    //only admin can control the meeting with up/down keys\r\n    useEffect(() => {\r\n        if (downPress && window.location.pathname === '/admin') {\r\n            ws.send('downPress')\r\n        }\r\n    }, [downPress]);\r\n    useEffect(() => {\r\n        if (upPress && window.location.pathname === '/admin') {\r\n            ws.send('upPress')\r\n        }\r\n    }, [upPress]);\r\n\r\n    //get pres from database, and shuffle order\r\n    const fetchPres = (): void => {\r\n        getPresDatabase()\r\n            .then(({data: {pres}}: IPresenter[] | any) =>\r\n                shufflePres(pres))\r\n            .catch((err: Error) => console.log(err));\r\n    }\r\n    //shuffle pres\r\n    function shufflePres(inputPres: IPresenter[]) {\r\n        //hardcoded arrays\r\n        let interns = ['Daron', 'Srishti', 'Matthew', 'Vikram', 'Saralin', 'Damien', 'Tobias', 'Karthik', 'Michael']\r\n        let fullTimers = ['Jo', 'Kendra', 'Qian', 'Bon', 'David', 'Frederik']\r\n        let finalWord = ['Fraser', 'Justin']\r\n\r\n        let namesList: string[] = [];\r\n        let finalList: IPresenter[] = [];\r\n        let presList: IPresenter[] = [];\r\n        let otherList: IPresenter[] = []; //presenters not in hardcoded arrays\r\n\r\n        //shuffle each array\r\n        shuffleArray(interns);\r\n        shuffleArray(fullTimers);\r\n        shuffleArray(finalWord)\r\n        //combine 3 arrays into one\r\n        let orderedList = interns.concat(fullTimers, finalWord);\r\n\r\n        inputPres.forEach(element => {\r\n            if (orderedList.includes(element.name)) {\r\n                namesList.push(element.name);\r\n                presList.push(element)\r\n            } else {\r\n                otherList.push(element)\r\n            }\r\n        });\r\n        //add other presenters (not in hardcoded arrays) to final list\r\n        otherList.forEach(element => {\r\n            finalList.push(element);\r\n        });\r\n        for (let i = 0; i < orderedList.length; i++) {\r\n            if (namesList.includes(orderedList[i])) {\r\n                let file = presList[namesList.indexOf(orderedList[i])]\r\n                finalList.push(file);\r\n            }\r\n        }\r\n        for (let i = 0; i < finalList.length; i++) {\r\n            minToSec(finalList[i]);}\r\n\r\n        setPres(finalList);\r\n        //send order of presenters to each client\r\n        const msg = {name: \"presOrder\", pres: finalList}\r\n        ws.send(JSON.stringify(msg))\r\n    }\r\n\r\n    //convert time (minutes in DB) to seconds\r\n    function minToSec(pres: IPresenter){\r\n            pres.time = pres.time * 1000;\r\n            pres.initTime = pres.initTime * 1000;\r\n            pres.nonCompressedTime = pres.nonCompressedTime * 1000;\r\n    }\r\n    //get meetingLen from database, set meetingLen in seconds\r\n    function fetchMeetingLen() {\r\n        getMeetingLen()\r\n            .then(({data: {meetingLen}}: number | any) => setMeetingLen(meetingLen * 1000))\r\n            .catch((err: Error) => console.log(err));\r\n    }\r\n    //update meetingLen in database, set meetingLen in seconds\r\n    const updateMeetingLen = (meetingLen: number | undefined): void => {\r\n        if (meetingLen !== undefined) {\r\n            postMeetingLen(meetingLen).then(response => {\r\n                console.log(response)\r\n            });\r\n            setMeetingLen(meetingLen * 1000)\r\n            setTempMeeting(undefined);\r\n            setMeetingLenMenu(false)\r\n            //send new meetingLen to each client\r\n            const msg = {name: \"meetingLen\", meetingLen: meetingLen}\r\n            ws.send(JSON.stringify(msg))\r\n        }\r\n    }\r\n    const handleForm = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            updateMeetingLen(tempMeeting);\r\n        }\r\n    }\r\n    const handleFormOnSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        updateMeetingLen(tempMeeting);\r\n    }\r\n\r\n    const handleAddPres = (e: React.FormEvent, formData: IPresenter): void => {\r\n        e.preventDefault()\r\n        let presNames = pres.map(a => a.name); //array of pres names\r\n        //if new presenter name does not already exist in pres array AND bonus time is not active --> add pres\r\n        if (!presNames.includes(formData.name) && !(cursor === pres.length && bonusTime > 0)) {\r\n            addPres(formData)\r\n                .then(({status, data}) => {\r\n                    if (status !== 201) {\r\n                        throw new Error('Error! Presenter not saved')\r\n                    }\r\n                    else if (data.presenter) {\r\n                        const msg = {name: \"addPres\", newPres: data.presenter}\r\n                        ws.send(JSON.stringify(msg))\r\n                    }\r\n                })\r\n                .catch((err) => console.log(err))\r\n        }\r\n        else { //display warning as either presenter name is not unique, or bonus time is active\r\n            togglePresenterWarning()\r\n        }\r\n    }\r\n    //add pres to frontend\r\n    const addPresHelper = (newPres: IPresenter) => {\r\n        minToSec(newPres) //convert time to seconds\r\n        pres.push(newPres) //add new pres to pres array\r\n        setPres(pres) //update state of pres array\r\n        const msg = {name: \"presOrder\", pres: pres} //send new order of presenters to each client\r\n        ws.send(JSON.stringify(msg))\r\n    }\r\n    return (\r\n        <Router>\r\n            <main className='App'>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <DragDropContext onDragEnd={onDragEnd}>\r\n                            <div className='presWrapper'>\r\n                                <Header meetingLen = {meetingLen}/>\r\n                                <Droppable droppableId='col-1' isDropDisabled={true}>\r\n                                    {provided => {\r\n                                        // const style = {...provided.droppableProps,};\r\n                                        return (\r\n                                            <ul className=\"pres\"\r\n                                                {...provided.droppableProps} ref={provided.innerRef} style={style}>\r\n                                                {pres.map((presenter: IPresenter, index) => (\r\n                                                    <Presenter\r\n                                                        admin={false}\r\n                                                        key={presenter._id}\r\n                                                        presenter={presenter}\r\n                                                        deletePresApp={handleDeletePres}\r\n                                                        index={index}\r\n                                                        active={index === cursor}\r\n                                                        done={index < cursor}\r\n                                                        callbackFromParent={timeCallback}\r\n                                                        height={getHeight(presenter)}\r\n                                                        bonusTime={bonusTime}\r\n                                                        longestName={getLongestName()}\r\n                                                    />\r\n                                                ))}\r\n                                                {provided.placeholder}\r\n                                                <Bonus\r\n                                                    origBonus={origBonus} time={bonusTime}\r\n                                                    active={cursor === pres.length}\r\n                                                    done={cursor === pres.length + 1}\r\n                                                    height={(bonusTime) / (totTime + bonusTime) * 100}/>\r\n                                            </ul>)\r\n                                    }}\r\n\r\n                                </Droppable>\r\n                            </div>\r\n                        </DragDropContext>\r\n                    </Route>\r\n                    <Route exact path=\"/admin\">\r\n                        <DragDropContext onDragEnd={onDragEnd}>\r\n                            <form className=\"meetingLen1\" onSubmit={handleFormOnSubmit}\r\n                                  style={{display: !meetingLenMenu ? 'none' : ''}}>\r\n                                <label> Meeting Length:\r\n                                    <input className=\"inputMeetingLen\" onKeyDown={handleForm}\r\n                                           onSubmit={handleFormOnSubmit}\r\n                                           type={meetingLenMenu ? \"number\" : \"string\"}\r\n                                           onChange={(e: any) => setTempMeeting(e.target.value)}\r\n                                           value={tempMeeting || \"\"}\r\n                                           id='meetingLen'/> min\r\n                                </label>\r\n                                <button className=\"buttonStyle\" disabled={tempMeeting === undefined}\r\n                                        type='submit'>Submit\r\n                                </button>\r\n                                <button className=\"xOutMeetingLen\" onClick={toggleMeetingLenMenu}>x</button>\r\n                            </form>\r\n                            <div className=\"meetingLenWrapper\">\r\n                                <div className=\"meetingLen\" style={{display: !addPresMenu ? 'none' : ''}}>\r\n                                    <AddPres savePres={handleAddPres}/>\r\n                                    <button className=\"xOutMeetingLen\" onClick={toggleAddPresMenu}>x</button>\r\n                                </div>\r\n                                <div className='meetingLen'\r\n                                     style={{\r\n                                         width: '13%', opacity: !presenterWarning ? 0 : '100%', transition:\r\n                                             !presenterWarning ? 'opacity 5s' : 'opacity 1s'\r\n                                     }}> {dropDownText()}</div>\r\n                            </div>\r\n                            <div className='presWrapper' onClick={closeMenu}>\r\n                                <Header meetingLen = {meetingLen}/>\r\n                                <Droppable droppableId='col-1' isDropDisabled={false}>\r\n                                    {provided => {\r\n                                        const style = {\r\n                                            ...provided.droppableProps,\r\n                                        };\r\n                                        return (\r\n                                            <ul className=\"pres\"\r\n                                                {...provided.droppableProps} ref={provided.innerRef} style={style}>\r\n                                                {pres.map((presenter: IPresenter, index) => (\r\n                                                    <Presenter\r\n                                                        admin={true}\r\n                                                        key={presenter._id}\r\n                                                        presenter={presenter}\r\n                                                        deletePresApp={handleDeletePres}\r\n                                                        index={index}\r\n                                                        active={index === cursor}\r\n                                                        done={index < cursor}\r\n                                                        callbackFromParent={timeCallback}\r\n                                                        height={getHeight(presenter)}\r\n                                                        bonusTime={bonusTime}\r\n                                                        longestName={getLongestName()}\r\n                                                    />\r\n                                                ))}\r\n                                                {provided.placeholder}\r\n                                                <Bonus\r\n                                                    origBonus={origBonus} time={bonusTime}\r\n                                                    active={cursor === pres.length}\r\n                                                    done={cursor === pres.length + 1}\r\n                                                    height={(bonusTime) / (totTime + bonusTime) * 100}/>\r\n                                            </ul>)\r\n                                    }}\r\n\r\n                                </Droppable>\r\n                            </div>\r\n                            <Settings toggleMeetingLenMenu={toggleMeetingLenMenu} toggleAddPresMenu={toggleAddPresMenu}/>\r\n                        </DragDropContext>\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}