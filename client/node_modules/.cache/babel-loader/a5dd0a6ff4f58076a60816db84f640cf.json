{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { MdSettings } from 'react-icons/md';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getMeetingLen, getTodos } from './API';\nimport BonusItem from \"./components/BonusItem\"; // @ts-ignore\n\nconst useKeyPress = function (targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nconst App = () => {\n  const downPress = useKeyPress(\"ArrowDown\");\n  const upPress = useKeyPress(\"ArrowUp\");\n  const [todos, setTodos] = useState([]);\n  const [selected, setSelected] = useState();\n  const [before, setBefore] = useState();\n  const [cursor, setCursor] = useState(-1);\n  const [realTime, setTime] = useState(0);\n  const [nonZeroTime, setZero] = useState(0);\n  const [lastIndex, setLastIndex] = useState(1);\n  const [amountSubtract, setAmountSubtract] = useState(0);\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const toggleMenu = () => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const timeCallback = timerTime => {\n    if (timerTime != 0 && timerTime != prevTime) {\n      setZero(timerTime);\n    }\n\n    setTime(timerTime);\n  };\n\n  const getTodoTime = () => {\n    let todoTime = 0;\n\n    for (let i = 0; i < todos.length; i++) {\n      todoTime += todos[i].time + todos[i].overtime - todos[i].extra;\n    }\n\n    return todoTime;\n  };\n\n  const [todoTime, setTodoTime] = useState(0);\n  useEffect(() => {\n    setTodoTime(getTodoTime());\n  }, [todos]);\n  const [meetingLen, setMeetingLen] = useState(0);\n  const [origBonus, setOrigBonus] = useState(0);\n  useEffect(() => {\n    setOrigBonus(meetingLen - todoTime);\n  }, [todoTime, meetingLen]);\n  useEffect(() => {\n    setBonus(origBonus);\n  }, [origBonus]);\n  const [prevTime, setPrevTime] = useState(0);\n  useEffect(() => {\n    fetchTodos();\n    fetchMeetingLen();\n  }, []);\n  const [bonusTime, setBonus] = useState(0); // let origBonus = 5*1000;\n\n  useEffect(() => {\n    if (selected !== undefined) {\n      //if person goes overtime\n      if (realTime > Math.round(selected.time - selected.extra) && !(cursor === todos.length - 1 && bonusTime <= 0)) {\n        //increase selected.overtime so their box increases in size\n        //only increase box when there is bonusTime or other people's time left to take from\n        if (isTimeLeft() || bonusTime > 0) {\n          selected.overtime = realTime - Math.round(selected.time - selected.extra);\n        } //decrease other slots if bonusTime == 0\n\n\n        if (bonusTime < 100) {\n          if (isTimeLeft()) {\n            let reducedSlot2 = cursor + lastIndex;\n            todos[reducedSlot2].time -= 100;\n            setAmountSubtract(amountSubtract + 100);\n\n            if (amountSubtract == 1000) {\n              setLastIndex(lastIndex + 1);\n              setAmountSubtract(0);\n            }\n          }\n        } else if (bonusTime >= 100) {\n          //decrease bonusTime\n          setBonus(bonusTime - 100);\n        }\n      }\n    }\n  }, [realTime]);\n\n  const getPercent = todo => {\n    let percent = todo.time - todo.extra + todo.overtime;\n    percent = percent / (todoTime + bonusTime) * 100;\n\n    if (percent < 6.5) {\n      return 6.5;\n    }\n\n    return percent;\n  };\n\n  const isTimeLeft = () => {\n    for (let i = cursor + 1; i < todos.length; i++) {\n      if (todos[i].time > 1000) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const isSlotDecreased = () => {\n    let numDecreased = 0;\n\n    for (let i = cursor + 1; i < todos.length; i++) {\n      if (todos[i].initTime > todos[i].time) {\n        numDecreased += todos[i].initTime - todos[i].time;\n      }\n    }\n\n    return numDecreased;\n  };\n\n  let slotDecreased = isSlotDecreased();\n  useEffect(() => {\n    if (cursor + lastIndex >= todos.length && isTimeLeft()) {\n      setLastIndex(1);\n    }\n  }, [lastIndex]);\n  useEffect(() => {\n    if (cursor >= 0 && cursor + lastIndex < todos.length && todos[cursor + lastIndex].time <= 1000 && isTimeLeft()) {\n      setLastIndex(lastIndex + 1);\n    }\n  }, [lastIndex]);\n  useEffect(() => {\n    if (downPress) {\n      setLastIndex(1); // let trumpetSound = new Audio(audio);\n      // if(cursor == -1){trumpetSound.play()}\n\n      if (selected !== undefined) {\n        //if person takes less than set time\n        if (selected.overtime == 0 && nonZeroTime < selected.time) {\n          let difference = selected.time - nonZeroTime;\n          slotDecreased = isSlotDecreased();\n\n          if (slotDecreased > 0) {\n            let subtract = Math.floor(difference / slotDecreased); //increase subsequent slots that are under time (until they are back to their set times)\n\n            for (let i = cursor + 1; i < todos.length; i++) {\n              if (todos[i].time < todos[i].initTime) {\n                todos[i].time += subtract;\n                difference -= subtract;\n              }\n            }\n\n            for (let i = cursor + 1; i < todos.length; i++) {\n              while (difference > 0 && todos[i].time < todos[i].initTime) {\n                todos[i].time += 1;\n                difference -= 1;\n              }\n            }\n          }\n\n          setBonus(bonusTime + difference);\n          selected.extra += selected.time - nonZeroTime; // selected.time = nonZeroTime;\n        }\n      }\n\n      if (cursor < todos.length) {\n        setCursor(prevState => prevState < todos.length ? prevState + 1 : prevState);\n      } else {\n        setCursor(todos.length + 1);\n      }\n\n      setBefore(todos[cursor]);\n      setSelected(todos[cursor + 1]);\n    }\n  }, [downPress]);\n  useEffect(() => {\n    if (upPress) {\n      setLastIndex(1);\n      setPrevTime(nonZeroTime);\n\n      if (cursor === 0) {\n        window.location.reload();\n      }\n\n      setBefore(todos[cursor - 2]);\n\n      if (before !== undefined) {\n        //if slot before took less than designated time\n        if (before.extra > 0) {\n          let difference = before.extra;\n          before.extra = 0;\n\n          if (slotDecreased > 0) {\n            let subtract = Math.floor(difference / slotDecreased);\n\n            for (let i = cursor + 1; i < todos.length; i++) {\n              todos[i].time -= subtract;\n              difference -= subtract;\n            } //increase subsequent slots that are under time (until they are back to their set times)\n\n\n            for (let i = cursor + 1; i < todos.length; i++) {\n              while (difference > 0 && todos[i].time < todos[i].initTime) {\n                todos[i].time -= 1;\n                difference -= 1;\n              }\n            }\n          } else {\n            setBonus(bonusTime - difference);\n          } // selected.time = nonZeroTime;\n\n        }\n      }\n\n      setCursor(prevState => prevState > 0 ? prevState - 1 : prevState);\n      setSelected(todos[cursor - 1]);\n    }\n  }, [upPress]);\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null || destination.index < source.index && destination.index <= cursor) return null; // Make sure we're actually moving the item\n\n    if (destination.index === source.index) return null; // Move the item within the list\n    // Start by making a new list without the dragged item\n\n    const newList = todos.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, todos[source.index]); // Update the list\n\n    setTodos(newList);\n  };\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const fetchMeetingLen = () => {\n    getMeetingLen().then(({\n      data: {\n        meetingLen\n      }\n    }) => setMeetingLen(meetingLen * 1000)).catch(err => console.log(err));\n  };\n\n  const handleForm = e => {\n    if (e.key === 'Enter') {\n      setMeetingLen(e.currentTarget.value * 1000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meetingLen\",\n    style: {\n      display: !menuVisible ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, \" Meeting Length:\", /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputMeetingLen\",\n    onKeyDown: handleForm,\n    type: \"number\",\n    id: \"meetingLen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }), \" min\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"xOutMeetingLen\",\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    id: \"behindComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"origBonus = \", origBonus, \" bonusTime = \", bonusTime, \" meeting = \", meetingLen, \" todoTime = \", todoTime), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, provided => {\n    const style = {\n      // height: (todoTime - ((bonusTime) / (todoTime+bonusTime) * 100))/(todoTime) + '%' ,\n      color: 'black',\n      ...provided.droppableProps\n    };\n    return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n      className: \"characters\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }), todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo._id,\n      todo: todo,\n      index: index,\n      active: index === cursor,\n      done: index < cursor,\n      callbackFromParent2: timeCallback,\n      percent: getPercent(todo),\n      bonusTime: bonusTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 41\n      }\n    })), provided.placeholder, /*#__PURE__*/React.createElement(BonusItem, {\n      origBonus: origBonus,\n      time: bonusTime,\n      active: cursor === todos.length,\n      done: cursor === todos.length + 1,\n      percent: bonusTime / (todoTime + bonusTime) * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(MdSettings, {\n    size: 26,\n    color: \"rgb(200,200,200)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, \"Meeting length\"))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","MdSettings","DragDropContext","Droppable","getMeetingLen","getTodos","BonusItem","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","App","downPress","upPress","todos","setTodos","selected","setSelected","before","setBefore","cursor","setCursor","realTime","setTime","nonZeroTime","setZero","lastIndex","setLastIndex","amountSubtract","setAmountSubtract","menuVisible","setMenuVisible","toggleMenu","timeCallback","timerTime","prevTime","getTodoTime","todoTime","i","length","time","overtime","extra","setTodoTime","meetingLen","setMeetingLen","origBonus","setOrigBonus","setBonus","setPrevTime","fetchTodos","fetchMeetingLen","bonusTime","undefined","Math","round","isTimeLeft","reducedSlot2","getPercent","todo","percent","isSlotDecreased","numDecreased","initTime","slotDecreased","difference","subtract","floor","prevState","location","reload","onDragEnd","source","destination","index","newList","filter","_","idx","splice","then","data","catch","err","console","log","handleForm","e","currentTarget","value","display","provided","style","color","droppableProps","innerRef","map","_id","placeholder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport { MdSettings } from 'react-icons/md';\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\nimport {getMeetingLen, getTodos,} from './API'\r\nimport BonusItem from \"./components/BonusItem\";\r\n// @ts-ignore\r\nimport audio from './fanfare.mp3';\r\nconst useKeyPress = function(targetKey: string) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    function downHandler({ key }: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n    const upHandler = ({ key }: { key: string }) => {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    });\r\n    return keyPressed;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n    const downPress = useKeyPress(\"ArrowDown\");\r\n    const upPress = useKeyPress(\"ArrowUp\");\r\n\r\n\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const [selected, setSelected] = useState<ITodo>();\r\n    const [before, setBefore] = useState<ITodo>();\r\n\r\n    const [cursor, setCursor] = useState<number>(-1);\r\n\r\n    const [realTime, setTime] = useState<number>(0);\r\n    const [nonZeroTime, setZero] = useState<number>(0);\r\n\r\n    const [lastIndex, setLastIndex] = useState<number>(1);\r\n    const [amountSubtract, setAmountSubtract] = useState<number>(0);\r\n\r\n    const [menuVisible , setMenuVisible ] = useState(false);\r\n    const toggleMenu = () => {\r\n        setMenuVisible(!menuVisible);\r\n    }\r\n\r\n    const timeCallback = (timerTime: number) => {\r\n        if(timerTime != 0 && timerTime != prevTime){setZero(timerTime)}\r\n        setTime(timerTime);\r\n    }\r\n    const getTodoTime = (): number => {\r\n        let todoTime = 0;\r\n        for (let i = 0; i < todos.length; i++) {\r\n            todoTime += todos[i].time+todos[i].overtime - todos[i].extra;\r\n        }\r\n        return todoTime;\r\n    }\r\n    const [todoTime, setTodoTime] = useState<number>(0);\r\n    useEffect(() => {\r\n        setTodoTime(getTodoTime())\r\n    }, [todos])\r\n    const [meetingLen, setMeetingLen] = useState<number>(0);\r\n    const [origBonus, setOrigBonus] = useState<number>(0);\r\n    useEffect(() => {\r\n        setOrigBonus(meetingLen - todoTime);\r\n    }, [todoTime, meetingLen])\r\n    useEffect(() => {\r\n        setBonus(origBonus)\r\n    }, [origBonus])\r\n    const [prevTime, setPrevTime] = useState<number>(0);\r\n    useEffect(() => {\r\n        fetchTodos();\r\n        fetchMeetingLen()\r\n    }, [])\r\n    const [bonusTime, setBonus] = useState<number>(0);\r\n    // let origBonus = 5*1000;\r\n    useEffect(() => {\r\n        if (selected !== undefined) {\r\n            //if person goes overtime\r\n            if (realTime > Math.round(selected.time - selected.extra)  && !(cursor===todos.length-1 && bonusTime<=0)) {\r\n                //increase selected.overtime so their box increases in size\r\n                //only increase box when there is bonusTime or other people's time left to take from\r\n                if (isTimeLeft() || bonusTime>0) {\r\n                    selected.overtime = (realTime - Math.round(selected.time - selected.extra));\r\n                }\r\n                //decrease other slots if bonusTime == 0\r\n                    if (bonusTime <100){\r\n                        if(isTimeLeft()){\r\n                        let reducedSlot2 = cursor + lastIndex;\r\n                        todos[reducedSlot2].time -= 100;\r\n                        setAmountSubtract(amountSubtract+100)\r\n                        if(amountSubtract==1000){\r\n                            setLastIndex(lastIndex+1);\r\n                            setAmountSubtract(0)\r\n                        }}\r\n                    } else if(bonusTime>=100) {//decrease bonusTime\r\n                            setBonus(bonusTime-100)\r\n                        }\r\n                    }\r\n            }\r\n    },[realTime])\r\n\r\n\r\n\r\n    const getPercent = (todo: ITodo): number => {\r\n        let percent = (todo.time - todo.extra+todo.overtime);\r\n        percent = percent/(todoTime+bonusTime)*100\r\n        if(percent<6.5){\r\n            return (6.5);\r\n        }\r\n        return percent;\r\n    }\r\n\r\n    const isTimeLeft = () : boolean => {\r\n        for (let i = cursor + 1; i < todos.length; i++) {\r\n            if(todos[i].time > 1000){\r\n                return true}}\r\n        return false;\r\n    }\r\n\r\n    const isSlotDecreased = (): number => {\r\n        let numDecreased = 0;\r\n        for (let i = cursor + 1; i < todos.length; i++) {\r\n            if(todos[i].initTime>todos[i].time){\r\n            numDecreased += todos[i].initTime-todos[i].time;}\r\n            }\r\n        return numDecreased;\r\n    }\r\n    let slotDecreased = isSlotDecreased();\r\n    useEffect(() => {\r\n        if (cursor + lastIndex >= todos.length && isTimeLeft()) {\r\n            setLastIndex(1);\r\n        }\r\n    },[lastIndex])\r\n    useEffect(() => {\r\n        if(cursor >= 0 && (cursor + lastIndex) < todos.length && todos[cursor + lastIndex].time <= 1000 && isTimeLeft()){\r\n            setLastIndex(lastIndex+1)\r\n        }\r\n    },[lastIndex])\r\n    useEffect(() => {\r\n        if (downPress) {\r\n            setLastIndex(1);\r\n            // let trumpetSound = new Audio(audio);\r\n            // if(cursor == -1){trumpetSound.play()}\r\n            if(selected !== undefined) {\r\n                //if person takes less than set time\r\n                if (selected.overtime == 0 && nonZeroTime < (selected.time)) {\r\n                    let difference = selected.time - nonZeroTime;\r\n                    slotDecreased = isSlotDecreased()\r\n                    if(slotDecreased>0){\r\n                    let subtract = Math.floor(difference/slotDecreased)\r\n                    //increase subsequent slots that are under time (until they are back to their set times)\r\n                    for (let i = cursor + 1; i < todos.length; i++) {\r\n                        if(todos[i].time < todos[i].initTime){\r\n                        todos[i].time += subtract;\r\n                        difference -= subtract;}\r\n                    }\r\n                        for (let i = cursor + 1; i < todos.length; i++) {\r\n                            while(difference > 0 && todos[i].time < todos[i].initTime) {\r\n                                todos[i].time += 1;\r\n                                difference -= 1;\r\n                            }\r\n                        }\r\n                }\r\n                    setBonus(bonusTime + difference);\r\n                    selected.extra += selected.time - nonZeroTime\r\n                    // selected.time = nonZeroTime;\r\n                }\r\n            }\r\n\r\n            if (cursor < todos.length) {\r\n                setCursor(prevState =>\r\n                    prevState < todos.length ? prevState + 1 : prevState)\r\n            } else {\r\n                setCursor(todos.length + 1);\r\n            }\r\n            setBefore(todos[cursor])\r\n            setSelected(todos[cursor + 1]);\r\n        }\r\n    }, [downPress]);\r\n\r\n    useEffect(() => {\r\n        if (upPress) {\r\n            setLastIndex(1)\r\n            setPrevTime(nonZeroTime);\r\n            if(cursor === 0){\r\n                window.location.reload();\r\n            }\r\n            setBefore(todos[cursor-2])\r\n            if(before !== undefined) {\r\n                //if slot before took less than designated time\r\n                if (before.extra > 0) {\r\n                    let difference = before.extra;\r\n                    before.extra = 0;\r\n                    if (slotDecreased > 0) {\r\n                        let subtract = Math.floor( difference/slotDecreased)\r\n                    for (let i = cursor + 1; i < todos.length; i++) {\r\n                        todos[i].time -= subtract;\r\n                        difference -= subtract;\r\n                    }\r\n                    //increase subsequent slots that are under time (until they are back to their set times)\r\n                        for (let i = cursor + 1; i < todos.length; i++) {\r\n                            while (difference > 0 && todos[i].time < todos[i].initTime) {\r\n                                todos[i].time -= 1;\r\n                                difference -= 1;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        setBonus(bonusTime - difference);\r\n                    }\r\n                    // selected.time = nonZeroTime;\r\n                }\r\n                }\r\n            setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n            setSelected(todos[cursor-1]);\r\n        }\r\n    }, [upPress]);\r\n\r\n\r\n    const onDragEnd = ({source, destination}: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null ||\r\n            destination.index < source.index && destination.index <= cursor) return null\r\n        // Make sure we're actually moving the item\r\n        if (destination.index === source.index) return null\r\n        // Move the item within the list\r\n        // Start by making a new list without the dragged item\r\n        const newList = todos.filter((_: any, idx: number) => idx !== source.index)\r\n        // Then insert the item at the right location\r\n        newList.splice(destination.index, 0, todos[source.index])\r\n        // Update the list\r\n        setTodos(newList)\r\n    }\r\n\r\n    const fetchTodos = (): void => {\r\n        getTodos()\r\n            .then(({data: {todos}}: ITodo[] | any) => setTodos(todos))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    const fetchMeetingLen = (): void => {\r\n        getMeetingLen()\r\n            .then(({data: {meetingLen}}: number | any) => setMeetingLen(meetingLen*1000))\r\n            .catch((err: Error) => console.log(err));\r\n    }\r\n    const handleForm = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            setMeetingLen(e.currentTarget.value*1000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <div className=\"meetingLen\" style = {{display: !menuVisible? 'none':''}}> Meeting Length:\r\n                <input className = \"inputMeetingLen\" onKeyDown={handleForm} type='number' id='meetingLen' /> min\r\n                <button className = \"xOutMeetingLen\" onClick = {toggleMenu}>x</button>\r\n            </div>\r\n            <main className='App' id = \"behindComponent\">\r\n                <span>origBonus = {origBonus} bonusTime = {bonusTime} meeting = {meetingLen} todoTime = {todoTime}</span>\r\n                <div className='test'>\r\n                    <Droppable droppableId='col-1' isDropDisabled={false}>\r\n                        {provided => {\r\n                            const style = {\r\n                                // height: (todoTime - ((bonusTime) / (todoTime+bonusTime) * 100))/(todoTime) + '%' ,\r\n                                color: 'black',\r\n                                ...provided.droppableProps,\r\n                            };\r\n                            return (\r\n                                <ul className=\"characters\"\r\n                                    {...provided.droppableProps} ref={provided.innerRef} style={style}>\r\n                                    {todos.map((todo: ITodo, index) => (\r\n                                        <TodoItem\r\n                                            key={todo._id}\r\n                                            todo={todo}\r\n                                            index={index}\r\n                                            active={index === cursor}\r\n                                            done={index < cursor }\r\n                                            callbackFromParent2={timeCallback}\r\n                                            percent={getPercent(todo)}\r\n                                            bonusTime = {bonusTime}\r\n                                        />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                    <BonusItem\r\n                                        origBonus={origBonus} time={bonusTime} active={cursor === todos.length} done={cursor === todos.length + 1}\r\n                                        percent={(bonusTime)/(todoTime + bonusTime)*100 }/>\r\n                                </ul>)\r\n                        }}\r\n\r\n                    </Droppable>\r\n                </div>\r\n                <div className = \"topButton\">\r\n                <div className=\"dropdown\" > <MdSettings size={26} color='rgb(200,200,200)'/>\r\n                    <div className=\"dropdown-content\">\r\n                        <a onClick = {toggleMenu}>Meeting length</a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}