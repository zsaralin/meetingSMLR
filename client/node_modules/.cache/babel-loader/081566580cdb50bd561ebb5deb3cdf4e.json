{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getTodos } from './API';\nimport BonusItem from \"./components/BonusItem\";\n\nconst useKeyPress = function (targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nconst App = () => {\n  const downPress = useKeyPress(\"ArrowDown\");\n  const upPress = useKeyPress(\"ArrowUp\");\n  const [todos, setTodos] = useState([]);\n  const [selected, setSelected] = useState();\n  const [cursor, setCursor] = useState(-1); // const [totalOver, setOver] = useState<number>(0);\n\n  const [realTime, setTime] = useState(0); // useEffect(() => {\n  //     let myInterval = setInterval(() => {\n  //         if (cursor != -1) {\n  //             setTime(realTime + 1);\n  //         }\n  //     }, 1000)\n  //     return () => {\n  //         clearInterval(myInterval);\n  //     };\n  // });\n\n  const timeCallback = timerTime => {\n    if (timerTime != 0) setTime(timerTime);\n  };\n\n  useEffect(() => {\n    if (selected !== undefined) {\n      if (realTime > selected.time) {\n        selected.overtime = realTime - selected.time;\n      }\n\n      if (bonusTime < 1 && realTime > selected.time) {\n        for (let i = cursor + 1; i < todos.length; i++) {\n          todos[i].extra += 1 / (todos.length - cursor - 1);\n        }\n      }\n    }\n  });\n\n  const getTodoTime = () => {\n    let todoTime = 0;\n\n    for (let i = 0; i < todos.length; i++) {\n      todoTime += todos[i].time;\n    }\n\n    return todoTime;\n  };\n\n  const getTotalOver = () => {\n    let totalOver = 0;\n\n    for (let i = 0; i < todos.length; i++) {\n      totalOver += todos[i].overtime;\n    }\n\n    return totalOver;\n  };\n\n  const getPercent = todo => {\n    return (todo.time + todo.overtime - todo.extra) / todoTime * 100;\n  };\n\n  let todoTime = getTodoTime();\n  let totalOver = getTotalOver();\n  const [origBonus, setBonus] = useState(5); // let bonusTime = 0;\n\n  let bonusTime = origBonus - totalOver < 0 ? 0 : origBonus - totalOver;\n  useEffect(() => {\n    if (downPress) {\n      if (cursor < todos.length) {\n        setCursor(prevState => prevState < todos.length ? prevState + 1 : prevState);\n      } else {\n        setCursor(todos.length + 1);\n      }\n\n      if (selected !== undefined && realTime != 0 && realTime < selected.time) {\n        setBonus(origBonus + (selected.time - realTime));\n        selected.time = realTime;\n      } // setTime (0);\n\n\n      setSelected(todos[cursor + 1]);\n      let before = todos[cursor];\n\n      if (before !== undefined) {\n        before.status = false;\n      }\n\n      if (selected !== undefined) {\n        selected.status = true;\n      }\n    }\n  }, [downPress]);\n  useEffect(() => {\n    if (upPress) {\n      setCursor(prevState => prevState > 0 ? prevState - 1 : prevState);\n      setSelected(todos[cursor - 1]); // setTime (0);\n\n      let before = todos[cursor];\n\n      if (before !== undefined) {\n        before.status = false;\n      }\n\n      if (selected !== undefined) {\n        selected.status = true;\n      }\n    }\n  }, [upPress]);\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null || destination.index < source.index && destination.index <= cursor) return null; // Make sure we're actually moving the item\n\n    if (destination.index === source.index) return null; // Move the item within the list\n    // Start by making a new list without the dragged item\n\n    const newList = todos.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, todos[source.index]); // Update the list\n\n    setTodos(newList);\n  };\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, provided => {\n    const style = {\n      // height: (todoTime + totalOver)/(todoTime) + '%' ,\n      color: 'black',\n      ...provided.droppableProps\n    };\n    return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n      className: \"characters\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }), todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo._id,\n      todo: todo,\n      index: index,\n      active: index === cursor,\n      done: index <= cursor - 1,\n      callbackFromParent2: timeCallback,\n      percent: getPercent(todo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    })), provided.placeholder);\n  }), /*#__PURE__*/React.createElement(BonusItem, {\n    time: bonusTime,\n    active: cursor === todos.length,\n    done: cursor === todos.length + 1,\n    percent: bonusTime / (todoTime + bonusTime) * 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \" Settings\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","DragDropContext","Droppable","getTodos","BonusItem","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","App","downPress","upPress","todos","setTodos","selected","setSelected","cursor","setCursor","realTime","setTime","timeCallback","timerTime","undefined","time","overtime","bonusTime","i","length","extra","getTodoTime","todoTime","getTotalOver","totalOver","getPercent","todo","origBonus","setBonus","prevState","before","status","onDragEnd","source","destination","index","newList","filter","_","idx","splice","fetchTodos","then","data","catch","err","console","log","provided","style","color","droppableProps","innerRef","map","_id","placeholder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\nimport {getTodos,} from './API'\r\nimport BonusItem from \"./components/BonusItem\";\r\n\r\nconst useKeyPress = function(targetKey: string) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    function downHandler({ key }: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n    const upHandler = ({ key }: { key: string }) => {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    });\r\n\r\n    return keyPressed;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const downPress = useKeyPress(\"ArrowDown\");\r\n    const upPress = useKeyPress(\"ArrowUp\");\r\n\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const [selected, setSelected] = useState<ITodo>();\r\n    const [cursor, setCursor] = useState<number>(-1);\r\n    // const [totalOver, setOver] = useState<number>(0);\r\n\r\n    const [realTime, setTime] = useState<number>(0);\r\n    // useEffect(() => {\r\n    //     let myInterval = setInterval(() => {\r\n    //         if (cursor != -1) {\r\n    //             setTime(realTime + 1);\r\n    //         }\r\n    //     }, 1000)\r\n    //     return () => {\r\n    //         clearInterval(myInterval);\r\n    //     };\r\n    // });\r\n\r\n    const timeCallback = (timerTime: number) => {\r\n        if(timerTime != 0)        setTime(timerTime);\r\n    }\r\n    useEffect(() => {\r\n        if (selected !== undefined) {\r\n            if (realTime > selected.time) {\r\n                selected.overtime = (realTime - selected.time);\r\n            }\r\n            if(bonusTime<1 && realTime > selected.time){\r\n                for (let i = cursor+1; i < todos.length; i++) {\r\n                    todos[i].extra += 1 / (todos.length-cursor-1);\r\n                }\r\n            }\r\n        }\r\n    })\r\n    const getTodoTime = (): number => {\r\n        let todoTime = 0;\r\n        for (let i = 0; i < todos.length; i++) {\r\n            todoTime += todos[i].time;\r\n        }\r\n        return todoTime;\r\n    }\r\n    const getTotalOver = (): number => {\r\n        let totalOver = 0;\r\n        for (let i = 0; i < todos.length; i++) {\r\n            totalOver += todos[i].overtime;\r\n        }\r\n        return totalOver;\r\n    }\r\n\r\n    const getPercent = (todo: ITodo): number => {\r\n        return (todo.time + todo.overtime - todo.extra) / (todoTime) * 100\r\n\r\n    }\r\n\r\n    let todoTime = getTodoTime();\r\n    let totalOver = getTotalOver();\r\n\r\n    const [origBonus, setBonus] = useState<number>(5);\r\n    // let bonusTime = 0;\r\n    let bonusTime = origBonus-totalOver <0 ? 0 : origBonus - totalOver;\r\n\r\n    useEffect(() => {\r\n        if (downPress) {\r\n            if (cursor < todos.length) {\r\n                setCursor(prevState =>\r\n                    prevState < todos.length ? prevState + 1 : prevState)\r\n            } else {\r\n                setCursor(todos.length + 1);\r\n            }\r\n            if(selected !== undefined && realTime != 0 && realTime < selected.time ){\r\n                setBonus(origBonus + (selected.time-realTime));\r\n                selected.time = realTime;\r\n            }\r\n            // setTime (0);\r\n            setSelected(todos[cursor + 1]);\r\n            let before = todos[cursor];\r\n            if (before !== undefined) {\r\n                before.status = false\r\n            }\r\n            if (selected !== undefined) {\r\n                selected.status = true\r\n            }\r\n        }\r\n    }, [downPress]);\r\n\r\n    useEffect(() => {\r\n        if (upPress) {\r\n            setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n            setSelected(todos[cursor - 1]);\r\n            // setTime (0);\r\n            let before = todos[cursor];\r\n            if (before !== undefined) {\r\n                before.status = false\r\n            }\r\n            if (selected !== undefined) {\r\n                selected.status = true\r\n            }\r\n        }\r\n    }, [upPress]);\r\n\r\n\r\n    const onDragEnd = ({source, destination}: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null ||\r\n            destination.index < source.index && destination.index <= cursor) return null\r\n        // Make sure we're actually moving the item\r\n        if (destination.index === source.index) return null\r\n        // Move the item within the list\r\n        // Start by making a new list without the dragged item\r\n        const newList = todos.filter((_: any, idx: number) => idx !== source.index)\r\n        // Then insert the item at the right location\r\n        newList.splice(destination.index, 0, todos[source.index])\r\n        // Update the list\r\n        setTodos(newList)\r\n    }\r\n\r\n    const fetchTodos = (): void => {\r\n        getTodos()\r\n            .then(({data: {todos}}: ITodo[] | any) => setTodos(todos))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, [])\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <main className='App'>\r\n                <div className='test'>\r\n                    <Droppable droppableId='col-1' isDropDisabled={false}>\r\n                        {provided => {\r\n                            const style = {\r\n                                // height: (todoTime + totalOver)/(todoTime) + '%' ,\r\n                                color: 'black',\r\n                                ...provided.droppableProps,\r\n                            };\r\n                            return (\r\n                                <ul className=\"characters\"\r\n                                    {...provided.droppableProps} ref={provided.innerRef} style={style}>\r\n                                    {todos.map((todo: ITodo, index) => (\r\n                                        <TodoItem\r\n                                            key={todo._id}\r\n                                            todo={todo}\r\n                                            index={index}\r\n                                            active={index === cursor}\r\n                                            done={index <= cursor - 1}\r\n                                            callbackFromParent2={timeCallback}\r\n                                            percent={getPercent(todo)}/>\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </ul>)\r\n                        }}\r\n                    </Droppable>\r\n                    <BonusItem\r\n                        time={bonusTime} active={cursor === todos.length} done={cursor === todos.length + 1}\r\n                        percent={bonusTime / (todoTime + bonusTime) * 100}/>\r\n                </div>\r\n                <button className=\"button\"> Settings</button>\r\n            </main>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}