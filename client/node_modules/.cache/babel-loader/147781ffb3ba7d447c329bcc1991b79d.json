{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\MyTimer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Timer from \"react-compound-timer\";\n\nconst MyTimer = props => {\n  const [seconds, setSeconds] = useState(0); // const [milSeconds, setMilSeconds] = useState(0);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [prevTime, setPrevTime] = useState(null);\n  const [timeInMilliseconds, setTimeInMilliseconds] = useState(60000);\n  const [time, setTime] = useState(null);\n  useInterval(() => {\n    let prev = prevTime ? prevTime : Date.now();\n    let diffTime = Date.now() - prev;\n    let newMilliTime = timeInMilliseconds - diffTime;\n    let newTime = toTime(newMilliTime);\n    setPrevTime(Date.now());\n    setTimeInMilliseconds(newMilliTime);\n    setTime(newTime);\n  }, isRunning ? interval : null);\n  useEffect(() => {\n    let secondInterval = setInterval(() => {\n      if (props.active) {\n        setSeconds(seconds + 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(secondInterval); // clearInterval(milInterval);\n    };\n  }); // useEffect(() => {\n  //     let milInterval = setInterval(() => {\n  //         if (props.active) {\n  //             setMilSeconds(milSeconds + 1)\n  //             if (milSeconds == 100) {\n  //                 setSeconds(seconds + 1)\n  //                 setMilSeconds(0)\n  //             }\n  //         }\n  //     }, 10)\n  //     return () => {\n  //         clearInterval(milInterval);\n  //     };\n  // });\n\n  const sendSeconds = () => {\n    props.callbackFromParent(seconds);\n  };\n\n  useEffect(() => {\n    sendSeconds();\n  }); // const sendMilSecond = () => {\n  //     props.callbackFromParentM(milSeconds);\n  // }\n  // useEffect(() => {\n  //     sendMilSecond()\n  // },)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Timer.Days, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }), \" days\", /*#__PURE__*/React.createElement(Timer.Hours, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }), \" hours\", /*#__PURE__*/React.createElement(Timer.Minutes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }), \" minutes\", /*#__PURE__*/React.createElement(Timer.Seconds, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }), \" seconds\", /*#__PURE__*/React.createElement(Timer.Milliseconds, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }), \" milliseconds\")), \")}\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \" - min \"));\n};\n\nexport default MyTimer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/MyTimer.tsx"],"names":["React","useState","useEffect","Timer","MyTimer","props","seconds","setSeconds","isRunning","setIsRunning","prevTime","setPrevTime","timeInMilliseconds","setTimeInMilliseconds","time","setTime","useInterval","prev","Date","now","diffTime","newMilliTime","newTime","toTime","interval","secondInterval","setInterval","active","clearInterval","sendSeconds","callbackFromParent","fontSize","marginTop","done"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Timer from \"react-compound-timer\";\r\n\r\nconst MyTimer = (props:{ active: boolean, done: boolean,\r\n    callbackFromParent(listInfo: number): void\r\n    // callbackFromParentMil(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    // const [milSeconds, setMilSeconds] = useState(0);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [prevTime, setPrevTime] = useState(null);\r\n    const [timeInMilliseconds, setTimeInMilliseconds] = useState(60000);\r\n    const [time, setTime] = useState(null);\r\n\r\n    useInterval(\r\n        () => {\r\n            let prev = prevTime ? prevTime : Date.now();\r\n            let diffTime = Date.now() - prev;\r\n            let newMilliTime = timeInMilliseconds - diffTime;\r\n            let newTime = toTime(newMilliTime);\r\n            setPrevTime(Date.now());\r\n            setTimeInMilliseconds(newMilliTime);\r\n            setTime(newTime);\r\n        },\r\n        isRunning ? interval : null\r\n    );\r\n    useEffect(() => {\r\n        let secondInterval = setInterval(() => {\r\n            if (props.active) {\r\n                setSeconds(seconds + 1)\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(secondInterval);\r\n            // clearInterval(milInterval);\r\n        };\r\n    });\r\n    // useEffect(() => {\r\n    //     let milInterval = setInterval(() => {\r\n    //         if (props.active) {\r\n    //             setMilSeconds(milSeconds + 1)\r\n    //             if (milSeconds == 100) {\r\n    //                 setSeconds(seconds + 1)\r\n    //                 setMilSeconds(0)\r\n    //             }\r\n    //         }\r\n    //     }, 10)\r\n    //     return () => {\r\n    //         clearInterval(milInterval);\r\n    //     };\r\n    // });\r\n    const sendSeconds = () => {\r\n        props.callbackFromParent(seconds);\r\n    }\r\n    useEffect(() => {\r\n        sendSeconds()\r\n    },)\r\n    // const sendMilSecond = () => {\r\n    //     props.callbackFromParentM(milSeconds);\r\n    // }\r\n    // useEffect(() => {\r\n    //     sendMilSecond()\r\n    // },)\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%'}}>\r\n            {props.active || props.done ? <div>\r\n                    <Timer>\r\n                            <React.Fragment>\r\n                                <div>\r\n                                    <Timer.Days /> days\r\n                                    <Timer.Hours /> hours\r\n                                    <Timer.Minutes /> minutes\r\n                                    <Timer.Seconds /> seconds\r\n                                    <Timer.Milliseconds /> milliseconds\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Timer>\r\n                </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyTimer;"]},"metadata":{},"sourceType":"module"}