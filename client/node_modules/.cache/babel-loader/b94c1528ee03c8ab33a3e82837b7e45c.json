{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName } from \"../API\";\nimport './TodoItem.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\n\nconst Todo = props => {\n  const [realTime, setTime] = useState(0);\n\n  const timeCallback = timerTime => {\n    setTime(timerTime);\n  };\n\n  const someFn = () => {\n    props.callbackFromParent2(realTime);\n  };\n\n  useEffect(() => {\n    someFn();\n  });\n  const [longest, setLong] = useState(0);\n  const [color, setColor] = useState('rgb(198,246,241)');\n  useEffect(() => {\n    if (props.active) {\n      const diff = realTime - props.todo.time;\n\n      if (realTime <= props.todo.time + 1000) {\n        setColor('rgb(198,246,241)');\n      } else if (props.bonusTime > 0) {\n        if (diff > 4) {\n          setColor('rgb(254,188,254)');\n        }\n\n        if (diff > 1) {\n          setColor('rgb(255,202,255)');\n        }\n      } else if (props.bonusTime < 1) {\n        setColor('rgb(252,190,236)');\n      }\n    }\n  }, [realTime, props.active, props.bonusTime, props.todo.time]);\n  useEffect(() => {\n    handleLongest();\n  }, []);\n\n  const handleLongest = () => {\n    getLongestName().then(({\n      data: {\n        longest\n      }\n    }) => setLong(longest)).catch(err => console.log(err));\n  };\n\n  let reducedTime = props.todo.time - props.todo.extra;\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.todo._id,\n    index: props.index,\n    isDragDisabled: props.done || props.active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, provided => {\n    const style = {\n      height: props.percent + '%',\n      color: props.done ? 'grey' : '',\n      ...provided.draggableProps.style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"Card\",\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      start: props.active,\n      time: realTime < reducedTime ? reducedTime : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: realTime < props.todo.time ? \"Card--text\" : props.bonusTime > 0 ? \"Card--reverse\" : \"Card--reverse2\",\n      style: {\n        animationPlayState: props.active ? 'running' : 'paused',\n        animationDuration: reducedTime + 'ms, .5s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      style: {\n        textDecoration: props.done ? 'line-through' : 'none',\n        width: 50 + 5 * longest + \"px\",\n        backgroundColor: props.done ? color : '',\n        background: !props.active && !props.done ? 'rgba(240, 240, 240,1)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, props.todo.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      style: {\n        textDecoration: props.done ? 'line-through' : 'none',\n        backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : '',\n        background: !props.active && !props.done ? 'rgb(230, 230, 230)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, props.todo.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time\",\n      style: {\n        backgroundColor: props.done && !props.active ? 'rgba(240, 240, 240, 1)' : '',\n        background: !props.active && !props.done ? 'rgb(230, 230, 230)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, Math.ceil(props.todo.time / 1000) < Math.ceil(props.todo.initTime / 1000) ? /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'inline'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"crossedOut\",\n      style: {\n        color: 'grey',\n        opacity: '70%',\n        display: 'inline',\n        marginRight: '4px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, Math.ceil(props.todo.initTime / 1000)), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }, \" \", Math.ceil(props.todo.time / 1000))) : props.active ? Math.ceil(reducedTime / 1000) : Math.ceil(props.todo.initTime / 1000), \" min\"), /*#__PURE__*/React.createElement(Timer, {\n      callbackFromParent: timeCallback,\n      startTime: reducedTime,\n      active: props.active,\n      done: props.done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }))));\n  });\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","getLongestName","Timer","Slider","Todo","props","realTime","setTime","timeCallback","timerTime","someFn","callbackFromParent2","longest","setLong","color","setColor","active","diff","todo","time","bonusTime","handleLongest","then","data","catch","err","console","log","reducedTime","extra","_id","index","done","provided","style","height","percent","draggableProps","innerRef","dragHandleProps","animationPlayState","animationDuration","textDecoration","width","backgroundColor","background","name","description","Math","ceil","initTime","display","opacity","marginRight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {Draggable} from 'react-beautiful-dnd'\r\nimport {getLongestName,} from \"../API\";\r\nimport './TodoItem.css'\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\n\r\nconst Todo = (props: {\r\n    percent: number, todo: ITodo, active: boolean, done: boolean, index: number, bonusTime: number,\r\n    callbackFromParent2(listInfo: number): void;\r\n}) => {\r\n    const [realTime, setTime] = useState<number>(0);\r\n    const timeCallback = (timerTime: number) => {\r\n        setTime(timerTime);\r\n    }\r\n    const someFn = () => {\r\n        props.callbackFromParent2(realTime);\r\n    }\r\n    useEffect(() => {\r\n        someFn()\r\n    },)\r\n    const [longest, setLong] = useState<number>(0);\r\n    const [color, setColor] = useState<string>('rgb(198,246,241)');\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.active) {\r\n            const diff = realTime - props.todo.time\r\n            if (realTime <= props.todo.time + 1000) {\r\n                setColor('rgb(198,246,241)');\r\n            } else if (props.bonusTime > 0) {\r\n                if (diff > 4) {\r\n                    setColor('rgb(254,188,254)');\r\n                }\r\n                if (diff > 1) {\r\n                    setColor('rgb(255,202,255)');\r\n                }\r\n            } else if (props.bonusTime < 1) {\r\n                setColor('rgb(252,190,236)');\r\n            }\r\n        }\r\n    }, [realTime, props.active, props.bonusTime, props.todo.time])\r\n    useEffect(() => {\r\n        handleLongest()\r\n    }, [])\r\n    const handleLongest = (): void => {\r\n        getLongestName()\r\n            .then(({data: {longest}}: number | any) => setLong(longest))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    let reducedTime = props.todo.time - props.todo.extra\r\n    return (\r\n        <Draggable draggableId={props.todo._id} index={props.index} isDragDisabled={props.done || props.active}>\r\n            {provided => {\r\n                const style = {\r\n                    height: props.percent + '%',\r\n                    color: props.done ? 'grey' : '',\r\n                    ...provided.draggableProps.style,\r\n\r\n                };\r\n                return (\r\n                    <div className=\"Card\" ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         {...provided.dragHandleProps} style={style}>\r\n                        <Slider start={props.active} time={(realTime < reducedTime) ?\r\n                            reducedTime : 0}/>\r\n                        <div\r\n                            className={(realTime < props.todo.time) ? \"Card--text\" : props.bonusTime > 0 ?\r\n                                \"Card--reverse\" : \"Card--reverse2\"}\r\n                            style={{\r\n                                animationPlayState: props.active ? 'running' : 'paused',\r\n                                animationDuration: reducedTime + 'ms, .5s',\r\n                            }}>\r\n                            <div className='name'\r\n                                 style={{\r\n                                     textDecoration: props.done ? 'line-through' : 'none',\r\n                                     width: 50 + 5 * longest + \"px\", backgroundColor: props.done ? color : '',\r\n                                     background: !props.active && !props.done ? 'rgba(240, 240, 240,1)' : '',\r\n                                 }}>\r\n                                {props.todo.name}</div>\r\n                            <div className='description' style={{\r\n                                textDecoration: props.done ? 'line-through' : 'none',\r\n                                backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : '',\r\n                                background: !props.active && !props.done ? 'rgb(230, 230, 230)' : '',\r\n                            }}>{props.todo.description}</div>\r\n                            <div className=\"time\" style={{\r\n                                backgroundColor: props.done && !props.active ? 'rgba(240, 240, 240, 1)' : '',\r\n                                background: !props.active && !props.done ? 'rgb(230, 230, 230)' : '',\r\n                            }}>\r\n                                <div className=\"set-time\">\r\n                                    {Math.ceil(props.todo.time / 1000) < Math.ceil(props.todo.initTime / 1000) ?\r\n                                        <span style={{display: 'inline'}}>\r\n                                        <span className=\"crossedOut\"\r\n                                              style={{\r\n                                                  color: 'grey',\r\n                                                  opacity: '70%',\r\n                                                  display: 'inline',\r\n                                                  marginRight: '4px'\r\n                                              }}>\r\n                                            {Math.ceil(props.todo.initTime / 1000)}</span>\r\n                                            <span> {Math.ceil(props.todo.time / 1000)}</span>\r\n                                        </span> : props.active ? Math.ceil(reducedTime / 1000)\r\n                                            : Math.ceil(props.todo.initTime / 1000)} min\r\n                                </div>\r\n                                <Timer callbackFromParent={timeCallback} startTime={reducedTime}\r\n                                       active={props.active}\r\n                                       done={props.done}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }}\r\n        </Draggable>\r\n    )\r\n}\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}