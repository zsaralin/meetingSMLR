{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getLongestName = async () => {\n  try {\n    const longest = await axios.get(baseUrl + '/todos-long');\n    return longest;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getMeetingLen = async () => {\n  try {\n    return await axios.get(baseUrl + '/meetingLen');\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const postMeetingLen = async function (meetingLen) {\n  try {\n    return await axios.post(baseUrl + '/postMeetingLen', meetingLen);\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","getLongestName","longest","getMeetingLen","postMeetingLen","meetingLen","post"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAGA,WAAOE,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAUP,OAAO,MAAME,cAAc,GAAG,YAAiD;AAC7E,MAAI;AACF,UAAMC,OAAmC,GAAG,MAAMR,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,aADoC,CAAlD;AAGA,WAAOO,OAAP;AACD,GALD,CAKE,OAAOH,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAUP,OAAO,MAAMI,aAAa,GAAG,YAAiD;AAC5E,MAAI;AACF,WAAO,MAAMT,KAAK,CAACI,GAAN,CACTH,OAAO,GAAG,aADD,CAAb;AAGD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CARM;AASP,OAAO,MAAMK,cAAc,GAAG,gBAAgBC,UAAhB,EAAmC;AAC/D,MAAI;AACF,WAAO,MAAMX,KAAK,CAACY,IAAN,CACTX,OAAO,GAAG,iBADD,EACoBU,UADpB,CAAb;AAGD,GAJD,CAIE,OAAON,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CARM","sourcesContent":["import axios, {AxiosResponse} from 'axios'\r\n\r\nconst baseUrl: string = 'http://localhost:4000'\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + '/todos'\r\n    )\r\n    return todos\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\nexport const getLongestName = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const longest: AxiosResponse<ApiDataType> = await axios.get(\r\n        baseUrl + '/todos-long'\r\n    )\r\n    return longest\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\nexport const getMeetingLen = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    return await axios.get(\r\n        baseUrl + '/meetingLen'\r\n    )\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\nexport const postMeetingLen = async function (meetingLen:number) {\r\n  try {\r\n    return await axios.post(\r\n        baseUrl + '/postMeetingLen', meetingLen\r\n    )\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}