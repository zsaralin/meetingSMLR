{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getTodos, updateTodo, deleteTodo } from './API';\nimport BonusItem from \"./components/BonusItem\";\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false); // If pressed key is our target key then set to true\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  } // If released key is our target key then set to false\n\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }; //Add event listeners\n\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n\nconst App = () => {\n  const downPress = useKeyPress(\"ArrowDown\");\n  const upPress = useKeyPress(\"ArrowUp\");\n  const [cursor, setCursor] = useState(-1);\n  const [selected, setSelected] = useState(undefined);\n  const [todos, setTodos] = useState([]);\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null) return null; // Make sure we're actually moving the item\n\n    if (destination.index === source.index) return null; // Move the item within the list\n    // Start by making a new list without the dragged item\n\n    const newList = todos.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, todos[source.index]); // Update the list\n\n    setTodos(newList);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n    className: \"characters\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo._id,\n    updateTodo: handleUpdateTodo,\n    deleteTodo: handleDeleteTodo,\n    todo: todo,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  })), provided.placeholder)), /*#__PURE__*/React.createElement(BonusItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","DragDropContext","Droppable","getTodos","updateTodo","deleteTodo","BonusItem","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","App","downPress","upPress","cursor","setCursor","selected","setSelected","undefined","todos","setTodos","onDragEnd","source","destination","index","newList","filter","_","idx","splice","fetchTodos","then","data","catch","err","console","log","handleUpdateTodo","todo","status","Error","handleDeleteTodo","_id","provided","droppableProps","innerRef","map","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\n\r\nimport {getTodos, updateTodo, deleteTodo} from './API'\r\nimport BonusItem from \"./components/BonusItem\";\r\n\r\nfunction useKeyPress(targetKey: string) {\r\n    // State for keeping track of whether key is pressed\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    // If pressed key is our target key then set to true\r\n    function downHandler({key}) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n    // If released key is our target key then set to false\r\n    const upHandler = ({key}) => {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    }\r\n    //Add event listeners\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n        // Remove event listeners on cleanup\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    }); // Empty array ensures that effect is only run on mount and unmount\r\n    return keyPressed;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n    const downPress = useKeyPress(\"ArrowDown\");\r\n    const upPress = useKeyPress(\"ArrowUp\");\r\n    const [cursor, setCursor] = useState(-1);\r\n    const [selected, setSelected] = useState(undefined);\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const onDragEnd = ({ source, destination }: DropResult) => {\r\n    // Make sure we have a valid destination\r\n    if (destination === undefined || destination === null) return null\r\n\r\n    // Make sure we're actually moving the item\r\n    if (destination.index === source.index) return null\r\n\r\n    // Move the item within the list\r\n    // Start by making a new list without the dragged item\r\n    const newList = todos.filter((_: any, idx: number) => idx !== source.index)\r\n\r\n    // Then insert the item at the right location\r\n    newList.splice(destination.index, 0, todos[source.index])\r\n\r\n    // Update the list\r\n      setTodos(newList)\r\n    }\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n\r\n  }, [])\r\n\r\n  const fetchTodos = (): void => {\r\n    getTodos()\r\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\r\n    .catch((err: Error) => console.log(err))\r\n  }\r\n\r\n  const handleUpdateTodo = (todo: ITodo): void => {\r\n    updateTodo(todo)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not updated')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleDeleteTodo = (_id: string): void => {\r\n    deleteTodo(_id)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not deleted')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n        return (\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n            <main className='App'>\r\n                <Droppable droppableId='col-1' isDropDisabled={false}>\r\n                    {provided => (\r\n                <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {todos.map((todo: ITodo, index) => (\r\n                        <TodoItem\r\n                            key={todo._id}\r\n                            updateTodo={handleUpdateTodo}\r\n                            deleteTodo={handleDeleteTodo}\r\n                            todo={todo}\r\n                            index= {index}\r\n                        />\r\n                    ))}\r\n                    {provided.placeholder}\r\n                </ul> )}\r\n                </Droppable>\r\n                <BonusItem/>\r\n            </main>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}