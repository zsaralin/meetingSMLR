{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst Timer = props => {\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (props.active) {\n        setSeconds(seconds + 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  const someFn = () => {\n    props.callbackFromParent(seconds);\n  };\n\n  useEffect(() => {\n    someFn();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"x-small\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, props.active ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \" \", seconds / 60, \" min \") : '- min');\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","myInterval","setInterval","active","clearInterval","someFn","callbackFromParent","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAER;AACF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIJ,KAAK,CAACK,MAAV,EAAkB;AACdH,QAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACH;AACJ,KAJ2B,EAIzB,IAJyB,CAA5B;AAKA,WAAO,MAAM;AACTK,MAAAA,aAAa,CAACH,UAAD,CAAb;AACH,KAFD;AAGH,GATQ,CAAT;;AAUA,QAAMI,MAAM,GAAG,MAAM;AACbP,IAAAA,KAAK,CAACQ,kBAAN,CAAyBP,OAAzB;AACH,GAFL;;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM;AACT,GAFQ,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAI;AAACE,MAAAA,QAAQ,EAAG;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACK,MAAN,gBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOJ,OAAO,GAAC,EAAf,UAAf,GAA8C,OADnD,CADJ;AAMH,CA3BD;;AA8BA,eAAeF,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst Timer = (props:{ initialMinute: number, active: boolean,\r\n    callbackFromParent(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (props.active) {\r\n                setSeconds(seconds+1);\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    const someFn = () => {\r\n            props.callbackFromParent(seconds);\r\n        }\r\n    useEffect(() => {\r\n        someFn()\r\n    },)\r\n    return (\r\n        <div className=\"timer\" style = {{fontSize : \"x-small\"}}>\r\n            {props.active ? <div> {seconds/60} min </div>: '- min'\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}