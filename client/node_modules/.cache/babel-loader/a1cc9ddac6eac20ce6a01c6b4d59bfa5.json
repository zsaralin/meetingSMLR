{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\AddTodo.tsx\";\nimport React, { useState } from 'react';\n\nconst AddTodo = ({\n  saveTodo\n}) => {\n  const [formData, setFormData] = useState();\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n\n  const handleForm = e => {\n    if (e.currentTarget.id === 'name') {\n      setName(e.currentTarget.value);\n    } else if (e.currentTarget.id === 'description') {\n      setDescription(e.currentTarget.value);\n    }\n\n    setFormData({ ...formData,\n      [e.currentTarget.id]: e.currentTarget.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    onSubmit: e => saveTodo(e, formData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"nameInput\",\n    value: name,\n    onChange: handleForm,\n    type: \"text\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleForm,\n    value: description,\n    type: \"text\",\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: name === undefined && description === undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Add Todo\"));\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/AddTodo.tsx"],"names":["React","useState","AddTodo","saveTodo","formData","setFormData","name","setName","description","setDescription","handleForm","e","currentTarget","id","value","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAMA,MAAMC,OAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;;AAEA,QAAMS,UAAU,GAAIC,CAAD,IAAgD;AACjE,QAAGA,CAAC,CAACC,aAAF,CAAgBC,EAAhB,KAAuB,MAA1B,EAAiC;AAC/BN,MAAAA,OAAO,CAACI,CAAC,CAACC,aAAF,CAAgBE,KAAjB,CAAP;AACD,KAFD,MAGK,IAAGH,CAAC,CAACC,aAAF,CAAgBC,EAAhB,KAAuB,aAA1B,EAAwC;AAC3CJ,MAAAA,cAAc,CAACE,CAAC,CAACC,aAAF,CAAgBE,KAAjB,CAAd;AAAsC;;AACxCT,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACO,CAAC,CAACC,aAAF,CAAgBC,EAAjB,GAAsBF,CAAC,CAACC,aAAF,CAAgBE;AAF5B,KAAD,CAAX;AAID,GAVD;;AAYA,sBACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAGH,CAAD,IAAOR,QAAQ,CAACQ,CAAD,EAAIP,QAAJ,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,IAAA,SAAS,EAAG,WAAnB;AAA+B,IAAA,KAAK,EAAIE,IAAxC;AAA8C,IAAA,QAAQ,EAAEI,UAAxD;AAAoE,IAAA,IAAI,EAAC,MAAzE;AAAgF,IAAA,EAAE,EAAC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAO,IAAA,QAAQ,EAAEA,UAAjB;AAA6B,IAAA,KAAK,EAAIF,WAAtC;AAAmD,IAAA,IAAI,EAAC,MAAxD;AAA+D,IAAA,EAAE,EAAC,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CADF,eAWE;AAAQ,IAAA,QAAQ,EAAEF,IAAI,KAAKS,SAAT,IAAsBP,WAAW,KAAKO,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF;AAeD,CAhCD;;AAkCA,eAAeb,OAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\ntype Props = { \r\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void \r\n}\r\n\r\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\r\n  const [formData, setFormData] = useState<ITodo | {}>()\r\n  const [name, setName] = useState<string>();\r\n  const [description, setDescription] = useState<string>()\r\n\r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    if(e.currentTarget.id === 'name'){\r\n      setName(e.currentTarget.value)\r\n    }\r\n    else if(e.currentTarget.id === 'description'){\r\n      setDescription(e.currentTarget.value)}\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\r\n      <div>\r\n        <div>\r\n          <label htmlFor='name'>Name: </label>\r\n          <input className = \"nameInput\" value = {name} onChange={handleForm} type='text' id='name' />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='description'>Description: </label>\r\n          <input onChange={handleForm} value = {description} type='text' id='description' />\r\n        </div>\r\n      </div>\r\n      <button disabled={name === undefined && description === undefined} >Add Todo</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTodo\r\n"]},"metadata":{},"sourceType":"module"}