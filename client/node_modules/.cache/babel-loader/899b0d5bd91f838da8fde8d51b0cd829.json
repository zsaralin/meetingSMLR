{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Presenter.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './cssFiles/Presenter.css';\nimport './cssFiles/Trashcan.css';\nimport './cssFiles/DiagonalCrossOut.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\nimport { FaRegTrashAlt } from \"react-icons/fa\";\n\nconst Presenter = props => {\n  const [realTime, setTime] = useState(0);\n  let reducedTime = props.presenter.time - props.presenter.extra; //display constants\n\n  let disReducedTime = Math.ceil(reducedTime / 1000);\n  let disTime = Math.ceil(props.presenter.time / 1000);\n  let disInitTime = Math.ceil(props.presenter.initTime / 1000); // let MAX_NAME_WIDTH = 14 * props.longestName;\n  //set time using time from Timer class\n\n  const timeCallback = timerTime => {\n    setTime(timerTime);\n  }; //send time of presenter to App class\n\n\n  useEffect(() => {\n    props.callbackFromParent(realTime);\n  }, [realTime]); //returns color to indicate how much of the designated time was used\n\n  function getColor() {\n    const diff = realTime - props.presenter.time; //less than or equal to designated time + 1 minute\n\n    if (realTime <= props.presenter.time + 1000) {\n      return 'rgb(198,246,241)';\n    } else if (props.bonusTime > 0) {\n      if (diff > 4) {\n        //overtime\n        return 'rgb(254,188,254)';\n      }\n\n      if (diff > 1) {\n        //slightly overtime\n        return 'rgb(255,202,255)';\n      } //overtime and no more bonus time (cutting into people's time)\n\n    } else if (props.bonusTime < 1) {\n      return 'rgb(252,190,236)';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: props.presenter._id,\n    index: props.index,\n    isDragDisabled: props.done || props.active || !props.admin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, provided => {\n    const style = {\n      height: props.percent + '%',\n      ...provided.draggableProps.style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"card\",\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      start: props.active,\n      time: realTime < reducedTime ? reducedTime : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: realTime < props.presenter.time ? \"cardForward cardWrap\" : props.bonusTime > 0 ? \"cardReverse cardWrap\" : \"cardReverseNoBonus cardWrap\",\n      style: {\n        //gradient is paused when presenter is not active\n        animationPlayState: props.active ? 'running' : 'paused',\n        //presenter gradient, transition to darker pink (when cutting into other presenters' time)\n        animationDuration: reducedTime + 'ms, .5s'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      style: {\n        textDecoration: props.done ? 'line-through' : 'none',\n        //ensure same width for name section of all presenters\n        width: 60 + 9 * props.longestName + \"px\",\n        backgroundColor: props.done ? getColor() : !props.active ? 'rgba(240, 240, 240,1)' : '',\n        textIndent: !props.admin ? '17.5%' : '' //create index where trashcan usually is\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"trashWrapper\",\n      disabled: props.active || props.done,\n      style: {\n        display: !props.admin ? 'none' : '',\n        cursor: !props.active && !props.done ? 'pointer' : 'default'\n      },\n      onClick: () => props.deletePresApp(props.presenter._id, props.index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FaRegTrashAlt, {\n      className: \"trashcan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 34\n      }\n    })), props.presenter.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      style: {\n        textDecoration: props.done ? 'line-through' : 'none',\n        backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, props.presenter.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time\",\n      style: {\n        backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, disTime > disInitTime ?\n    /*#__PURE__*/\n    //time is greater than initial time\n    React.createElement(\"span\", {\n      style: {\n        display: 'inline'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"crossedOut\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, disInitTime), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, \" \", disTime)) : props.active ? disReducedTime : disInitTime, \" min\"), /*#__PURE__*/React.createElement(Timer, {\n      callbackFromParent: timeCallback,\n      active: props.active,\n      done: props.done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }))));\n  });\n};\n\nexport default Presenter;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Presenter.tsx"],"names":["React","useEffect","useState","Draggable","Timer","Slider","FaRegTrashAlt","Presenter","props","realTime","setTime","reducedTime","presenter","time","extra","disReducedTime","Math","ceil","disTime","disInitTime","initTime","timeCallback","timerTime","callbackFromParent","getColor","diff","bonusTime","_id","index","done","active","admin","provided","style","height","percent","draggableProps","innerRef","dragHandleProps","animationPlayState","animationDuration","textDecoration","width","longestName","backgroundColor","textIndent","display","cursor","deletePresApp","name","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {Draggable} from 'react-beautiful-dnd'\r\n\r\nimport './cssFiles/Presenter.css';\r\nimport './cssFiles/Trashcan.css';\r\nimport './cssFiles/DiagonalCrossOut.css'\r\n\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\nimport {FaRegTrashAlt} from \"react-icons/fa\";\r\n\r\nconst Presenter = (props: {\r\n    presenter: IPresenter, percent: number,\r\n    active: boolean, done: boolean, admin: boolean,\r\n    index: number, bonusTime: number, longestName: number,\r\n    callbackFromParent(parentTime: number): void,\r\n    deletePresApp: (_id: string, index: number) => void\r\n}) => {\r\n    const [realTime, setTime] = useState<number>(0);\r\n    let reducedTime = props.presenter.time - props.presenter.extra\r\n\r\n    //display constants\r\n    let disReducedTime = Math.ceil(reducedTime / 1000);\r\n    let disTime = Math.ceil(props.presenter.time / 1000);\r\n    let disInitTime = Math.ceil(props.presenter.initTime / 1000);\r\n\r\n    // let MAX_NAME_WIDTH = 14 * props.longestName;\r\n    //set time using time from Timer class\r\n    const timeCallback = (timerTime: number) => {\r\n        setTime(timerTime);\r\n    }\r\n\r\n    //send time of presenter to App class\r\n    useEffect(() => {\r\n        props.callbackFromParent(realTime)\r\n    }, [realTime])\r\n\r\n    //returns color to indicate how much of the designated time was used\r\n    function getColor() {\r\n        const diff = realTime - props.presenter.time\r\n        //less than or equal to designated time + 1 minute\r\n        if (realTime <= props.presenter.time + 1000) {\r\n            return 'rgb(198,246,241)';\r\n        } else if (props.bonusTime > 0) {\r\n            if (diff > 4) { //overtime\r\n                return 'rgb(254,188,254)';\r\n            }\r\n            if (diff > 1) { //slightly overtime\r\n                return 'rgb(255,202,255)';\r\n            }\r\n            //overtime and no more bonus time (cutting into people's time)\r\n        } else if (props.bonusTime < 1) {\r\n            return 'rgb(252,190,236)';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Draggable draggableId={props.presenter._id} index={props.index}\r\n                   isDragDisabled={props.done || props.active || !props.admin}>\r\n            {provided => {\r\n                const style = {\r\n                    height: props.percent + '%', ...provided.draggableProps.style,\r\n                };\r\n                return (\r\n                    <div className=\"card\" ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         {...provided.dragHandleProps} style={style}>\r\n                        <Slider start={props.active}\r\n                                time={(realTime < reducedTime) ? reducedTime : 0}/>\r\n                        <div\r\n                            className={(realTime < props.presenter.time) ? \"cardForward cardWrap\" : props.bonusTime > 0 ?\r\n                                \"cardReverse cardWrap\" : \"cardReverseNoBonus cardWrap\"}\r\n                            style={{\r\n                                //gradient is paused when presenter is not active\r\n                                animationPlayState: props.active ? 'running' : 'paused',\r\n                                //presenter gradient, transition to darker pink (when cutting into other presenters' time)\r\n                                animationDuration: reducedTime + 'ms, .5s',\r\n                            }}>\r\n                            <div className='name'\r\n                                 style={{\r\n                                     textDecoration: props.done ? 'line-through' : 'none',\r\n                                     //ensure same width for name section of all presenters\r\n                                     width: 60+9*props.longestName + \"px\",\r\n                                     backgroundColor: props.done ? getColor() : !props.active ? 'rgba(240, 240, 240,1)' : '',\r\n                                     textIndent: !props.admin ? '17.5%' : '', //create index where trashcan usually is\r\n                                 }}>\r\n                                <button className=\"trashWrapper\" disabled={props.active || props.done}\r\n                                        style={{\r\n                                            display: !props.admin ? 'none' : '',\r\n                                            cursor: !props.active && !props.done ? 'pointer' : 'default'\r\n                                        }}\r\n                                        onClick={() => props.deletePresApp(props.presenter._id, props.index)}\r\n                                ><FaRegTrashAlt className=\"trashcan\"/>\r\n                                </button>\r\n                                {props.presenter.name}\r\n                            </div>\r\n                            <div className='description' style={{\r\n                                textDecoration: props.done ? 'line-through' : 'none',\r\n                                backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : '',\r\n                            }}>{props.presenter.description}\r\n                            </div>\r\n                            <div className=\"time\" style={{\r\n                                backgroundColor: props.done ? 'rgba(240, 240, 240, 1)' : !props.active ? 'rgb(230, 230, 230)' : '',\r\n                            }}>\r\n                                <div className=\"setTime\">\r\n                                    {disTime > disInitTime ? //time is greater than initial time\r\n                                        <span style={{display: 'inline'}}>\r\n                                        <span className=\"crossedOut\">\r\n                                            {disInitTime}</span>\r\n                                            <span> {disTime}</span>\r\n                                        </span> : props.active ? disReducedTime\r\n                                            : disInitTime} min\r\n                                </div>\r\n                                <Timer callbackFromParent={timeCallback} active={props.active} done={props.done}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Draggable>\r\n    )\r\n}\r\nexport default Presenter\r\n"]},"metadata":{},"sourceType":"module"}