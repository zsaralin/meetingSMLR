{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst Timer = props => {\n  const [seconds, setSeconds] = useState(0);\n  const [milseconds, setMilSeconds] = useState(0);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (props.active) {\n        setMilSeconds(milseconds + 1);\n      }\n    }, 1);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (props.active && milseconds === 10) {\n        setSeconds(seconds + 1);\n        setMilSeconds(0);\n      }\n    });\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  const sendSeconds = () => {\n    props.callbackFromParent(seconds);\n  };\n\n  useEffect(() => {\n    sendSeconds();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 43\n    }\n  }, Math.floor(seconds / 60), \" min \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \" - min \"));\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","milseconds","setMilSeconds","myInterval","setInterval","active","clearInterval","sendSeconds","callbackFromParent","fontSize","marginTop","done","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAER;AACF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIN,KAAK,CAACO,MAAV,EAAkB;AACdH,QAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH;AACJ,KAJ2B,EAIzB,CAJyB,CAA5B;AAKA,WAAO,MAAM;AACTK,MAAAA,aAAa,CAACH,UAAD,CAAb;AACH,KAFD;AAGH,GATQ,CAAT;AAUAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIN,KAAK,CAACO,MAAN,IAAgBJ,UAAU,KAAG,EAAjC,EAAqC;AACjCD,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAG,QAAAA,aAAa,CAAC,CAAD,CAAb;AACH;AACJ,KAL2B,CAA5B;AAMA,WAAO,MAAM;AACTI,MAAAA,aAAa,CAACH,UAAD,CAAb;AACH,KAFD;AAGH,GAVQ,CAAT;;AAWA,QAAMI,WAAW,GAAG,MAAM;AACtBT,IAAAA,KAAK,CAACU,kBAAN,CAAyBT,OAAzB;AACH,GAFD;;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACa,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrBC,IAAI,CAACC,KAAL,CAAYd,OAAO,GAAE,EAArB,CADqB,UAA7B,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHR,CADJ;AAQH,CAxCD;;AA2CA,eAAeF,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Timer = (props:{ active: boolean, done: boolean,\r\n    callbackFromParent(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [milseconds, setMilSeconds] = useState(0);\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (props.active) {\r\n                setMilSeconds(milseconds + 1);\r\n            }\r\n        }, 1)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (props.active && milseconds===10) {\r\n                setSeconds(seconds + 1);\r\n                setMilSeconds(0)\r\n            }\r\n        }, )\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    const sendSeconds = () => {\r\n        props.callbackFromParent(seconds);\r\n    }\r\n    useEffect(() => {\r\n        sendSeconds()\r\n    },)\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%'}}>\r\n            {props.active || props.done ? <div>\r\n                    {Math.floor((seconds /60))} min </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}