{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName, getSize } from \"../API\";\nimport './TodoItem.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\n\nconst Todo = ({\n  percent,\n  todo,\n  active,\n  done,\n  index\n}) => {\n  const [realTime, setTime] = useState(0); // const minuteTime = Math.floor(realTime/60);\n\n  const minuteTime = realTime;\n  let totalOver = minuteTime - todo.time > 0 ? minuteTime - todo.time : 0;\n\n  const timeCallback = timerTime => {\n    setTime(timerTime);\n  };\n\n  const [longest, setLong] = useState(0);\n  const [, setSize] = useState(0);\n  const [color, setColor] = useState('rgb(198,246,241)');\n  useEffect(() => {\n    handleColor();\n    handleLongest();\n    handleSize();\n  });\n\n  const handleColor = () => {\n    const diff = minuteTime - todo.time;\n\n    if (Math.abs(diff) <= 1) {\n      setColor('rgb(198,246,241)');\n    } else if (diff > 4) {\n      setColor('rgb(255,125,255)');\n    } else if (diff > 1) {\n      setColor('rgb(255,202,255)');\n    }\n  };\n\n  const handleLongest = () => {\n    getLongestName().then(({\n      data: {\n        longest\n      }\n    }) => setLong(longest)).catch(err => console.log(err));\n  };\n\n  const handleSize = () => {\n    getSize().then(({\n      data: {\n        sizeArr\n      }\n    }) => setSize(sizeArr)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    handleOvertime();\n  });\n\n  function handleOvertime() {\n    totalOver = minuteTime - todo.time;\n  }\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    isDragDisabled: done || active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, provided => {\n    const style = {\n      // height: (minuteTime < todo.time) ? (todo.time/sizeArr)*100+ '%':((todo.time+totalOver)/(sizeArr))*100+ '%',\n      height: todo.time > 1 ? percent + '%' : '2%',\n      textDecoration: done ? 'line-through' : 'none',\n      color: done ? 'grey' : '',\n      ...provided.draggableProps.style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"Card\",\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      start: active,\n      time: minuteTime < todo.time ? todo.time : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: minuteTime < todo.time ? \"Card--text\" : \"Card--reverse\",\n      style: {\n        animationDuration: todo.time\n        /**60*/\n        + 's',\n        animationPlayState: active ? 'running' : 'paused',\n        backgroundColor: !active && !done ? 'rgb(245, 245, 245)' : '' // backgroundPosition: (minuteTime<todo.time) && active ? '0% 100%': '100% 0%',\n        // textDecoration: done ? 'line-through' : 'none',\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      style: {\n        width: 50 + 2 * longest + \"px\",\n        backgroundColor: done ? color : '',\n        background: !active && !done ? 'rgba(240, 240, 240,1)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, todo.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      style: {\n        // paddingBottom: (minuteTime < todo.time) ? (todo.time/sizeArr)+ '%' : todo.time / (sizeArr/2) + (realTime/*/60*/ - todo.time) + '%',\n        backgroundColor: done ? 'rgba(240, 240, 240, 1)' : '',\n        background: !active && !done ? 'rgb(230, 230, 230)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, todo.description, percent, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time\",\n      style: {\n        backgroundColor: done ? 'rgba(240, 240, 240, 1)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, todo.time, \" \", totalOver, \" min\"), /*#__PURE__*/React.createElement(Timer, {\n      callbackFromParent: timeCallback,\n      initialMinute: todo.time,\n      active: active,\n      done: done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }))));\n  });\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","getLongestName","getSize","Timer","Slider","Todo","percent","todo","active","done","index","realTime","setTime","minuteTime","totalOver","time","timeCallback","timerTime","longest","setLong","setSize","color","setColor","handleColor","handleLongest","handleSize","diff","Math","abs","then","data","catch","err","console","log","sizeArr","handleOvertime","_id","provided","style","height","textDecoration","draggableProps","innerRef","dragHandleProps","animationDuration","animationPlayState","backgroundColor","width","background","name","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport {getLongestName, getSize,} from \"../API\";\r\nimport './TodoItem.css'\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\n\r\ntype Props = TodoProps & {\r\n    index: number\r\n    active: boolean\r\n    done: boolean\r\n    percent: number\r\n}\r\nconst Todo: React.FC<Props> = ({ percent, todo, active, done, index}) => {\r\n    const [realTime, setTime] = useState<number>(0);\r\n    // const minuteTime = Math.floor(realTime/60);\r\n    const minuteTime = realTime;\r\n    let totalOver = minuteTime-todo.time > 0 ?minuteTime-todo.time: 0 ;\r\n    const timeCallback = (timerTime: number) => {\r\n        setTime(timerTime);\r\n    }\r\n    const [longest, setLong] = useState<number>(0);\r\n    const [, setSize] = useState<number>(0);\r\n    const [color, setColor] = useState<string>('rgb(198,246,241)');\r\n    useEffect(() => {\r\n        handleColor()\r\n        handleLongest()\r\n        handleSize()\r\n    },)\r\n    const handleColor = (): void => {\r\n        const diff = minuteTime - todo.time\r\n        if (Math.abs(diff) <= 1) {\r\n            setColor('rgb(198,246,241)');\r\n        } else if (diff > 4) {\r\n            setColor('rgb(255,125,255)');\r\n        } else if (diff > 1) {\r\n            setColor('rgb(255,202,255)');\r\n        }\r\n    }\r\n    const handleLongest = (): void => {\r\n        getLongestName()\r\n            .then(({data: {longest}}: number | any) => setLong(longest))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    const handleSize = (): void => {\r\n        getSize()\r\n            .then(({data: {sizeArr}}: number | any) => setSize(sizeArr))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        handleOvertime()\r\n    });\r\n    function handleOvertime(){\r\n        totalOver = minuteTime - todo.time;\r\n    }\r\n    return (\r\n            <Draggable draggableId={todo._id} index={index} isDragDisabled={done || active} >\r\n                {provided => {\r\n                    const style = {\r\n                        // height: (minuteTime < todo.time) ? (todo.time/sizeArr)*100+ '%':((todo.time+totalOver)/(sizeArr))*100+ '%',\r\n                        height: todo.time > 1? percent + '%': '2%',\r\n                        textDecoration: done ? 'line-through' : 'none',\r\n                        color: done? 'grey':'',\r\n                        ...provided.draggableProps.style,\r\n                    };\r\n                    return (\r\n                    <div className=\"Card\" ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         {...provided.dragHandleProps} style = {style}>\r\n                        <Slider start={active} time={(minuteTime < todo.time) ? todo.time : 0}/>\r\n                        <div className={(minuteTime < todo.time) ? \"Card--text\" : \"Card--reverse\"}\r\n                             style={{\r\n                                 animationDuration: todo.time/**60*/ + 's',\r\n                                 animationPlayState: active ? 'running' : 'paused',\r\n                                 backgroundColor: !active && !done ? 'rgb(245, 245, 245)' : '',\r\n                                 // backgroundPosition: (minuteTime<todo.time) && active ? '0% 100%': '100% 0%',\r\n                                 // textDecoration: done ? 'line-through' : 'none',\r\n                             }}>\r\n                            <div className='name'\r\n                                 style={{\r\n                                     width: 50 + 2 * longest + \"px\", backgroundColor: done ? color : '',\r\n                                     background: !active && !done ? 'rgba(240, 240, 240,1)' : '',\r\n                                 }}>\r\n                                {todo.name} </div>\r\n                            <div className='description' style={{\r\n                                // paddingBottom: (minuteTime < todo.time) ? (todo.time/sizeArr)+ '%' : todo.time / (sizeArr/2) + (realTime/*/60*/ - todo.time) + '%',\r\n                                backgroundColor: done ? 'rgba(240, 240, 240, 1)' : '',\r\n                                background: !active && !done ? 'rgb(230, 230, 230)' : '',\r\n                            }}>{todo.description}{percent} </div>\r\n                            <div className=\"time\" style={{backgroundColor: done ? 'rgba(240, 240, 240, 1)' : ''}}>\r\n                                <div className=\"set-time\" >\r\n                                    {todo.time} {totalOver} min\r\n                                </div>\r\n                                <Timer callbackFromParent={timeCallback} initialMinute={todo.time} active={active}\r\n                                       done={done}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )}}\r\n            </Draggable>\r\n    )\r\n}\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}