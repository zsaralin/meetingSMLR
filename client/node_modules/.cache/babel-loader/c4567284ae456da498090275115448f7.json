{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getTodos, updateTodo, deleteTodo } from './API';\nimport BonusItem from \"./components/BonusItem\";\n\nconst useKeyPress = function (targetKey, ref) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  React.useEffect(() => {\n    var _ref$current, _ref$current2;\n\n    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.addEventListener(\"keydown\", downHandler);\n    (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.addEventListener(\"keyup\", upHandler);\n    return () => {\n      var _ref$current3, _ref$current4;\n\n      (_ref$current3 = ref.current) === null || _ref$current3 === void 0 ? void 0 : _ref$current3.removeEventListener(\"keydown\", downHandler);\n      (_ref$current4 = ref.current) === null || _ref$current4 === void 0 ? void 0 : _ref$current4.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [selected, setSelected] = useState(undefined);\n  const downPress = useKeyPress(\"ArrowDown\", searchBox);\n  const upPress = useKeyPress(\"ArrowUp\", searchBox);\n  const enterPress = useKeyPress(\"Enter\", searchBox);\n  const [cursor, setCursor] = useState(0);\n  const [hovered, setHovered] = useState(undefined);\n  const [searchItem, setSearchItem] = useState(\"\");\n\n  const handelChange = e => {\n    setSelected(undefined);\n    setSearchItem(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    if (items.length && downPress) {\n      setCursor(prevState => prevState < items.length - 1 ? prevState + 1 : prevState);\n    }\n  }, [downPress]);\n  useEffect(() => {\n    if (items.length && upPress) {\n      setCursor(prevState => prevState > 0 ? prevState - 1 : prevState);\n    }\n  }, [upPress]);\n  useEffect(() => {\n    if (items.length && enterPress || items.length && hovered) {\n      setSelected(items[cursor]);\n    }\n  }, [cursor, enterPress]);\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null) return null; // Make sure we're actually moving the item\n\n    if (destination.index === source.index) return null; // Move the item within the list\n    // Start by making a new list without the dragged item\n\n    const newList = todos.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, todos[source.index]); // Update the list\n\n    setTodos(newList);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n    className: \"characters\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }), todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo._id,\n    updateTodo: handleUpdateTodo,\n    deleteTodo: handleDeleteTodo,\n    todo: todo,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), provided.placeholder)), /*#__PURE__*/React.createElement(BonusItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","DragDropContext","Droppable","getTodos","updateTodo","deleteTodo","BonusItem","useKeyPress","targetKey","ref","keyPressed","setKeyPressed","downHandler","key","upHandler","current","addEventListener","removeEventListener","App","todos","setTodos","selected","setSelected","undefined","downPress","searchBox","upPress","enterPress","cursor","setCursor","hovered","setHovered","searchItem","setSearchItem","handelChange","e","currentTarget","value","items","length","prevState","onDragEnd","source","destination","index","newList","filter","_","idx","splice","fetchTodos","then","data","catch","err","console","log","handleUpdateTodo","todo","status","Error","handleDeleteTodo","_id","provided","droppableProps","innerRef","map","placeholder"],"mappings":"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","sourcesContent":["import React, {RefObject, useEffect, useState} from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\n\r\nimport {getTodos, updateTodo, deleteTodo} from './API'\r\nimport BonusItem from \"./components/BonusItem\";\r\n\r\nconst useKeyPress = function (targetKey: string, ref: RefObject<HTMLInputElement>) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n\r\n    function downHandler({ key }: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n\r\n    const upHandler = ({ key }: { key: string }) => {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        ref.current?.addEventListener(\"keydown\", downHandler);\r\n        ref.current?.addEventListener(\"keyup\", upHandler);\r\n\r\n        return () => {\r\n            ref.current?.removeEventListener(\"keydown\", downHandler);\r\n            ref.current?.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    });\r\n\r\n    return keyPressed;\r\n};\r\nconst App: React.FC = () => {\r\n\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const [selected, setSelected] = useState<React.SetStateAction<itemType | undefined>>(undefined);\r\n    const downPress = useKeyPress(\"ArrowDown\", searchBox);\r\n    const upPress = useKeyPress(\"ArrowUp\", searchBox);\r\n    const enterPress = useKeyPress(\"Enter\", searchBox);\r\n    const [cursor, setCursor] = useState<number>(0);\r\n    const [hovered, setHovered] = useState<itemType | undefined>(undefined);\r\n    const [searchItem, setSearchItem] = useState<string>(\"\")\r\n\r\n\r\n    const handelChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\r\n        setSelected(undefined)\r\n        setSearchItem(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (items.length && downPress) {\r\n            setCursor(prevState =>\r\n                prevState < items.length - 1 ? prevState + 1 : prevState\r\n            );\r\n        }\r\n    }, [downPress]);\r\n    useEffect(() => {\r\n        if (items.length && upPress) {\r\n            setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n        }\r\n    }, [upPress]);\r\n    useEffect(() => {\r\n        if (items.length && enterPress || items.length && hovered) {\r\n            setSelected(items[cursor]);\r\n        }\r\n    }, [cursor, enterPress]);\r\n\r\n    const onDragEnd = ({ source, destination }: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null) return null\r\n        // Make sure we're actually moving the item\r\n        if (destination.index === source.index) return null\r\n        // Move the item within the list\r\n        // Start by making a new list without the dragged item\r\n        const newList = todos.filter((_: any, idx: number) => idx !== source.index)\r\n        // Then insert the item at the right location\r\n        newList.splice(destination.index, 0, todos[source.index])\r\n        // Update the list\r\n          setTodos(newList)\r\n    }\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n\r\n  }, [])\r\n\r\n  const fetchTodos = (): void => {\r\n    getTodos()\r\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\r\n    .catch((err: Error) => console.log(err))\r\n  }\r\n\r\n  const handleUpdateTodo = (todo: ITodo): void => {\r\n    updateTodo(todo)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not updated')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleDeleteTodo = (_id: string): void => {\r\n    deleteTodo(_id)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not deleted')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n        return (\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n            <main className='App'>\r\n                <Droppable droppableId='col-1' isDropDisabled={false}>\r\n                    {provided => (\r\n                <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {todos.map((todo: ITodo, index) => (\r\n                        <TodoItem\r\n                            key={todo._id}\r\n                            updateTodo={handleUpdateTodo}\r\n                            deleteTodo={handleDeleteTodo}\r\n                            todo={todo}\r\n                            index= {index}\r\n                        />\r\n                    ))}\r\n                    {provided.placeholder}\r\n                </ul> )}\r\n                </Droppable>\r\n                <BonusItem/>\r\n            </main>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}