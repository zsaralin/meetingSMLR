{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\meetingSMLRWorks\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst Timer = props => {\n  const [seconds, setSeconds] = useState(0);\n  let inc = props.debug ? 100 : 1; //increment value\n\n  let ms = props.debug ? 80 : 1000;\n  let div = props.debug ? 1000 : 60;\n  useEffect(() => {\n    let myInterval = null; //send time from Timer to other components\n\n    props.callbackFromParent(seconds);\n\n    if (props.active) {\n      myInterval = setInterval(() => {\n        setSeconds(seconds => seconds + inc);\n      }, ms);\n    }\n\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 43\n    }\n  }, Math.floor(seconds / div), \" min \") :\n  /*#__PURE__*/\n  //timer is active\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \" - min \") //timer is inactive (presenter is not presenting)\n  );\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/meetingSMLRWorks/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","inc","debug","ms","div","myInterval","callbackFromParent","active","setInterval","clearInterval","fontSize","marginTop","done","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAER;AACF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,MAAIM,GAAG,GAAGH,KAAK,CAACI,KAAN,GAAc,GAAd,GAAkB,CAA5B,CAFE,CAE6B;;AAC/B,MAAIC,EAAE,GAAGL,KAAK,CAACI,KAAN,GAAc,EAAd,GAAkB,IAA3B;AACA,MAAIE,GAAG,GAAGN,KAAK,CAACI,KAAN,GAAc,IAAd,GAAoB,EAA9B;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,UAAe,GAAG,IAAtB,CADY,CAGZ;;AACAP,IAAAA,KAAK,CAACQ,kBAAN,CAAyBP,OAAzB;;AACA,QAAID,KAAK,CAACS,MAAV,EAAkB;AACdF,MAAAA,UAAU,GAAGG,WAAW,CAAC,MAAM;AAC3BR,QAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAGE,GAAxB,CAAV;AACH,OAFuB,EAErBE,EAFqB,CAAxB;AAGH;;AACD,WAAO,MAAM;AACTM,MAAAA,aAAa,CAACJ,UAAD,CAAb;AACH,KAFD;AAGH,GAbQ,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,KAAK,CAACS,MAAN,IAAgBT,KAAK,CAACc,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrBC,IAAI,CAACC,KAAL,CAAWf,OAAO,GAAGK,GAArB,CADqB,UAA7B;AAAA;AACgD;AAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHR,CAG2B;AAH3B,GADJ;AAQH,CA7BD;;AA+BA,eAAeP,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Timer = (props:{ active: boolean, done: boolean, debug: boolean,\r\n    callbackFromParent(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    let inc = props.debug ? 100:1; //increment value\r\n    let ms = props.debug ? 80: 1000;\r\n    let div = props.debug ? 1000: 60;\r\n    useEffect(() => {\r\n        let myInterval: any = null;\r\n\r\n        //send time from Timer to other components\r\n        props.callbackFromParent(seconds);\r\n        if (props.active) {\r\n            myInterval = setInterval(() => {\r\n                setSeconds((seconds) => seconds + inc);\r\n            }, ms);\r\n        }\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%'}}>\r\n            {props.active || props.done ? <div>\r\n                    {Math.floor(seconds / div)} min </div> : //timer is active\r\n                <div> - min </div> //timer is inactive (presenter is not presenting)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}