{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName, getSizeArr } from \"../API\";\nimport './TodoItem.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\n\nconst Todo = ({\n  todo,\n  active,\n  done,\n  index\n}) => {\n  const [realTime, setTime] = useState(0); // const minuteTime = Math.floor(realTime/60);\n\n  const minuteTime = realTime;\n\n  const myCallback = dataFromChild => {\n    setTime(dataFromChild);\n  };\n\n  const [, setLong] = useState(0);\n  const [sizeArr, setSize] = useState(0);\n  const [color, setColor] = useState('rgb(160,240,232)');\n  useEffect(() => {\n    handleColor();\n  });\n\n  const handleColor = () => {\n    const diff = minuteTime - todo.time;\n\n    if (Math.abs(diff) <= 1) {\n      setColor('rgb(160,240,232)');\n    } else if (diff > 4) {\n      setColor('rgb(255,125,255)');\n    } else if (diff > 1) {\n      setColor('rgb(255,202,255)');\n    }\n  };\n\n  useEffect(() => {\n    handleLongest();\n  });\n\n  const handleLongest = () => {\n    getLongestName().then(({\n      data: {\n        longest\n      }\n    }) => setLong(longest)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    handleSize();\n  });\n\n  const handleSize = () => {\n    getSizeArr().then(({\n      data: {\n        sizeArr\n      }\n    }) => setSize(sizeArr)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    isDragDisabled: done || active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"Card\",\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    start: active,\n    time: minuteTime < todo.time ? todo.time : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: minuteTime < todo.time ? \"Card--text\" : \"Card--reverse\",\n    style: {\n      // flex: '1 1',\n      // height: '100px',\n      // height: todo.time*8 + '%',\n      animationDuration: todo.time\n      /**60*/\n      + 's',\n      animationPlayState: active ? 'running' : 'paused',\n      // background: done ? color:'',\n      backgroundColor: !active && !done ? 'rgb(245, 245, 245)' : '',\n      // backgroundPosition: (minuteTime<todo.time) && active ? '0% 100%': '100% 0%',\n      textDecoration: done ? 'line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    style: {\n      width: 50 + 2 * sizeArr + \"px\",\n      backgroundColor: done ? color : '',\n      background: !active && !done ? 'rgba(240, 240, 240,1)' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, todo.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    style: {\n      paddingBottom: minuteTime < todo.time ? todo.time / (sizeArr / 2) + '%' : todo.time / (sizeArr / 2) + (realTime\n      /*/60*/\n      - todo.time) + '%',\n      backgroundColor: done ? 'rgba(230, 230, 230, 1)' : '',\n      background: !active && !done ? 'rgb(230, 230, 230)' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, todo.description, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    style: {\n      backgroundColor: done ? 'rgba(230, 230, 230, 1)' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, todo.time, \" min\"), /*#__PURE__*/React.createElement(Timer, {\n    callbackFromParent: myCallback,\n    initialMinute: todo.time,\n    active: active,\n    done: done,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","getLongestName","getSizeArr","Timer","Slider","Todo","todo","active","done","index","realTime","setTime","minuteTime","myCallback","dataFromChild","setLong","sizeArr","setSize","color","setColor","handleColor","diff","time","Math","abs","handleLongest","then","data","longest","catch","err","console","log","handleSize","_id","provided","innerRef","draggableProps","dragHandleProps","animationDuration","animationPlayState","backgroundColor","textDecoration","width","background","name","paddingBottom","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport {getLongestName, getSizeArr} from \"../API\";\r\nimport './TodoItem.css'\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\n\r\ntype Props = TodoProps & {\r\n    updateTodo: (todo: ITodo) => void\r\n    deleteTodo: (_id: string) => void\r\n    index: number\r\n    active: boolean\r\n    done: boolean\r\n}\r\nconst Todo: React.FC<Props> = ({ todo, active, done, index }) => {\r\n    const [realTime, setTime] = useState<number>(0);\r\n    // const minuteTime = Math.floor(realTime/60);\r\n    const minuteTime = realTime;\r\n    const myCallback = (dataFromChild: number) => {\r\n        setTime(dataFromChild);\r\n    }\r\n    const [, setLong] = useState<number>(0);\r\n    const [sizeArr, setSize] = useState<number>(0);\r\n    const [color, setColor] = useState<string>('rgb(160,240,232)');\r\n    useEffect(() => {\r\n        handleColor()\r\n    },)\r\n    const handleColor = (): void => {\r\n        const diff = minuteTime - todo.time\r\n        if (Math.abs(diff) <= 1) {\r\n            setColor('rgb(160,240,232)');\r\n        } else if (diff > 4) {\r\n            setColor('rgb(255,125,255)');\r\n        } else if (diff > 1) {\r\n            setColor('rgb(255,202,255)');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        handleLongest()\r\n    },)\r\n    const handleLongest = (): void => {\r\n        getLongestName()\r\n            .then(({data: {longest}}: number | any) => setLong(longest))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        handleSize()\r\n    },)\r\n    const handleSize = (): void => {\r\n        getSizeArr()\r\n            .then(({data: {sizeArr}}: number | any) => setSize(sizeArr))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <Draggable draggableId={todo._id} index={index} isDragDisabled={done || active}>\r\n            {provided => (\r\n                <div className=\"Card\" ref={provided.innerRef}\r\n                     {...provided.draggableProps}\r\n                     {...provided.dragHandleProps}>\r\n                    <Slider start={active} time={(minuteTime < todo.time) ? todo.time : 0}/>\r\n                    <div className={(minuteTime < todo.time) ? \"Card--text\" : \"Card--reverse\"}\r\n                         style={{\r\n                             // flex: '1 1',\r\n                             // height: '100px',\r\n                             // height: todo.time*8 + '%',\r\n                             animationDuration: todo.time/**60*/ + 's',\r\n                             animationPlayState: active ? 'running' : 'paused',\r\n                             // background: done ? color:'',\r\n                             backgroundColor: !active && !done ? 'rgb(245, 245, 245)' : '',\r\n                             // backgroundPosition: (minuteTime<todo.time) && active ? '0% 100%': '100% 0%',\r\n                             textDecoration: done ? 'line-through' : 'none',\r\n                         }}>\r\n                        <div className='name'\r\n                             style={{\r\n                                 width: 50 + 2 * sizeArr + \"px\", backgroundColor: done ? color : '',\r\n                                 background: !active && !done ? 'rgba(240, 240, 240,1)' : '',\r\n                             }}>\r\n                            {todo.name} </div>\r\n                        <div className='description' style={{\r\n                            paddingBottom: (minuteTime < todo.time) ? todo.time/(sizeArr/2) + '%' : todo.time / (sizeArr/2) + (realTime/*/60*/ - todo.time) + '%',\r\n                            backgroundColor: done ? 'rgba(230, 230, 230, 1)' : '',\r\n                            background: !active && !done ? 'rgb(230, 230, 230)' : '',\r\n                        }}>{todo.description} </div>\r\n                        <div className=\"time\" style={{backgroundColor: done ? 'rgba(230, 230, 230, 1)' : ''}}>\r\n                            <div className=\"set-time\">\r\n                                {todo.time} min\r\n                            </div>\r\n                            <Timer callbackFromParent={myCallback} initialMinute={todo.time} active={active}\r\n                                   done={done}/>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}