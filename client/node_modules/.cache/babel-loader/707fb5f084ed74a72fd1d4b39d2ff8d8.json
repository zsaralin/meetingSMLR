{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst Timer = props => {\n  const {\n    initialMinute\n  } = props;\n  const [minutes, setMinutes] = useState(0);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (minutes < initialMinute) {\n        setMinutes(minutes + 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, minutes === 0 ? null : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }\n  }, \" \", minutes + \" \" + initialMinute));\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","initialMinute","minutes","setMinutes","myInterval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAsD;AAChE,QAAM;AAACC,IAAAA;AAAD,MAAkBD,KAAxB;AACA,QAAM,CAAEE,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIM,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIH,OAAO,GAAID,aAAf,EAA8B;AAC1BE,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;AACJ,KAJ2B,EAIzB,IAJyB,CAA5B;AAKA,WAAO,MAAK;AACRI,MAAAA,aAAa,CAACF,UAAD,CAAb;AACH,KAFD;AAGH,GATQ,CAAT;AAUA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMF,OAAO,KAAK,CAAZ,GACI,IADJ,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,OAAO,GAAG,GAAV,GAAgBD,aAAtB,CAHV,CADJ;AAQH,CArBD;;AAuBA,eAAeF,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Timer = (props:{ initialMinute: number, active: boolean }) => {\r\n    const {initialMinute} = props;\r\n    const [ minutes, setMinutes ] = useState(0);\r\n    useEffect(()=>{\r\n        let myInterval = setInterval(() => {\r\n            if (minutes  < initialMinute) {\r\n                setMinutes(minutes + 1);\r\n            }\r\n        }, 1000)\r\n        return ()=> {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    return (\r\n        <div>\r\n            { minutes === 0\r\n                ? null\r\n                : <h1> {minutes + \" \" + initialMinute}</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}