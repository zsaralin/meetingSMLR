{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react'; //startTime used for styling (not actually needed since timer keeps going forever)\n\nconst Timer = props => {\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    let myInterval = null;\n    props.callbackFromParent(seconds);\n\n    if (props.active) {\n      myInterval = setInterval(() => {\n        setSeconds(seconds => seconds + 1); // props.callbackFromParent(time);\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 43\n    }\n  }, Math.floor(seconds / 1000), \" min \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \" - min \"));\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","myInterval","callbackFromParent","active","setInterval","clearInterval","fontSize","marginTop","done","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAER;AACF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,UAAe,GAAG,IAAtB;AACAH,IAAAA,KAAK,CAACI,kBAAN,CAAyBH,OAAzB;;AACA,QAAID,KAAK,CAACK,MAAV,EAAkB;AACdF,MAAAA,UAAU,GAAGG,WAAW,CAAC,MAAM;AAC3BJ,QAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAV,CAD2B,CAE3B;AACH,OAHuB,EAGrB,IAHqB,CAAxB;AAIH;;AACD,WAAO,MAAM;AACTM,MAAAA,aAAa,CAACJ,UAAD,CAAb;AACH,KAFD;AAGH,GAZQ,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACK,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACU,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrBC,IAAI,CAACC,KAAL,CAAWX,OAAO,GAAE,IAApB,CADqB,UAA7B,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHR,CADJ;AAQH,CA1BD;;AA6BA,eAAeF,KAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react';\n\n//startTime used for styling (not actually needed since timer keeps going forever)\nconst Timer = (props:{ active: boolean, done: boolean, startTime: number\n    callbackFromParent(listInfo: number): void;\n}) => {\n    const [seconds, setSeconds] = useState(0);\n\n    useEffect(() => {\n        let myInterval: any = null;\n        props.callbackFromParent(seconds);\n        if (props.active) {\n            myInterval = setInterval(() => {\n                setSeconds((seconds) => seconds + 1);\n                // props.callbackFromParent(time);\n            }, 1000);\n        }\n        return () => {\n            clearInterval(myInterval);\n        };\n    });\n    return (\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%'}}>\n            {props.active || props.done ? <div>\n                    {Math.floor(seconds /1000)} min </div> :\n                <div> - min </div>\n            }\n        </div>\n    )\n}\n\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}