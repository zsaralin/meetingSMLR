{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\AddTodo.tsx\";\nimport React, { useState } from 'react';\n\nconst AddTodo = ({\n  todo,\n  saveTodo,\n  deleteTodo\n}) => {\n  const [options] = React.useState([{\n    label: \"\"\n  }, {\n    value: 5,\n    label: \"5\"\n  }, {\n    value: 10,\n    label: '10'\n  }, {\n    value: 15,\n    label: '15'\n  }]);\n  const [formData, setFormData] = useState();\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n  const [time, setTime] = useState();\n\n  const handleInput = e => {\n    if (e.currentTarget.id === 'name') {\n      setName(e.currentTarget.value);\n      setFormData({ ...formData,\n        [e.currentTarget.id]: e.currentTarget.value\n      });\n    } else if (e.currentTarget.id === 'description') {\n      setDescription(e.currentTarget.value);\n      setFormData({ ...formData,\n        [e.currentTarget.id]: e.currentTarget.value\n      });\n    } else {\n      setTime(e.currentTarget.valueAsNumber);\n      setFormData({ ...formData,\n        [\"time\"]: e.currentTarget.valueAsNumber\n      });\n    }\n  };\n\n  const handleOption = e => {\n    setTime(parseInt(e.target.value, 10));\n    setFormData({ ...formData,\n      [\"time\"]: parseInt(e.target.value, 10)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    onSubmit: e => saveTodo(e, formData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputMeetingLen\",\n    style: {\n      width: '150px'\n    },\n    value: name,\n    onChange: handleInput,\n    type: \"text\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputMeetingLen\",\n    style: {\n      width: '400px'\n    },\n    onChange: handleInput,\n    value: description,\n    type: \"text\",\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      backgroundColor: 'rgba(200,200,200,.5)',\n      marginRight: '2px'\n    },\n    onChange: handleOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, options.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.value,\n    value: item.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, item.label))), \" min\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttonStyle\",\n    disabled: name === undefined || description === undefined || time === undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Add Slot\")));\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/AddTodo.tsx"],"names":["React","useState","AddTodo","todo","saveTodo","deleteTodo","options","label","value","formData","setFormData","name","setName","description","setDescription","time","setTime","handleInput","e","currentTarget","id","valueAsNumber","handleOption","parseInt","target","display","flexDirection","width","marginLeft","backgroundColor","marginRight","map","item","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAOA,MAAMC,OAAwB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,QAAP;AAAkBC,EAAAA;AAAlB,CAAD,KAAmC;AAClE,QAAM,CAACC,OAAD,IAAYN,KAAK,CAACC,QAAN,CAAe,CAC/B;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAD+B,EAE/B;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAaD,IAAAA,KAAK,EAAE;AAApB,GAF+B,EAG/B;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaD,IAAAA,KAAK,EAAE;AAApB,GAH+B,EAI/B;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaD,IAAAA,KAAK,EAAE;AAApB,GAJ+B,CAAf,CAAlB;AAMA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;;AAEA,QAAMgB,WAAW,GAAIC,CAAD,IAAgD;AAClE,QAAGA,CAAC,CAACC,aAAF,CAAgBC,EAAhB,KAAuB,MAA1B,EAAiC;AAC/BR,MAAAA,OAAO,CAACM,CAAC,CAACC,aAAF,CAAgBX,KAAjB,CAAP;AACAE,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,SAACS,CAAC,CAACC,aAAF,CAAgBC,EAAjB,GAAsBF,CAAC,CAACC,aAAF,CAAgBX;AAF5B,OAAD,CAAX;AAGG,KALL,MAMK,IAAGU,CAAC,CAACC,aAAF,CAAgBC,EAAhB,KAAuB,aAA1B,EAAwC;AAC3CN,MAAAA,cAAc,CAACI,CAAC,CAACC,aAAF,CAAgBX,KAAjB,CAAd;AACAE,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,SAACS,CAAC,CAACC,aAAF,CAAgBC,EAAjB,GAAsBF,CAAC,CAACC,aAAF,CAAgBX;AAF5B,OAAD,CAAX;AAGG,KALA,MAMD;AACFQ,MAAAA,OAAO,CAACE,CAAC,CAACC,aAAF,CAAgBE,aAAjB,CAAP;AACAX,MAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,SAAC,MAAD,GAAUS,CAAC,CAACC,aAAF,CAAgBE;AAFhB,OAAD,CAAX;AAID;AACF,GApBD;;AAqBA,QAAMC,YAAY,GAAIJ,CAAD,IAAmD;AACtEF,IAAAA,OAAO,CAACO,QAAQ,CAACL,CAAC,CAACM,MAAF,CAAShB,KAAV,EAAiB,EAAjB,CAAT,CAAP;AACAE,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAAC,MAAD,GAAUc,QAAQ,CAACL,CAAC,CAACM,MAAF,CAAShB,KAAV,EAAiB,EAAjB;AAFR,KAAD,CAAX;AAID,GAND;;AAQE,sBACA;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAGU,CAAD,IAAOd,QAAQ,CAACc,CAAD,EAAIT,QAAJ,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAI;AAACgB,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAC;AAAhC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,IAAA,SAAS,EAAG,iBAAnB;AAAqC,IAAA,KAAK,EAAI;AAACC,MAAAA,KAAK,EAAE;AAAR,KAA9C;AAAgE,IAAA,KAAK,EAAIhB,IAAzE;AAA+E,IAAA,QAAQ,EAAEM,WAAzF;AAAsG,IAAA,IAAI,EAAC,MAA3G;AAAkH,IAAA,EAAE,EAAC,MAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,KAAK,EAAI;AAACW,MAAAA,UAAU,EAAE;AAAb,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAO,IAAA,SAAS,EAAG,iBAAnB;AAAqC,IAAA,KAAK,EAAI;AAACD,MAAAA,KAAK,EAAE;AAAR,KAA9C;AAAgE,IAAA,QAAQ,EAAEV,WAA1E;AAAuF,IAAA,KAAK,EAAIJ,WAAhG;AAA6G,IAAA,IAAI,EAAC,MAAlH;AAAyH,IAAA,EAAE,EAAC,aAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE;AAAK,IAAA,KAAK,EAAI;AAACe,MAAAA,UAAU,EAAE;AAAb,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,IAAA,KAAK,EAAI;AAACC,MAAAA,eAAe,EAAC,sBAAjB;AAAyCC,MAAAA,WAAW,EAAE;AAAtD,KAAjB;AAA+E,IAAA,QAAQ,EAAER,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACChB,OAAO,CAACyB,GAAR,CAAYC,IAAI,iBACb;AACI,IAAA,GAAG,EAAEA,IAAI,CAACxB,KADd;AAEI,IAAA,KAAK,EAAEwB,IAAI,CAACxB,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGwB,IAAI,CAACzB,KAJR,CADH,CADD,CAFA,SATF,eAsBE;AAAQ,IAAA,SAAS,EAAG,aAApB;AAAkC,IAAA,QAAQ,EAAEI,IAAI,KAAKsB,SAAT,IAAsBpB,WAAW,KAAKoB,SAAtC,IAAmDlB,IAAI,KAAKkB,SAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBF,CADF,CADA;AA4BH,CArED;;AAuEA,eAAe/B,OAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\ntype Props = { \r\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void\r\n  deleteTodo: (_id: string) => void\r\n}\r\n\r\nconst AddTodo: React.FC<Props> = ({todo, saveTodo , deleteTodo}) => {\r\n  const [options] = React.useState([\r\n    { label: \"\"},\r\n    { value: 5 , label: \"5\"},\r\n    { value: 10, label: '10' },\r\n    { value: 15, label: '15' },\r\n  ]);\r\n  const [formData, setFormData] = useState<ITodo | {}>()\r\n  const [name, setName] = useState<string>();\r\n  const [description, setDescription] = useState<string>()\r\n  const [time, setTime] = useState<number>();\r\n\r\n  const handleInput = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    if(e.currentTarget.id === 'name'){\r\n      setName(e.currentTarget.value)\r\n      setFormData({\r\n        ...formData,\r\n        [e.currentTarget.id]: e.currentTarget.value,\r\n      })}\r\n    else if(e.currentTarget.id === 'description'){\r\n      setDescription(e.currentTarget.value)\r\n      setFormData({\r\n        ...formData,\r\n        [e.currentTarget.id]: e.currentTarget.value,\r\n      })}\r\n    else{\r\n      setTime(e.currentTarget.valueAsNumber)\r\n      setFormData({\r\n        ...formData,\r\n        [\"time\"]: e.currentTarget.valueAsNumber,\r\n      })\r\n    }\r\n  }\r\n  const handleOption = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    setTime(parseInt(e.target.value, 10));\r\n    setFormData({\r\n      ...formData,\r\n      [\"time\"]: parseInt(e.target.value, 10),\r\n    })\r\n  }\r\n\r\n    return (\r\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\r\n      <div style = {{display: 'flex', flexDirection:'row'}}>\r\n        <div>\r\n          <label htmlFor='name'>Name: </label>\r\n          <input className = 'inputMeetingLen' style = {{width: '150px'}} value = {name} onChange={handleInput} type='text' id='name' />\r\n        </div>\r\n        <div style = {{marginLeft: '10px', }}>\r\n          <label htmlFor='description'>Description: </label>\r\n          <input className = 'inputMeetingLen' style = {{width: '400px'}} onChange={handleInput} value = {description} type='text' id='description' />\r\n        </div>\r\n        <div style = {{marginLeft: '10px'}}>\r\n        <label htmlFor='time'>Time: </label>\r\n        <select style = {{backgroundColor:'rgba(200,200,200,.5)', marginRight: '2px'}} onChange={handleOption}>\r\n        {options.map(item => (\r\n            <option\r\n                key={item.value}\r\n                value={item.value}\r\n            >\r\n              {item.label}\r\n            </option>\r\n        ))}\r\n          </select> min\r\n        </div>\r\n        <button className = \"buttonStyle\" disabled={name === undefined || description === undefined || time === undefined} >Add Slot</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTodo\r\n"]},"metadata":{},"sourceType":"module"}