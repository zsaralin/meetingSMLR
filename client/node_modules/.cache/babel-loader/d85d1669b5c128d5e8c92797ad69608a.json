{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\AddTodo.tsx\";\nimport React, { useState } from 'react';\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nconst AddTodo = ({\n  saveTodo\n}) => {\n  const [formData, setFormData] = useState();\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n  const [time, setTime] = useState();\n  state;\n\n  const handleForm = e => {\n    if (e.currentTarget.id === 'name') {\n      setName(e.currentTarget.value);\n    } else if (e.currentTarget.id === 'description') {\n      setDescription(e.currentTarget.value);\n    } else if (e.currentTarget.id === 'time') {\n      setTime(e.currentTarget.value);\n    }\n\n    setFormData({ ...formData,\n      [e.currentTarget.id]: e.currentTarget.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"Form\",\n    onSubmit: e => saveTodo(e, formData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"nameInput\",\n    value: name,\n    onChange: handleForm,\n    type: \"text\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleForm,\n    value: description,\n    type: \"text\",\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Time: \"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleForm,\n    value: time,\n    type: \"number\",\n    id: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: name === undefined || description === undefined || time === undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add Slot\"));\n};\n\nexport default AddTodo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/AddTodo.tsx"],"names":["React","useState","options","value","label","AddTodo","saveTodo","formData","setFormData","name","setName","description","setDescription","time","setTime","state","handleForm","e","currentTarget","id","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Select from 'react-select';\r\nconst options = [\r\n  { value: 'chocolate', label: 'Chocolate' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' },\r\n];\r\ntype Props = { \r\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void \r\n}\r\n\r\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\r\n  const [formData, setFormData] = useState<ITodo | {}>()\r\n  const [name, setName] = useState<string>();\r\n  const [description, setDescription] = useState<string>()\r\n  const [time, setTime] = useState<string>();\r\n  state \r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    if(e.currentTarget.id === 'name'){\r\n      setName(e.currentTarget.value)}\r\n    else if(e.currentTarget.id === 'description'){\r\n      setDescription(e.currentTarget.value)}\r\n    else if(e.currentTarget.id === 'time'){\r\n      setTime(e.currentTarget.value)}\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\r\n      <div>\r\n        <div>\r\n          <label htmlFor='name'>Name: </label>\r\n          <input className = \"nameInput\" value = {name} onChange={handleForm} type='text' id='name' />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='description'>Description: </label>\r\n          <input onChange={handleForm} value = {description} type='text' id='description' />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label htmlFor='time'>Time: </label>\r\n        <input onChange={handleForm} value = {time} type='number' id='time'/>\r\n        </div>\r\n      <button disabled={name === undefined || description === undefined || time === undefined} >Add Slot</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTodo\r\n"]},"metadata":{},"sourceType":"module"}