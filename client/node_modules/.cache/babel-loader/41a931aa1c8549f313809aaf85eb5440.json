{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useState,useEffect}from'react';//startTime used for styling (not actually needed since timer keeps going forever)\nvar Timer=function Timer(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),seconds=_useState2[0],setSeconds=_useState2[1];useEffect(function(){var myInterval=null;props.callbackFromParent(seconds);if(props.active){myInterval=setInterval(function(){setSeconds(function(seconds){return seconds+1;});// props.callbackFromParent(time);\n},1000);}return function(){clearInterval(myInterval);};});return/*#__PURE__*/React.createElement(\"div\",{className:\"timer\",style:{fontSize:\"10px\",marginTop:'-2%'}},props.active||props.done?/*#__PURE__*/React.createElement(\"div\",null,Math.floor(seconds/60),\" min \"):/*#__PURE__*/React.createElement(\"div\",null,\" - min \"));};export default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","myInterval","callbackFromParent","active","setInterval","clearInterval","fontSize","marginTop","done","Math","floor"],"mappings":"oMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAER,CACF,cAA8BH,QAAQ,CAAC,CAAD,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eAEAJ,SAAS,CAAC,UAAM,CACZ,GAAIK,CAAAA,UAAe,CAAG,IAAtB,CACAH,KAAK,CAACI,kBAAN,CAAyBH,OAAzB,EACA,GAAID,KAAK,CAACK,MAAV,CAAkB,CACdF,UAAU,CAAGG,WAAW,CAAC,UAAM,CAC3BJ,UAAU,CAAC,SAACD,OAAD,QAAaA,CAAAA,OAAO,CAAG,CAAvB,EAAD,CAAV,CACA;AACH,CAHuB,CAGrB,IAHqB,CAAxB,CAIH,CACD,MAAO,WAAM,CACTM,aAAa,CAACJ,UAAD,CAAb,CACH,CAFD,CAGH,CAZQ,CAAT,CAaA,mBACI,2BAAK,SAAS,CAAC,OAAf,CAAuB,KAAK,CAAE,CAACK,QAAQ,CAAE,MAAX,CAAmBC,SAAS,CAAE,KAA9B,CAA9B,EACKT,KAAK,CAACK,MAAN,EAAgBL,KAAK,CAACU,IAAtB,cAA6B,+BACrBC,IAAI,CAACC,KAAL,CAAWX,OAAO,CAAE,EAApB,CADqB,SAA7B,cAEG,yCAHR,CADJ,CAQH,CA1BD,CA6BA,cAAeF,CAAAA,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\n//startTime used for styling (not actually needed since timer keeps going forever)\r\nconst Timer = (props:{ active: boolean, done: boolean, startTime: number\r\n    callbackFromParent(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let myInterval: any = null;\r\n        props.callbackFromParent(seconds);\r\n        if (props.active) {\r\n            myInterval = setInterval(() => {\r\n                setSeconds((seconds) => seconds + 1);\r\n                // props.callbackFromParent(time);\r\n            }, 1000);\r\n        }\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%'}}>\r\n            {props.active || props.done ? <div>\r\n                    {Math.floor(seconds /60)} min </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}