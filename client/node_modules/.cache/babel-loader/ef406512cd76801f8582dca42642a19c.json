{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TimeMenu.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport ToggleButton from \"./ToggleButton\";\n\nfunction TimeMenu(props) {\n  const [presenterWarning, setPresenterWarning] = useState(false); //get time from presenter\n\n  const warningCallback = () => {\n    setPresenterWarning(true);\n  };\n\n  useEffect(() => {\n    if (presenterWarning) {\n      setTimeout(() => {\n        setPresenterWarning(false);\n      }, 3000);\n    }\n  }, [presenterWarning]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdownMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addPresMenu\",\n    style: {\n      display: !props.timeMenu ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \" Debug Mode:\", /*#__PURE__*/React.createElement(ToggleButton, {\n    isDebug: props.isDebug,\n    meetingActive: props.meetingActive,\n    presenterWarning: warningCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"xOutSettingsBar\",\n    onClick: props.toggleTimeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addPresMenu\",\n    style: {\n      width: 'fit-content',\n      opacity: !presenterWarning ? 0 : '100%',\n      transition: !presenterWarning ? 'opacity 5s' : 'opacity 1s'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \" Cannot use debug mode when meeting is active. Please refresh and try again. \"));\n}\n\nexport default TimeMenu;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TimeMenu.tsx"],"names":["React","useEffect","useState","ToggleButton","TimeMenu","props","presenterWarning","setPresenterWarning","warningCallback","setTimeout","display","timeMenu","isDebug","meetingActive","toggleTimeMenu","width","opacity","transition"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAEG;AACC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,KAAD,CAAxD,CADD,CAEC;;AACA,QAAMM,eAAe,GAAG,MAAM;AAC1BD,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAFD;;AAGAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,gBAAJ,EAAsB;AAClBG,MAAAA,UAAU,CAAC,MAAM;AACbF,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GANQ,EAMN,CAACD,gBAAD,CANM,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAACI,MAAAA,OAAO,EAAE,CAACL,KAAK,CAACM,QAAP,GAAkB,MAAlB,GAA2B;AAArC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEN,KAAK,CAACO,OAA7B;AAAsC,IAAA,aAAa,EAAIP,KAAK,CAACQ,aAA7D;AACA,IAAA,gBAAgB,EAAEL,eADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEH,KAAK,CAACS,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CADJ,eAQI;AAAK,IAAA,SAAS,EAAC,aAAf;AACK,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAE,CAACV,gBAAD,GAAoB,CAApB,GAAwB,MAAxD;AACHW,MAAAA,UAAU,EAAE,CAACX,gBAAD,GAAoB,YAApB,GAAmC;AAD5C,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFARJ,CADJ;AAeH;;AAED,eAAeF,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport ToggleButton from \"./ToggleButton\";\r\n\r\nfunction TimeMenu(props: {\r\n    timeMenu: boolean, toggleTimeMenu: () => void, isDebug:() => void, meetingActive : boolean\r\n}) {\r\n    const [presenterWarning, setPresenterWarning] = useState(false);\r\n    //get time from presenter\r\n    const warningCallback = () => {\r\n        setPresenterWarning(true)\r\n    }\r\n    useEffect(() => {\r\n        if (presenterWarning) {\r\n            setTimeout(() => {\r\n                setPresenterWarning(false)\r\n            }, 3000)\r\n        }\r\n    }, [presenterWarning])\r\n    return (\r\n        <div className=\"dropdownMenu\">\r\n            <div className=\"addPresMenu\" style={{display: !props.timeMenu ? 'none' : ''}}>\r\n                <label> Debug Mode:\r\n                    <ToggleButton isDebug={props.isDebug} meetingActive = {props.meetingActive}\r\n                    presenterWarning={warningCallback}/>\r\n                </label>\r\n                <button className=\"xOutSettingsBar\" onClick={props.toggleTimeMenu}>x</button>\r\n            </div>\r\n            <div className='addPresMenu'\r\n                 style={{width: 'fit-content', opacity: !presenterWarning ? 0 : '100%',\r\n                     transition: !presenterWarning ? 'opacity 5s' : 'opacity 1s'\r\n                 }}> Cannot use debug mode when meeting is active. Please refresh and try again. </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default TimeMenu\r\n"]},"metadata":{},"sourceType":"module"}