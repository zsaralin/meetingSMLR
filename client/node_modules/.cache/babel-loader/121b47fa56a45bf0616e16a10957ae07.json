{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    const todo = {\n      name: formData.name + formData.time.toString(),\n      description: formData.description,\n      time: formData.time,\n      initTime: formData.time,\n      nonCompressedTime: formData.time,\n      overtime: 0,\n      extra: 0\n    };\n    return await axios.post(baseUrl + '/add-todo', todo);\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getLongestName = async () => {\n  try {\n    const longest = await axios.get(baseUrl + '/todos-long');\n    return longest;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getMeetingLen = async () => {\n  try {\n    return await axios.get(baseUrl + '/meetingLen');\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const postMeetingLen = async meetingLen => {\n  try {\n    return await axios.post(baseUrl + '/postMeetingLen', {\n      meetingLen: meetingLen\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","addTodo","formData","todo","name","time","toString","description","initTime","nonCompressedTime","overtime","extra","post","getLongestName","longest","getMeetingLen","postMeetingLen","meetingLen"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAGA,WAAOE,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAWP,OAAO,MAAME,OAAO,GAAG,MACnBC,QADmB,IAEmB;AACxC,MAAI;AACF,UAAMC,IAAwB,GAAG;AAC/BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IAAT,GAAgBF,QAAQ,CAACG,IAAT,CAAcC,QAAd,EADS;AAE/BC,MAAAA,WAAW,EAAEL,QAAQ,CAACK,WAFS;AAG/BF,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IAHgB;AAI/BG,MAAAA,QAAQ,EAAEN,QAAQ,CAACG,IAJY;AAK/BI,MAAAA,iBAAiB,EAAEP,QAAQ,CAACG,IALG;AAM/BK,MAAAA,QAAQ,EAAE,CANqB;AAO/BC,MAAAA,KAAK,EAAC;AAPyB,KAAjC;AASA,WAAO,MAAMjB,KAAK,CAACkB,IAAN,CACTjB,OAAO,GAAG,WADD,EAETQ,IAFS,CAAb;AAID,GAdD,CAcE,OAAOJ,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CApBM;AAsBP,OAAO,MAAMc,cAAc,GAAG,YAA6B;AACzD,MAAI;AACF,UAAMC,OAAe,GAAG,MAAMpB,KAAK,CAACI,GAAN,CAC1BH,OAAO,GAAG,aADgB,CAA9B;AAGA,WAAOmB,OAAP;AACD,GALD,CAKE,OAAOf,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAWP,OAAO,MAAMgB,aAAa,GAAG,YAAiD;AAC5E,MAAI;AACF,WAAO,MAAMrB,KAAK,CAACI,GAAN,CACTH,OAAO,GAAG,aADD,CAAb;AAGD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CARM;AASP,OAAO,MAAMiB,cAAc,GAAG,MAAOC,UAAP,IAA4C;AACxE,MAAI;AACF,WAAO,MAAMvB,KAAK,CAACkB,IAAN,CACTjB,OAAO,GAAG,iBADD,EACoB;AAACsB,MAAAA,UAAU,EAACA;AAAZ,KADpB,CAAb;AAGD,GAJD,CAIE,OAAOlB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CARM","sourcesContent":["import axios, {AxiosResponse} from 'axios'\r\n\r\nconst baseUrl: string = 'http://localhost:4000'\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + '/todos'\r\n    )\r\n    return todos\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const addTodo = async (\r\n    formData: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todo: Omit<ITodo, '_id'> = {\r\n      name: formData.name + formData.time.toString(),\r\n      description: formData.description,\r\n      time: formData.time,\r\n      initTime: formData.time,\r\n      nonCompressedTime: formData.time,\r\n      overtime: 0,\r\n      extra:0,\r\n    }\r\n    return await axios.post(\r\n        baseUrl + '/add-todo',\r\n        todo\r\n    )\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const getLongestName = async (): Promise<number> => {\r\n  try {\r\n    const longest: number = await axios.get(\r\n        baseUrl + '/todos-long'\r\n    )\r\n    return longest\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const getMeetingLen = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    return await axios.get(\r\n        baseUrl + '/meetingLen'\r\n    )\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\nexport const postMeetingLen = async (meetingLen:number): Promise<void> => {\r\n  try {\r\n    return await axios.post(\r\n        baseUrl + '/postMeetingLen', {meetingLen:meetingLen},\r\n    )\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}