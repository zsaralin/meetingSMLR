{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\BonusItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './BonusItem.css';\nimport Timer from \"./Timer\"; // import Timer from \"./Timer\";\n\nimport Slider from \"./Slider\";\n\nfunction BonusItem(props) {\n  // const [realTime, setTime] = useState<number>(0);\n  // const myCallback = (dataFromChild: number) => {\n  //     setTime(dataFromChild);\n  // }\n  const [color, setColor] = useState('rgb(160,240,232)');\n  useEffect(() => {\n    handleColor();\n  });\n\n  const handleColor = () => {\n    const diff = props.realTime - props.time;\n\n    if (Math.abs(diff) <= 1) {\n      setColor('rgb(160,240,232)');\n    } else if (diff > 4) {\n      setColor('rgb(255,125,255)');\n    } else if (diff > 1) {\n      setColor('rgb(255,202,255)');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-panel\",\n    style: {\n      height: props.percent + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    start: props.active,\n    time: props.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: props.realTime < props.time ? \"Bonus-text\" : \"Bonus-reverse\",\n    style: {\n      animationDuration: props.time + 's',\n      // height: props.percent+'%',\n      height: '100%',\n      animationPlayState: props.active ? 'running' : 'paused',\n      background: props.done ? color : '',\n      textDecoration: props.done ? 'grey line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bonus\",\n    style: {\n      //height:30+fixedTime*2 + '%',\n      background: !props.active && !props.done ? 'rgb(245, 245, 245)' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \" Bonus Time \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bonus-time\",\n    style: {\n      color: \"grey\",\n      textDecoration: props.done ? 'grey line-through' : 'none',\n      background: !props.active && !props.done ? 'rgb(245, 245, 245)' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, props.time, \" min\"), /*#__PURE__*/React.createElement(Timer, {\n    realMinute: props.realTime,\n    initialMinute: props.time,\n    active: props.active,\n    done: props.done,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))));\n}\n\nexport default BonusItem;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/BonusItem.tsx"],"names":["React","useEffect","useState","Timer","Slider","BonusItem","props","color","setColor","handleColor","diff","realTime","time","Math","abs","height","percent","active","animationDuration","animationPlayState","background","done","textDecoration"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './BonusItem.css'\r\nimport Timer from \"./Timer\";\r\n// import Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\n\r\nfunction BonusItem(props: { realTime: number, time: number, active: boolean, done: boolean, percent: number }){\r\n    // const [realTime, setTime] = useState<number>(0);\r\n    // const myCallback = (dataFromChild: number) => {\r\n    //     setTime(dataFromChild);\r\n    // }\r\n    const [color, setColor] = useState<string>('rgb(160,240,232)');\r\n    useEffect(() => {\r\n        handleColor()\r\n    },)\r\n    const handleColor = (): void => {\r\n        const diff = props.realTime-props.time\r\n        if(Math.abs(diff) <= 1){\r\n            setColor('rgb(160,240,232)');\r\n        }\r\n        else if(diff > 4){\r\n            setColor('rgb(255,125,255)');\r\n        }\r\n        else if(diff > 1){\r\n            setColor('rgb(255,202,255)');\r\n        }\r\n\r\n    }\r\n        return(\r\n        <div className=\"bottom-panel\" style = {{height: props.percent+'%'}}>\r\n            <Slider start={props.active} time = {props.time}/>\r\n            <div className={(props.realTime<props.time) ? \"Bonus-text\": \"Bonus-reverse\"}\r\n                 style = {{\r\n                     animationDuration: props.time+'s',\r\n                     // height: props.percent+'%',\r\n                     height: '100%',\r\n                     animationPlayState: props.active? 'running':'paused',\r\n                     background: props.done ? color:'',\r\n                     textDecoration: props.done ? 'grey line-through' : 'none',}}>\r\n                <div className=\"bonus\" style={{//height:30+fixedTime*2 + '%',\r\n                    background: !props.active && !props.done? 'rgb(245, 245, 245)': '',}}> Bonus Time </div>\r\n                <div className=\"bonus-time\" style = {{color: \"grey\", textDecoration: props.done? 'grey line-through':'none',\r\n                    background: !props.active && !props.done? 'rgb(245, 245, 245)': '',}}>\r\n\r\n                <div className=\"set-time\" >\r\n                    {props.time} min</div>\r\n                <Timer realMinute={props.realTime} initialMinute = {props.time} active = {props.active} done = {props.done} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        )}\r\n\r\n\r\nexport default BonusItem"]},"metadata":{},"sourceType":"module"}