{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName } from \"../API\";\n\nconst Todo = ({\n  todo,\n  index\n}) => {\n  const handleLongest = () => {\n    getLongestName().then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      return data;\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    isDragDisabled: todo.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"Card\",\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card--text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \" \", handleLongest()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, todo.description))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","Draggable","getLongestName","Todo","todo","index","handleLongest","then","status","data","Error","catch","err","console","log","_id","provided","innerRef","draggableProps","dragHandleProps","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAAQC,cAAR,QAA6B,QAA7B;;AAOA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAC/C,QAAMC,aAAa,GAAG,MAAY;AAC9BJ,IAAAA,cAAc,GAAGK,IAAjB,CAAsB,CAAC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,KAAsB;AACxC,UAAID,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACD,aAAOD,IAAP;AACH,KALD,EAMKE,KANL,CAMYC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANpB;AAOH,GARD;;AASF,sBACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAER,IAAI,CAACW,GAA7B;AAAkC,IAAA,KAAK,EAAEV,KAAzC;AAAgD,IAAA,cAAc,EAAED,IAAI,CAACI,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,QAAQ,iBACf;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,GAAG,EAAEA,QAAQ,CAACC;AAApC,KACSD,QAAQ,CAACE,cADlB,EAESF,QAAQ,CAACG,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBb,aAAa,EAAtC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,IAAI,CAACgB,WAAnC,CAFF,CAHF,CAFE,CADJ;AAcD,CAxBD;;AA0BA,eAAejB,IAAf","sourcesContent":["import React from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport {getLongestName} from \"../API\";\r\n\r\ntype Props = TodoProps & {\r\n    updateTodo: (todo: ITodo) => void\r\n    deleteTodo: (_id: string) => void\r\n    index: number\r\n}\r\nconst Todo: React.FC<Props> = ({ todo, index }) => {\r\n    const handleLongest = (): void => {\r\n        getLongestName().then(({ status, data }) => {\r\n            if (status !== 200) {\r\n                throw new Error('Error! Todo not deleted')\r\n            }\r\n            return data\r\n        })\r\n            .catch((err) => console.log(err))\r\n    }\r\n  return (\r\n      <Draggable draggableId={todo._id} index={index} isDragDisabled={todo.status}>\r\n          {provided => (\r\n    <div className='Card' ref={provided.innerRef}\r\n         {...provided.draggableProps}\r\n         {...provided.dragHandleProps}>\r\n      <div className=\"Card--text\" >\r\n        <div className='name' > {handleLongest()}</div>\r\n        <div className='description'>{todo.description}</div>\r\n      </div>\r\n    </div>\r\n          )}\r\n      </Draggable>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}