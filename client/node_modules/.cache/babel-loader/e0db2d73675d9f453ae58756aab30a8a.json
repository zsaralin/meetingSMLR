{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName, getSize } from \"../API\";\nimport './TodoItem.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\n\nconst Todo = ({\n  time,\n  overtime,\n  todo,\n  active,\n  done,\n  index\n}) => {\n  // const [realTime, setTime] = useState<number>(0);\n  // const minuteTime = Math.floor(realTime/60);\n  const minuteTime = time; // const timeCallback = (timerTime: number) => {\n  //     setTime(timerTime);\n  // }\n\n  const [longest, setLong] = useState(0);\n  const [sizeArr, setSize] = useState(0);\n  const [color, setColor] = useState('rgb(198,246,241)');\n  useEffect(() => {\n    handleColor();\n    handleLongest();\n    handleSize();\n  });\n\n  const handleColor = () => {\n    const diff = minuteTime - todo.time;\n\n    if (Math.abs(diff) <= 1) {\n      setColor('rgb(198,246,241)');\n    } else if (diff > 4) {\n      setColor('rgb(255,125,255)');\n    } else if (diff > 1) {\n      setColor('rgb(255,202,255)');\n    }\n  };\n\n  const handleLongest = () => {\n    getLongestName().then(({\n      data: {\n        longest\n      }\n    }) => setLong(longest)).catch(err => console.log(err));\n  };\n\n  const handleSize = () => {\n    getSize().then(({\n      data: {\n        sizeArr\n      }\n    }) => setSize(sizeArr)).catch(err => console.log(err));\n  }; // useEffect(() => {\n  //     handleOvertime()\n  // });\n  // function handleOvertime(){\n  //     let myInterval = setInterval(() => {\n  //         if(minuteTime>=todo.time){\n  //             todo.overtime=minuteTime-todo.time+1;\n  //     }},1100);\n  //     return () => {\n  //         clearInterval(myInterval);\n  //     };\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    isDragDisabled: done || active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, provided => {\n    const style = {\n      height: minuteTime < todo.time ? todo.time / sizeArr * 100 + '%' : (todo.time + overtime) / sizeArr * 100 + '%',\n      // height: (todo.time/sizeArr)*100 + '%',\n      textDecoration: done ? 'line-through' : 'none',\n      color: done ? 'grey' : '',\n      ...provided.draggableProps.style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"Card\",\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      start: active,\n      time: minuteTime < todo.time ? todo.time : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: todo.overtime > 0 ? \"Card--text\" : \"Card--reverse\",\n      style: {\n        animationDuration: todo.time\n        /**60*/\n        + 's',\n        animationPlayState: active ? 'running' : 'paused',\n        backgroundColor: !active && !done ? 'rgb(245, 245, 245)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      style: {\n        width: 50 + 2 * longest + \"px\",\n        backgroundColor: done ? color : '',\n        background: !active && !done ? 'rgba(240, 240, 240,1)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, todo.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      style: {\n        // paddingBottom: (minuteTime < todo.time) ? (todo.time/sizeArr)+ '%' : todo.time / (sizeArr/2) + (realTime/*/60*/ - todo.time) + '%',\n        backgroundColor: done ? 'rgba(240, 240, 240, 1)' : '',\n        background: !active && !done ? 'rgb(230, 230, 230)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, todo.description, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time\",\n      style: {\n        backgroundColor: done ? 'rgba(240, 240, 240, 1)' : ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"set-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, todo.time, \" \", overtime, \" min\"), /*#__PURE__*/React.createElement(Timer, {\n      realMinute: time,\n      initialMinute: todo.time,\n      active: active,\n      done: done,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }))));\n  });\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","getLongestName","getSize","Timer","Slider","Todo","time","overtime","todo","active","done","index","minuteTime","longest","setLong","sizeArr","setSize","color","setColor","handleColor","handleLongest","handleSize","diff","Math","abs","then","data","catch","err","console","log","_id","provided","style","height","textDecoration","draggableProps","innerRef","dragHandleProps","animationDuration","animationPlayState","backgroundColor","width","background","name","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport {getLongestName, getSize,} from \"../API\";\r\nimport './TodoItem.css'\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\n\r\ntype Props = TodoProps & {\r\n    index: number\r\n    active: boolean\r\n    done: boolean\r\n    time: number\r\n    overtime: number\r\n}\r\nconst Todo: React.FC<Props> = ({ time, overtime, todo, active, done, index}) => {\r\n\r\n    // const [realTime, setTime] = useState<number>(0);\r\n    // const minuteTime = Math.floor(realTime/60);\r\n    const minuteTime = time;\r\n    // const timeCallback = (timerTime: number) => {\r\n    //     setTime(timerTime);\r\n    // }\r\n    const [longest, setLong] = useState<number>(0);\r\n    const [sizeArr, setSize] = useState<number>(0);\r\n    const [color, setColor] = useState<string>('rgb(198,246,241)');\r\n    useEffect(() => {\r\n        handleColor()\r\n        handleLongest()\r\n        handleSize()\r\n    },)\r\n    const handleColor = (): void => {\r\n        const diff = minuteTime - todo.time\r\n        if (Math.abs(diff) <= 1) {\r\n            setColor('rgb(198,246,241)');\r\n        } else if (diff > 4) {\r\n            setColor('rgb(255,125,255)');\r\n        } else if (diff > 1) {\r\n            setColor('rgb(255,202,255)');\r\n        }\r\n    }\r\n    const handleLongest = (): void => {\r\n        getLongestName()\r\n            .then(({data: {longest}}: number | any) => setLong(longest))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    const handleSize = (): void => {\r\n        getSize()\r\n            .then(({data: {sizeArr}}: number | any) => setSize(sizeArr))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n    // useEffect(() => {\r\n    //     handleOvertime()\r\n    // });\r\n    // function handleOvertime(){\r\n    //     let myInterval = setInterval(() => {\r\n    //         if(minuteTime>=todo.time){\r\n    //             todo.overtime=minuteTime-todo.time+1;\r\n    //     }},1100);\r\n    //     return () => {\r\n    //         clearInterval(myInterval);\r\n    //     };\r\n    // }\r\n    return (\r\n            <Draggable draggableId={todo._id} index={index} isDragDisabled={done || active} >\r\n                {provided => {\r\n                    const style = {\r\n                        height: (minuteTime < todo.time) ? (todo.time/sizeArr)*100+ '%':((todo.time+overtime)/(sizeArr))*100+ '%',\r\n                        // height: (todo.time/sizeArr)*100 + '%',\r\n                        textDecoration: done ? 'line-through' : 'none',\r\n                        color: done? 'grey':'',\r\n                        ...provided.draggableProps.style,\r\n                    };\r\n                    return (\r\n                    <div className=\"Card\" ref={provided.innerRef}\r\n                         {...provided.draggableProps}\r\n                         {...provided.dragHandleProps} style = {style}>\r\n                        <Slider start={active} time={(minuteTime < todo.time) ? todo.time : 0}/>\r\n                        <div className={(todo.overtime>0) ? \"Card--text\" : \"Card--reverse\"}\r\n                             style={{\r\n                                 animationDuration: todo.time/**60*/ + 's',\r\n                                 animationPlayState: active ? 'running' : 'paused',\r\n                                 backgroundColor: !active && !done ? 'rgb(245, 245, 245)' : '',\r\n                             }}>\r\n                            <div className='name'\r\n                                 style={{\r\n                                     width: 50 + 2 * longest + \"px\", backgroundColor: done ? color : '',\r\n                                     background: !active && !done ? 'rgba(240, 240, 240,1)' : '',\r\n                                 }}>\r\n                                {todo.name} </div>\r\n                            <div className='description' style={{\r\n                                // paddingBottom: (minuteTime < todo.time) ? (todo.time/sizeArr)+ '%' : todo.time / (sizeArr/2) + (realTime/*/60*/ - todo.time) + '%',\r\n                                backgroundColor: done ? 'rgba(240, 240, 240, 1)' : '',\r\n                                background: !active && !done ? 'rgb(230, 230, 230)' : '',\r\n                            }}>{todo.description} </div>\r\n                            <div className=\"time\" style={{backgroundColor: done ? 'rgba(240, 240, 240, 1)' : ''}}>\r\n                                <div className=\"set-time\" >\r\n                                    {todo.time} {overtime} min\r\n                                </div>\r\n                                <Timer realMinute={time} initialMinute={todo.time} active={active}\r\n                                       done={done}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )}}\r\n            </Draggable>\r\n    )\r\n}\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}