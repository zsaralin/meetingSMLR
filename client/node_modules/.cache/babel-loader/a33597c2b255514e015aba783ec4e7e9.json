{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\TodoItem.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { getLongestName } from \"../API\";\nimport './TodoItem.css';\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false); // If pressed key is our target key then set to true\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  } // If released key is our target key then set to false\n\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }; //Add event listeners\n\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n\nconst Todo = ({\n  todo,\n  index\n}) => {\n  const [longest, setLong] = useState(0);\n  useEffect(() => {\n    handleLongest();\n  });\n\n  const handleLongest = () => {\n    getLongestName().then(({\n      data: {\n        longest\n      }\n    }) => setLong(longest)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: todo._id,\n    index: index,\n    isDragDisabled: todo.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"Card\",\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card--text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    style: {\n      width: longest * 6.5 + \"px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \" \", todo.name, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"description\",\n    style: {\n      paddingBottom: todo.time / 3 + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, todo.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"set-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, todo.time, \" min\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"real-time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"- min\")))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/TodoItem.tsx"],"names":["React","useEffect","useState","Draggable","getLongestName","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","Todo","todo","index","longest","setLong","handleLongest","then","data","catch","err","console","log","_id","status","provided","innerRef","draggableProps","dragHandleProps","width","name","paddingBottom","time","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport {getLongestName} from \"../API\";\r\nimport './TodoItem.css'\r\n\r\nfunction useKeyPress(targetKey: string) {\r\n    // State for keeping track of whether key is pressed\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    // If pressed key is our target key then set to true\r\n    function downHandler({key}: any) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n\r\n    // If released key is our target key then set to false\r\n    const upHandler = ({key}: any) => {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    }\r\n    //Add event listeners\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n        // Remove event listeners on cleanup\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    }); // Empty array ensures that effect is only run on mount and unmount\r\n    return keyPressed;\r\n}\r\n\r\ntype Props = TodoProps & {\r\n    updateTodo: (todo: ITodo) => void\r\n    deleteTodo: (_id: string) => void\r\n    index: number\r\n}\r\nconst Todo: React.FC<Props> = ({ todo, index }) => {\r\n    const [longest, setLong] = useState<number>(0);\r\n    useEffect(() => {\r\n        handleLongest()\r\n    },)\r\n    const handleLongest = (): void => {\r\n        getLongestName()\r\n            .then(({ data: { longest} }:number|any) => setLong(longest))\r\n            .catch((err: Error) => console.log(err))\r\n    }\r\n\r\n    return (\r\n      <Draggable draggableId={todo._id} index={index} isDragDisabled={todo.status}>\r\n          {provided => (\r\n    <div className='Card' ref={provided.innerRef}\r\n         {...provided.draggableProps}\r\n         {...provided.dragHandleProps}>\r\n      <div className=\"Card--text\" >\r\n        <div className='name' style={{width: longest*6.5 + \"px\"}} > {todo.name} </div>\r\n        <div className='description' style={{paddingBottom: todo.time/3 + '%'}}>{todo.description}</div>\r\n\r\n          <div className=\"time\">\r\n              <div className=\"set-time\">\r\n                  {todo.time} min</div>\r\n              <div className=\"real-time\">\r\n                  - min</div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n          )}\r\n      </Draggable>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}