{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\GradientCard.tsx\";\nimport React from 'react'; //startTime used for styling (not actually needed since timer keeps going forever)\n\nconst GradientCard = props => {\n  return (\n    /*#__PURE__*/\n    //timer disappears when reducedTime < 4\n    React.createElement(\"div\", {\n      className: props.minuteTime < props.reducedTime ? \"Card--text\" : \"Card--reverse\",\n      style: {\n        animationDuration: props.active ? props.minuteTime < props.reducedTime ? props.reducedTime\n        /**60*/\n        + 's' : props.reducedTime + 1 + 's' : '0',\n        animationPlayState: props.active ? 'running' : 'paused' // backgroundPosition: (minuteTime<todo.time) && active ? '0% 100%': '100% 0%',\n        // textDecoration: done ? 'line-through' : 'none',\n        // textIndent: reducedTime < 3 ? '-300%' : '',\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 5\n      }\n    })\n  );\n};\n\nexport default GradientCard;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/GradientCard.tsx"],"names":["React","GradientCard","props","minuteTime","reducedTime","animationDuration","active","animationPlayState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAIC,KAAD,IACf;AAAC;AAAA;AACH;AACA;AAAK,MAAA,SAAS,EAAGA,KAAK,CAACC,UAAN,GAAmBD,KAAK,CAACE,WAA1B,GAAyC,YAAzC,GAAwD,eAAxE;AACK,MAAA,KAAK,EAAE;AACHC,QAAAA,iBAAiB,EAAEH,KAAK,CAACI,MAAN,GAAeJ,KAAK,CAACC,UAAN,GAAmBD,KAAK,CAACE,WAA1B,GAC7BF,KAAK,CAACE;AAAY;AAAlB,UAA4B,GADC,GACIF,KAAK,CAACE,WAAN,GAAoB,CAApB,GAAwB,GAD1C,GAC+C,GAF/D;AAGHG,QAAAA,kBAAkB,EAAEL,KAAK,CAACI,MAAN,GAAe,SAAf,GAA2B,QAH5C,CAIH;AACA;AACA;;AANG,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFG;AAaN,CAdD;;AAiBA,eAAeL,YAAf","sourcesContent":["import React from 'react'\r\n\r\n//startTime used for styling (not actually needed since timer keeps going forever)\r\nconst GradientCard = (props:{ active: boolean, done: boolean, minuteTime: number, reducedTime : number\r\n}) => {return (\r\n    //timer disappears when reducedTime < 4\r\n    <div className={(props.minuteTime < props.reducedTime) ? \"Card--text\" : \"Card--reverse\"}\r\n         style={{\r\n             animationDuration: props.active? (props.minuteTime < props.reducedTime) ?\r\n                 props.reducedTime /**60*/ + 's': props.reducedTime + 1 + 's': '0',\r\n             animationPlayState: props.active ? 'running' : 'paused',\r\n             // backgroundPosition: (minuteTime<todo.time) && active ? '0% 100%': '100% 0%',\r\n             // textDecoration: done ? 'line-through' : 'none',\r\n             // textIndent: reducedTime < 3 ? '-300%' : '',\r\n         }}>\r\n    </div>\r\n)\r\n}\r\n\r\n\r\nexport default GradientCard;"]},"metadata":{},"sourceType":"module"}