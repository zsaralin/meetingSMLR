{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport AddTodo from './components/AddTodo';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API';\nimport fs from \"fs\";\nimport Todo from \"../../server/src/models/todo\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  let myArray = [];\n\n  for (const file of fs.readdirSync(pathFull)) {\n    const data = fs.readFileSync(pathFull + '\\\\' + file).toString('utf8');\n    const todo = new Todo({\n      name: file.toString().substring(0, file.toString().length - 4),\n      description: data.substring(2, data.length - 2),\n      status: false\n    });\n    myArray.push(todo);\n  }\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    addTodo(formData).then(({\n      status,\n      data\n    }) => {\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddTodo, {\n    saveTodo: handleSaveTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), todos.map(todo => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo._id,\n    updateTodo: handleUpdateTodo,\n    deleteTodo: handleDeleteTodo,\n    todo: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","AddTodo","getTodos","addTodo","updateTodo","deleteTodo","fs","Todo","App","todos","setTodos","myArray","file","readdirSync","pathFull","data","readFileSync","toString","todo","name","substring","length","description","status","push","fetchTodos","then","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","Error","handleUpdateTodo","handleDeleteTodo","_id","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport AddTodo from './components/AddTodo'\r\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\r\nimport fs from \"fs\";\r\nimport {ITodo} from \"../../server/src/types/todo\";\r\nimport Todo from \"../../server/src/models/todo\";\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([])\r\n    let myArray = [];\r\n    for (const file of fs.readdirSync(pathFull)) {\r\n        const data = fs.readFileSync(pathFull + '\\\\' + file).toString('utf8')\r\n\r\n        const todo: ITodo = new Todo({\r\n            name: file.toString().substring(0, file.toString().length - 4),\r\n            description: data.substring(2, data.length - 2),\r\n            status: false,\r\n        })\r\n        myArray.push(todo);\r\n    }\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  const fetchTodos = (): void => {\r\n    getTodos()\r\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\r\n    .catch((err: Error) => console.log(err))\r\n  }\r\n\r\n const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\r\n   e.preventDefault()\r\n   addTodo(formData)\r\n   .then(({ status, data }) => {\r\n    if (status !== 201) {\r\n      throw new Error('Error! Todo not saved')\r\n    }\r\n    setTodos(data.todos)\r\n  })\r\n  .catch((err) => console.log(err))\r\n}\r\n\r\n  const handleUpdateTodo = (todo: ITodo): void => {\r\n    updateTodo(todo)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not updated')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleDeleteTodo = (_id: string): void => {\r\n    deleteTodo(_id)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not deleted')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <main className='App'>\r\n      <AddTodo saveTodo={handleSaveTodo} />\r\n      {todos.map((todo: ITodo) => (\r\n        <TodoItem\r\n          key={todo._id}\r\n          updateTodo={handleUpdateTodo}\r\n          deleteTodo={handleDeleteTodo}\r\n          todo={todo}\r\n        />\r\n      ))}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}