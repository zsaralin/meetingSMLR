{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getTodos, updateTodo, deleteTodo } from './API';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [list, setList] = useState([]);\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null) return null; // Make sure we're actually moving the item\n\n    if (destination.index === source.index) return null; // Move the item within the list\n    // Start by making a new list without the dragged item\n\n    const newList = todos.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, list[source.index]); // Update the list\n\n    setTodos(newList);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(({\n      status,\n      data\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n    className: \"characters\"\n  }, provided.droppableProps, {\n    ref: provided.innerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n    key: todo._id,\n    updateTodo: handleUpdateTodo,\n    deleteTodo: handleDeleteTodo,\n    todo: todo,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), \"                \", provided.placeholder, \" \"))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","DragDropContext","Droppable","getTodos","updateTodo","deleteTodo","App","todos","setTodos","list","setList","onDragEnd","source","destination","undefined","index","newList","filter","_","idx","splice","fetchTodos","then","data","catch","err","console","log","handleUpdateTodo","todo","status","Error","handleDeleteTodo","_id","provided","droppableProps","innerRef","map","placeholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\n\r\nimport { getTodos, updateTodo, deleteTodo } from './API'\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([]);\r\n  const [list, setList] = useState<ITodo[]>([]);\r\n\r\n  const onDragEnd = ({ source, destination }: DropResult) => {\r\n    // Make sure we have a valid destination\r\n    if (destination === undefined || destination === null) return null\r\n\r\n    // Make sure we're actually moving the item\r\n    if (destination.index === source.index) return null\r\n\r\n    // Move the item within the list\r\n    // Start by making a new list without the dragged item\r\n    const newList = todos.filter((_: any, idx: number) => idx !== source.index)\r\n\r\n    // Then insert the item at the right location\r\n    newList.splice(destination.index, 0, list[source.index])\r\n\r\n    // Update the list\r\n      setTodos(newList)\r\n    }\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n\r\n  }, [])\r\n\r\n  const fetchTodos = (): void => {\r\n    getTodos()\r\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\r\n    .catch((err: Error) => console.log(err))\r\n  }\r\n\r\n  const handleUpdateTodo = (todo: ITodo): void => {\r\n    updateTodo(todo)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not updated')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleDeleteTodo = (_id: string): void => {\r\n    deleteTodo(_id)\r\n    .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error('Error! Todo not deleted')\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n        return (\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n            <main className='App'>\r\n                <Droppable droppableId='col-1'>\r\n                    {provided => (\r\n                <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {todos.map((todo: ITodo, index) => (\r\n                        <TodoItem\r\n                            key={todo._id}\r\n                            updateTodo={handleUpdateTodo}\r\n                            deleteTodo={handleDeleteTodo}\r\n                            todo={todo}\r\n                            index= {index}\r\n                        />\r\n                    ))}                {provided.placeholder} </ul> )}\r\n                </Droppable>\r\n            </main>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}