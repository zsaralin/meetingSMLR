{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\MyTimer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst MyTimer = props => {\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let myInterval = null;\n\n    if (props.active) {\n      myInterval = setInterval(() => {\n        setTime(time => time + 10);\n      }, 10);\n    } else {\n      clearInterval(myInterval);\n    }\n\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 43\n    }\n  }, \" \", (\"0\" + Math.floor(time / 60000 % 60)).slice(-2)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \" - min \"));\n};\n\nexport default MyTimer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/MyTimer.tsx"],"names":["React","useState","useEffect","MyTimer","props","time","setTime","myInterval","active","setInterval","clearInterval","fontSize","marginTop","done","Math","floor","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAGV;AACF,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,UAAe,GAAG,IAAtB;;AACA,QAAIH,KAAK,CAACI,MAAV,EAAkB;AACdD,MAAAA,UAAU,GAAGE,WAAW,CAAC,MAAM;AAC3BH,QAAAA,OAAO,CAAED,IAAD,IAAUA,IAAI,GAAG,EAAlB,CAAP;AACP,OAF2B,EAEzB,EAFyB,CAAxB;AAEI,KAHR,MAIE;AACFK,MAAAA,aAAa,CAACH,UAAD,CAAb;AACH;;AACG,WAAO,MAAM;AACTG,MAAAA,aAAa,CAACH,UAAD,CAAb;AACH,KAFD;AAGH,GAZQ,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKR,KAAK,CAACI,MAAN,IAAgBJ,KAAK,CAACS,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAO,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAYV,IAAI,GAAG,KAAR,GAAiB,EAA5B,CAAP,EAAwCW,KAAxC,CAA8C,CAAC,CAA/C,CAAP,CAA7B,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJR,CADJ;AASH,CA3BD;;AA6BA,eAAeb,OAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst MyTimer = (props:{ active: boolean, done: boolean,\r\n    callbackFromParent(listInfo: number): void\r\n    // callbackFromParentMil(listInfo: number): void;\r\n}) => {\r\n    const [time, setTime] = useState(0);\r\n    useEffect(() => {\r\n        let myInterval: any = null;\r\n        if (props.active) {\r\n            myInterval = setInterval(() => {\r\n                setTime((time) => time + 10);\r\n        }, 10);}\r\n     else {\r\n        clearInterval(myInterval);\r\n    }\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%',\r\n        }}>\r\n            {props.active || props.done ? <div> {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}\r\n                </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyTimer;"]},"metadata":{},"sourceType":"module"}