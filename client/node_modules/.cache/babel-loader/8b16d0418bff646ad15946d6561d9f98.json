{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react'; //startTime used for styling (not actually needed since timer keeps going forever)\n\nconst Timer = props => {\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (props.active) {\n        setSeconds(seconds + 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  const someFn = () => {\n    props.callbackFromParent(seconds);\n  };\n\n  useEffect(() => {\n    someFn();\n  });\n  return (\n    /*#__PURE__*/\n    //timer disappears when reducedTime < 4\n    React.createElement(\"div\", {\n      className: \"timer\",\n      style: {\n        fontSize: \"12px\",\n        marginTop: '-12%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }\n    }, Math.floor(seconds\n    /*/60*/\n    ), \" min \") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \" - min \"))\n  );\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","myInterval","setInterval","active","clearInterval","someFn","callbackFromParent","fontSize","marginTop","done","Math","floor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAER;AACF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC/B,UAAIJ,KAAK,CAACK,MAAV,EAAkB;AACdH,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACH;AACJ,KAJ2B,EAIzB,IAJyB,CAA5B;AAKA,WAAO,MAAM;AACTK,MAAAA,aAAa,CAACH,UAAD,CAAb;AACH,KAFD;AAGH,GATQ,CAAT;;AAUA,QAAMI,MAAM,GAAG,MAAM;AACjBP,IAAAA,KAAK,CAACQ,kBAAN,CAAyBP,OAAzB;AACH,GAFD;;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,MAAM;AACT,GAFQ,CAAT;AAGA;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACE,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACW,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACzBC,IAAI,CAACC,KAAL,CAAWZ;AAAO;AAAlB,KADyB,UAA7B,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHR;AAFJ;AASC,CA9BL;;AAiCA,eAAeF,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\n//startTime used for styling (not actually needed since timer keeps going forever)\r\nconst Timer = (props:{ active: boolean, done: boolean, startTime: number\r\n    callbackFromParent(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let myInterval = setInterval(() => {\r\n            if (props.active) {\r\n                setSeconds(seconds + 1);\r\n            }\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(myInterval);\r\n        };\r\n    });\r\n    const someFn = () => {\r\n        props.callbackFromParent(seconds);\r\n    }\r\n    useEffect(() => {\r\n        someFn()\r\n    },)\r\n    return (\r\n        //timer disappears when reducedTime < 4\r\n        <div className=\"timer\" style={{fontSize: \"12px\", marginTop: '-12%'}}>\r\n            {props.active || props.done ? <div>\r\n                {Math.floor(seconds/*/60*/)} min </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}