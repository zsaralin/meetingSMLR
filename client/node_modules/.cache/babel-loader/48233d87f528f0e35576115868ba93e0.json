{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Settings from \"./components/Settings\";\nimport PresenterList from \"./components/PresenterList\";\nimport MeetingLenMenu from \"./components/MeetingLenMenu\";\nimport AddPresMenu from \"./components/AddPresMenu\";\nimport TimeMenu from \"./components/TimeMenu\";\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { getPresDatabase, addPres, deletePres, getMeetingLen, postMeetingLen } from './API';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"; // @ts-ignore\n\nimport audio from './fanfare.mp3';\nlet trumpetSound = new Audio(audio);\ntrumpetSound.muted = true;\nconst ws = new WebSocket(\"ws://localhost:8000\"); //shuffle array of participants so order of meeting isn't the same for every meeting\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nconst useKeyPress = function (targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  function upHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nconst App = () => {\n  const downPress = useKeyPress(\"ArrowDown\");\n  const upPress = useKeyPress(\"ArrowUp\");\n  const [pres, setPres] = useState([]); //array of presenters\n\n  const [selected, setSelected] = useState(); //active presenter\n\n  const [before, setBefore] = useState(); //previous active presenter\n\n  const [cursor, setCursor] = useState(-1); //index of active presenter\n\n  const [realTime, setTime] = useState(0); //index of pres that time is currently being taken from\n\n  const [lastIndex, setLastIndex] = useState(1); //time that has been subtracted from pres when active pres is overtime\n\n  const [amountSubtract, setAmountSubtract] = useState(0); //total (compressed) time of all presenters\n\n  const [totTime, setTotTime] = useState(0); //difference between meeting len and total time of presenters\n\n  const [diff, setDiff] = useState(0);\n  const [compressIndex, setCompressIndex] = useState(cursor + 1);\n  const [meetingLen, setMeetingLen] = useState(0); // const [tempMeeting, setTempMeeting] = useState<number>();\n\n  const [origBonus, setOrigBonus] = useState(0);\n  const [bonusTime, setBonus] = useState(0); //boolean values to display menu/dropdown text\n\n  const [meetingLenMenu, setMeetingLenMenu] = useState(false);\n  const [addPresMenu, setAddPresMenu] = useState(false);\n  const [timeMenu, setTimeMenu] = useState(false);\n  const [presenterWarning, setPresenterWarning] = useState(false); //meeting in seconds (for debug) or minutes (for actual meetings)\n\n  const [debug, setDebug] = useState(false);\n  const [divValue, setDivValue] = useState(60);\n  const [incValue, setIncValue] = useState(1); //increment by 100s (for demo) or 1s (for meeting)\n\n  let isAdmin = window.location.pathname === '/admin'; //true if pathname is admin\n\n  let bonusActive = cursor === pres.length && bonusTime > 0; //true when bonus time is active\n\n  let bonusDone = cursor === pres.length + 1 && bonusTime > 0; //true when bonus time is done\n\n  ws.addEventListener('open', function () {\n    console.log(\"Connected to server\");\n  });\n\n  ws.onmessage = event => {\n    if (event.data === 'downPress') {\n      downPressFn();\n    } else if (event.data === 'upPress') {\n      upPressFn();\n    } else if (event.data === 'refresh') {\n      window.location.reload();\n    } else if (JSON.parse(event.data).name === 'deletePres') {\n      const object = JSON.parse(event.data);\n      deletePresHelper(object.index);\n    } else if (JSON.parse(event.data).name === 'addPres') {\n      const object = JSON.parse(event.data);\n      addPresHelper(object.newPres);\n    } else if (JSON.parse(event.data).name === 'meetingLen') {\n      const object = JSON.parse(event.data);\n      setMeetingLen(object.meetingLen * divValue);\n    } else if (JSON.parse(event.data).name === 'presOrder') {\n      const object = JSON.parse(event.data);\n      setPres(object.pres);\n    }\n  }; //drag and drop presenters\n\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null || destination.index < source.index && destination.index <= cursor) {\n      window.scrollTo(0, 0);\n      return null;\n    } // Make sure we're actually moving the item\n\n\n    if (destination.index === source.index) {\n      window.scrollTo(0, 0);\n      return null;\n    } // Move the item within the list\n    // Start by making a new list without the dragged item\n\n\n    const newList = pres.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, pres[source.index]); // Update the list\n\n    setPres(newList); //send new order to all clients\n\n    const msg = {\n      name: \"presOrder\",\n      pres: newList\n    };\n    ws.send(JSON.stringify(msg));\n    window.scrollTo(0, 0);\n  };\n\n  const toggleMeetingLenMenu = () => {\n    setMeetingLenMenu(!meetingLenMenu);\n    setAddPresMenu(false);\n    setTimeMenu(false);\n  };\n\n  const toggleTimeMenu = () => {\n    setTimeMenu(!timeMenu);\n    setAddPresMenu(false);\n    setMeetingLenMenu(false);\n  };\n\n  const toggleAddPresMenu = () => {\n    setAddPresMenu(!addPresMenu);\n    setMeetingLenMenu(false);\n    setTimeMenu(false);\n  };\n\n  const togglePresenterWarning = () => {\n    setPresenterWarning(!presenterWarning);\n  };\n\n  const closeMenu = () => {\n    if (isAdmin) {\n      setMeetingLenMenu(false);\n      setAddPresMenu(false);\n      setTimeMenu(false);\n    }\n  };\n\n  function playTrumpetSound() {\n    trumpetSound.muted = false;\n    const playPromise = trumpetSound.play();\n\n    if (playPromise !== undefined) {\n      playPromise.then(_ => {\n        console.log(\"audio played auto\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  } //if pres takes less than set time\n\n\n  function presUnderTime() {\n    if (selected !== undefined) {\n      if (selected.overtime === 0 && realTime < selected.time) {\n        let difference = selected.time - realTime;\n        let presDecreased = getTimeLost(); //if other pres are under time\n\n        if (presDecreased > 0) {\n          let subtract = Math.floor(difference / presDecreased); //increase subsequent pres that are under time (until they are back to their set times)\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            if (pres[i].time < pres[i].initTime) {\n              pres[i].time += subtract;\n              difference -= subtract;\n            }\n          }\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            while (difference > 0 && pres[i].time < pres[i].initTime) {\n              pres[i].time += 1;\n              difference -= 1;\n            }\n          }\n        }\n\n        setBonus(bonusTime + difference);\n        selected.extra += selected.time - realTime;\n      }\n    }\n  }\n\n  function beforeUnderTime() {\n    if (before !== undefined) {\n      //if slot before took less than designated time\n      if (before.extra > 0) {\n        let difference = before.extra;\n        let timeLost = getTimeLost();\n        before.extra = 0;\n\n        if (timeLost > 0) {\n          let subtract = Math.floor(difference / timeLost);\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            pres[i].time -= subtract;\n            difference -= subtract;\n          } //increase subsequent slots that are under time (until they are back to their set times)\n\n\n          for (let i = cursor + 1; i < pres.length; i++) {\n            while (difference > 0 && pres[i].time < pres[i].initTime) {\n              pres[i].time -= 1;\n              difference -= 1;\n            }\n          }\n        } else {\n          setBonus(bonusTime - difference);\n        }\n      }\n    }\n  }\n\n  function presOvertime() {\n    if (selected !== undefined) {\n      //if person goes overtime\n      if (realTime > Math.round(selected.time - selected.extra) && !(cursor === pres.length - 1 && bonusTime <= 0)) {\n        //increase selected.overtime so their box increases in size\n        //only increase box when there is bonusTime or other people's time left to take from\n        if (isTimeLeft() || bonusTime > 0) {\n          selected.overtime = realTime - Math.round(selected.time - selected.extra);\n        } //decrease other slots if bonusTime == 0\n\n\n        if (bonusTime < incValue) {\n          if (isTimeLeft()) {\n            if (cursor + lastIndex >= pres.length) {\n              //reset lastIndex at 1\n              setLastIndex(getLastIndex(1));\n            }\n\n            pres[cursor + lastIndex].time -= incValue;\n            setAmountSubtract(amountSubtract + incValue);\n\n            if (amountSubtract === divValue) {\n              //when 1 minute has been taken from presenter, move to next presenter\n              if (lastIndex + 1 < pres.length) {\n                setLastIndex(getLastIndex(lastIndex + 1));\n              } //if presenter with index = cursor + lastIndex is <= 1 minute, begin taking time from next presenter\n              else {\n                  //reset lastIndex at 1 if cursor + lastIndex >= pres.length\n                  setLastIndex(getLastIndex(1));\n                }\n\n              setAmountSubtract(0);\n            }\n          }\n        } else if (bonusTime >= incValue) {\n          //decrease bonusTime\n          setBonus(bonusTime - incValue);\n        }\n      }\n    }\n  } //time is taken from presenter with index = cursor + lastIndex when active pres is overtime\n\n\n  function getLastIndex(lastIndex) {\n    //find next presenter with time > 1 min\n    for (let i = cursor + lastIndex; i < pres.length; i++) {\n      if (pres[i].time > divValue) {\n        return i - cursor;\n      }\n    } //if no presenter following lastIndex with time > 1 min and presenter at cursor + 1 has time < 1\n    //find next presenter after cursor + 1 with time > 1 min\n\n\n    if (pres[cursor + 1].time <= divValue) {\n      for (let i = cursor + 2; i < pres.length; i++) {\n        if (pres[i].time > divValue) {\n          return i - cursor;\n        }\n      }\n    } //otherwise, return 1 (reset lastIndex at 1)\n\n\n    return 1;\n  } //when down key is pressed\n\n\n  function downPressFn() {\n    //play sound only when meeting starts (cursor = -1 --> cursor = 0)\n    if (cursor === -1) {\n      playTrumpetSound();\n    }\n\n    setLastIndex(1);\n    presUnderTime();\n\n    if (cursor < pres.length) {\n      setCursor(prevState => prevState < pres.length ? prevState + 1 : prevState);\n    } else {\n      setCursor(pres.length + 1);\n    }\n\n    setBefore(pres[cursor]);\n    setSelected(pres[cursor + 1]);\n  } //when up key is pressed\n\n\n  function upPressFn() {\n    setLastIndex(1);\n    beforeUnderTime();\n    setBefore(pres[cursor - 2]);\n    setCursor(prevState => prevState > 0 ? prevState - 1 : prevState);\n    setSelected(pres[cursor - 1]);\n  } //set time of each presenter back to original non compressed time\n\n\n  function resetPres() {\n    for (let i = 0; i < pres.length; i++) {\n      pres[i].initTime = pres[i].nonCompressedTime;\n      pres[i].time = pres[i].nonCompressedTime;\n    }\n\n    setTotTime(getTotTime());\n  } //get time from presenter\n\n\n  const timeCallback = presenterTime => {\n    setTime(presenterTime);\n  }; //compress time of presenters if meetingLen< total time of presenters\n\n\n  function compressPres() {\n    console.log('here');\n\n    if (pres[compressIndex] !== undefined) {\n      if (pres[compressIndex].time > divValue) {\n        pres[compressIndex].initTime -= divValue;\n        pres[compressIndex].time -= divValue;\n        setDiff(diff - divValue);\n      }\n\n      setCompressIndex(compressIndex + 1);\n\n      if (compressIndex === pres.length - 1) {\n        setCompressIndex(cursor + 1);\n      }\n    }\n\n    setTotTime(getTotTime());\n  } //returns total (compressed) time of presenters\n\n\n  const getTotTime = () => {\n    let totTime = 0;\n\n    for (let i = 0; i < pres.length; i++) {\n      totTime += pres[i].time + pres[i].overtime - pres[i].extra;\n    }\n\n    return totTime;\n  }; //returns true if any presenter has time > 1 minute\n\n\n  const isTimeLeft = () => {\n    for (let i = cursor + 1; i < pres.length; i++) {\n      if (pres[i].time > divValue) {\n        return true;\n      }\n    }\n\n    return false;\n  }; //returns total time lost for all presenters (from people going overtime)\n\n\n  const getTimeLost = () => {\n    let timeLost = 0;\n\n    for (let i = cursor + 1; i < pres.length; i++) {\n      if (pres[i].initTime > pres[i].time) {\n        timeLost += pres[i].initTime - pres[i].time;\n      }\n    }\n\n    return timeLost;\n  }; //change meeting style (seconds or minutes)\n\n\n  function changeMeetingStyle() {\n    setDebug(!debug);\n  }\n\n  useEffect(() => {\n    //get meeting length and presenters at start\n    console.log('meetingLen' + meetingLen);\n\n    if (debug) {\n      //convert to seconds version\n      setDivValue(1000);\n      setIncValue(100);\n\n      for (let i = 0; i < pres.length; i++) {\n        pres[i].time = pres[i].time / 60 * 1000;\n        pres[i].initTime = pres[i].initTime / 60 * 1000;\n        pres[i].nonCompressedTime = pres[i].nonCompressedTime / 60 * 1000;\n      }\n\n      setMeetingLen(meetingLen / 60 * 1000);\n      console.log('here0' + meetingLen);\n    } else {\n      setDivValue(60);\n      setIncValue(1);\n\n      for (let i = 0; i < pres.length; i++) {\n        pres[i].time = pres[i].time / 1000 * 60;\n        pres[i].initTime = pres[i].initTime / 1000 * 60;\n        pres[i].nonCompressedTime = pres[i].nonCompressedTime / 1000 * 60;\n      }\n\n      console.log('here1' + meetingLen);\n      setMeetingLen(meetingLen / 60 * 1000);\n    }\n\n    fetchMeetingLen();\n  }, [debug]);\n  useEffect(() => {\n    //get meeting length and presenters at start\n    fetchMeetingLen();\n  }, []);\n  useEffect(() => {\n    //get meeting length and presenters at start\n    fetchPres();\n  }, []);\n  useEffect(() => {\n    //when delete/add pres, get and set new total time\n    setTotTime(getTotTime());\n  }, [pres]);\n  useEffect(() => {\n    if (meetingLen > totTime) {\n      //set bonus time\n      setOrigBonus(meetingLen - totTime);\n      setDiff(0);\n    } else {\n      setOrigBonus(0); //set diff to trigger compressPres\n\n      if (meetingLen < totTime) {\n        setDiff(totTime - meetingLen);\n      }\n    }\n  }, [totTime, meetingLen]);\n  useEffect(() => {\n    if (diff > 0 && totTime !== pres.length * divValue) {\n      compressPres();\n    }\n  }, [compressIndex, diff]);\n  useEffect(() => {\n    setCompressIndex(0); //reset start index for compress pres\n\n    resetPres(); //reset pres times when meeting len changes\n  }, [meetingLen]);\n  useEffect(() => {\n    //set bonusTime when origBonus changes\n    setBonus(origBonus);\n  }, [origBonus]);\n  useEffect(() => {\n    presOvertime(); //\n  }, [realTime]);\n  useEffect(() => {\n    //refresh all clients if admin refreshes\n    window.onbeforeunload = () => {\n      if (isAdmin) {\n        ws.send('refresh');\n      }\n    };\n  });\n  useEffect(() => {\n    if (presenterWarning) {\n      setTimeout(() => {\n        togglePresenterWarning();\n      }, 1000);\n    }\n  }, [presenterWarning]); //delete pres in database\n\n  const handleDeletePres = (_id, index) => {\n    deletePres(_id).then(({\n      status\n    }) => {\n      if (status !== 200) {\n        throw new Error('Error! Presenter not deleted');\n      } else {\n        //send index of deleted pres to all clients\n        const msg = {\n          name: \"deletePres\",\n          index: index\n        };\n        ws.send(JSON.stringify(msg));\n      }\n    }).catch(err => console.log(err));\n  }; //delete pres in frontend\n\n\n  const deletePresHelper = index => {\n    pres.splice(index, 1);\n    setPres(pres);\n    resetPres(); //ensure same order of presenters after pres is deleted\n\n    const msg = {\n      name: \"presOrder\",\n      pres: pres\n    };\n    ws.send(JSON.stringify(msg));\n  }; //only admin can control the meeting with up/down keys\n\n\n  useEffect(() => {\n    if (downPress && isAdmin) {\n      ws.send('downPress');\n    }\n  }, [downPress]);\n  useEffect(() => {\n    if (upPress && isAdmin) {\n      ws.send('upPress');\n    }\n  }, [upPress]); //get pres from database, and shuffle order\n\n  const fetchPres = () => {\n    getPresDatabase().then(({\n      data: {\n        pres\n      }\n    }) => shufflePres(pres)).catch(err => console.log(err));\n  }; //shuffle pres\n\n\n  function shufflePres(inputPres) {\n    //hardcoded arrays\n    let interns = ['Daron', 'Srishti', 'Matthew', 'Vikram', 'Saralin', 'Damien', 'Tobias', 'Karthik', 'Michael'];\n    let fullTimers = ['Jo', 'Kendra', 'Qian', 'Bon', 'David', 'Frederik'];\n    let finalWord = ['Fraser', 'Justin'];\n    let namesList = [];\n    let finalList = [];\n    let presList = [];\n    let otherList = []; //presenters not in hardcoded arrays\n    //shuffle each array\n\n    shuffleArray(interns);\n    shuffleArray(fullTimers);\n    shuffleArray(finalWord); //combine 3 arrays into one\n\n    let orderedList = interns.concat(fullTimers, finalWord);\n    inputPres.forEach(element => {\n      if (orderedList.includes(element.name)) {\n        namesList.push(element.name);\n        presList.push(element);\n      } else {\n        otherList.push(element);\n      }\n    }); //add other presenters (not in hardcoded arrays) to final list\n\n    otherList.forEach(element => {\n      finalList.push(element);\n    });\n\n    for (let i = 0; i < orderedList.length; i++) {\n      if (namesList.includes(orderedList[i])) {\n        let file = presList[namesList.indexOf(orderedList[i])];\n        finalList.push(file);\n      }\n    }\n\n    for (let i = 0; i < finalList.length; i++) {\n      minToSec(finalList[i]);\n    }\n\n    setPres(finalList); //send order of presenters to each client\n\n    const msg = {\n      name: \"presOrder\",\n      pres: finalList\n    };\n    ws.send(JSON.stringify(msg));\n  } //convert time (minutes in DB) to seconds\n\n\n  function minToSec(pres) {\n    pres.time = pres.time * divValue;\n    pres.initTime = pres.initTime * divValue;\n    pres.nonCompressedTime = pres.nonCompressedTime * divValue;\n  } //get meetingLen from database, set meetingLen in seconds\n\n\n  function fetchMeetingLen() {\n    getMeetingLen().then(({\n      data: {\n        meetingLen\n      }\n    }) => setMeetingLen(meetingLen * divValue)).catch(err => console.log(err));\n  } //update meetingLen in database, set meetingLen in seconds\n\n\n  const handleMeetingLen = (e, meetingLen) => {\n    e.preventDefault();\n\n    if (meetingLen !== undefined) {\n      postMeetingLen(meetingLen).then(response => {\n        console.log(response);\n      });\n      setMeetingLen(meetingLen * divValue);\n      setMeetingLenMenu(false); //send new meetingLen to each client\n\n      const msg = {\n        name: \"meetingLen\",\n        meetingLen: meetingLen\n      };\n      ws.send(JSON.stringify(msg));\n    }\n  };\n\n  const handleAddPres = (e, formData) => {\n    e.preventDefault();\n    let presNames = pres.map(a => a.name); //array of pres names\n    //if new presenter name does not already exist in pres array AND bonus time is not active --> add pres\n\n    if (!presNames.includes(formData.name) && !bonusActive) {\n      addPres(formData).then(({\n        status,\n        data\n      }) => {\n        if (status !== 201) {\n          throw new Error('Error! Presenter not saved');\n        } else if (data.presenter) {\n          const msg = {\n            name: \"addPres\",\n            newPres: data.presenter\n          };\n          ws.send(JSON.stringify(msg));\n          setAddPresMenu(false);\n        }\n      }).catch(err => console.log(err));\n    } else {\n      //display warning as either presenter name is not unique, or bonus time is active\n      togglePresenterWarning();\n    }\n  }; //add pres to frontend\n\n\n  const addPresHelper = newPres => {\n    minToSec(newPres); //convert time to seconds\n\n    pres.push(newPres); //add new pres to pres array\n\n    setPres(pres); //update state of pres array\n\n    resetPres();\n    const msg = {\n      name: \"presOrder\",\n      pres: pres\n    }; //send new order of presenters to each client\n\n    ws.send(JSON.stringify(msg));\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PresenterList, {\n    meetingLen: meetingLen,\n    isAdmin: isAdmin,\n    pres: pres,\n    cursor: cursor,\n    bonusTime: bonusTime,\n    origBonus: origBonus,\n    totTime: totTime,\n    bonusActive: bonusActive,\n    bonusDone: bonusDone,\n    closeMenu: closeMenu,\n    timeCallback: timeCallback,\n    handleDeletePres: handleDeletePres,\n    debug: debug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MeetingLenMenu, {\n    meetingLenCallback: handleMeetingLen,\n    meetingLenMenu: meetingLenMenu,\n    toggleMeetingLenMenu: toggleMeetingLenMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(AddPresMenu, {\n    toggleAddPresMenu: toggleAddPresMenu,\n    addPresMenu: addPresMenu,\n    bonusActive: bonusActive,\n    handleAddPres: handleAddPres,\n    presenterWarning: presenterWarning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(PresenterList, {\n    meetingLen: meetingLen,\n    isAdmin: isAdmin,\n    pres: pres,\n    cursor: cursor,\n    bonusTime: bonusTime,\n    origBonus: origBonus,\n    totTime: totTime,\n    bonusActive: bonusActive,\n    bonusDone: bonusDone,\n    closeMenu: closeMenu,\n    timeCallback: timeCallback,\n    handleDeletePres: handleDeletePres,\n    debug: debug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TimeMenu, {\n    isDebug: changeMeetingStyle,\n    toggleTimeMenu: toggleTimeMenu,\n    meetingActive: cursor > -1,\n    timeMenu: timeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Settings, {\n    toggleMeetingLenMenu: toggleMeetingLenMenu,\n    toggleAddPresMenu: toggleAddPresMenu,\n    toggleTimeMenu: toggleTimeMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","Settings","PresenterList","MeetingLenMenu","AddPresMenu","TimeMenu","DragDropContext","getPresDatabase","addPres","deletePres","getMeetingLen","postMeetingLen","BrowserRouter","Router","Route","Switch","audio","trumpetSound","Audio","muted","ws","WebSocket","shuffleArray","array","i","length","j","Math","floor","random","temp","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","App","downPress","upPress","pres","setPres","selected","setSelected","before","setBefore","cursor","setCursor","realTime","setTime","lastIndex","setLastIndex","amountSubtract","setAmountSubtract","totTime","setTotTime","diff","setDiff","compressIndex","setCompressIndex","meetingLen","setMeetingLen","origBonus","setOrigBonus","bonusTime","setBonus","meetingLenMenu","setMeetingLenMenu","addPresMenu","setAddPresMenu","timeMenu","setTimeMenu","presenterWarning","setPresenterWarning","debug","setDebug","divValue","setDivValue","incValue","setIncValue","isAdmin","location","pathname","bonusActive","bonusDone","console","log","onmessage","event","data","downPressFn","upPressFn","reload","JSON","parse","name","object","deletePresHelper","index","addPresHelper","newPres","onDragEnd","source","destination","undefined","scrollTo","newList","filter","_","idx","splice","msg","send","stringify","toggleMeetingLenMenu","toggleTimeMenu","toggleAddPresMenu","togglePresenterWarning","closeMenu","playTrumpetSound","playPromise","play","then","catch","error","presUnderTime","overtime","time","difference","presDecreased","getTimeLost","subtract","initTime","extra","beforeUnderTime","timeLost","presOvertime","round","isTimeLeft","getLastIndex","prevState","resetPres","nonCompressedTime","getTotTime","timeCallback","presenterTime","compressPres","changeMeetingStyle","fetchMeetingLen","fetchPres","onbeforeunload","setTimeout","handleDeletePres","_id","status","Error","err","shufflePres","inputPres","interns","fullTimers","finalWord","namesList","finalList","presList","otherList","orderedList","concat","forEach","element","includes","push","file","indexOf","minToSec","handleMeetingLen","e","preventDefault","response","handleAddPres","formData","presNames","map","a","presenter"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Settings from \"./components/Settings\";\r\nimport PresenterList from \"./components/PresenterList\";\r\nimport MeetingLenMenu from \"./components/MeetingLenMenu\";\r\nimport AddPresMenu from \"./components/AddPresMenu\";\r\nimport TimeMenu from \"./components/TimeMenu\";\r\n\r\nimport {DragDropContext, DropResult} from 'react-beautiful-dnd'\r\nimport {getPresDatabase, addPres, deletePres, getMeetingLen, postMeetingLen} from './API'\r\nimport {BrowserRouter as Router, Route, Switch,} from \"react-router-dom\";\r\n\r\n// @ts-ignore\r\nimport audio from './fanfare.mp3';\r\n\r\nlet trumpetSound = new Audio(audio);\r\ntrumpetSound.muted = true;\r\n\r\nconst ws = new WebSocket(\"ws://localhost:8000\");\r\n\r\n//shuffle array of participants so order of meeting isn't the same for every meeting\r\nfunction shuffleArray(array: any) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n        let temp = array[i];\r\n        array[i] = array[j];\r\n        array[j] = temp;\r\n    }\r\n}\r\n\r\nconst useKeyPress = function (targetKey: string) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    function downHandler({key}: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n\r\n    function upHandler({key}: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    },);\r\n    return keyPressed;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n    const downPress = useKeyPress(\"ArrowDown\");\r\n    const upPress = useKeyPress(\"ArrowUp\");\r\n\r\n    const [pres, setPres] = useState<IPresenter[]>([]); //array of presenters\r\n\r\n    const [selected, setSelected] = useState<IPresenter>(); //active presenter\r\n    const [before, setBefore] = useState<IPresenter>(); //previous active presenter\r\n\r\n    const [cursor, setCursor] = useState<number>(-1); //index of active presenter\r\n\r\n    const [realTime, setTime] = useState<number>(0);\r\n\r\n    //index of pres that time is currently being taken from\r\n    const [lastIndex, setLastIndex] = useState<number>(1);\r\n\r\n    //time that has been subtracted from pres when active pres is overtime\r\n    const [amountSubtract, setAmountSubtract] = useState<number>(0);\r\n\r\n    //total (compressed) time of all presenters\r\n    const [totTime, setTotTime] = useState<number>(0);\r\n\r\n    //difference between meeting len and total time of presenters\r\n    const [diff, setDiff] = useState<number>(0);\r\n    const [compressIndex, setCompressIndex] = useState<number>(cursor + 1);\r\n\r\n    const [meetingLen, setMeetingLen] = useState<number>(0);\r\n    // const [tempMeeting, setTempMeeting] = useState<number>();\r\n\r\n    const [origBonus, setOrigBonus] = useState<number>(0);\r\n    const [bonusTime, setBonus] = useState<number>(0);\r\n\r\n    //boolean values to display menu/dropdown text\r\n    const [meetingLenMenu, setMeetingLenMenu] = useState(false);\r\n    const [addPresMenu, setAddPresMenu] = useState(false);\r\n    const [timeMenu, setTimeMenu] = useState(false);\r\n    const [presenterWarning, setPresenterWarning] = useState(false);\r\n\r\n    //meeting in seconds (for debug) or minutes (for actual meetings)\r\n    const [debug, setDebug] = useState(false);\r\n    const [divValue, setDivValue] = useState(60);\r\n    const [incValue, setIncValue] = useState(1); //increment by 100s (for demo) or 1s (for meeting)\r\n\r\n    let isAdmin = window.location.pathname === '/admin' //true if pathname is admin\r\n    let bonusActive = cursor === pres.length && bonusTime > 0//true when bonus time is active\r\n    let bonusDone = cursor === pres.length + 1 && bonusTime > 0//true when bonus time is done\r\n\r\n    ws.addEventListener('open', function () {\r\n        console.log(\"Connected to server\");\r\n    });\r\n    ws.onmessage = (event) => {\r\n        if (event.data === 'downPress') {\r\n            downPressFn();\r\n        } else if (event.data === 'upPress') {\r\n            upPressFn();\r\n        } else if (event.data === 'refresh') {\r\n            window.location.reload();\r\n        } else if (JSON.parse(event.data).name === 'deletePres') {\r\n            const object = JSON.parse(event.data);\r\n            deletePresHelper(object.index)\r\n        } else if (JSON.parse(event.data).name === 'addPres') {\r\n            const object = JSON.parse(event.data);\r\n            addPresHelper(object.newPres)\r\n        } else if (JSON.parse(event.data).name === 'meetingLen') {\r\n            const object = JSON.parse(event.data);\r\n            setMeetingLen(object.meetingLen * divValue)\r\n        } else if (JSON.parse(event.data).name === 'presOrder') {\r\n            const object = JSON.parse(event.data);\r\n            setPres(object.pres)\r\n        }\r\n    }\r\n    //drag and drop presenters\r\n    const onDragEnd = ({source, destination}: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null ||\r\n            (destination.index < source.index && destination.index <= cursor)) {\r\n            window.scrollTo(0, 0);\r\n            return null;\r\n        }\r\n        // Make sure we're actually moving the item\r\n        if (destination.index === source.index) {\r\n            window.scrollTo(0, 0);\r\n            return null;\r\n        }\r\n        // Move the item within the list\r\n        // Start by making a new list without the dragged item\r\n        const newList = pres.filter((_: any, idx: number) => idx !== source.index)\r\n        // Then insert the item at the right location\r\n        newList.splice(destination.index, 0, pres[source.index])\r\n        // Update the list\r\n        setPres(newList)\r\n        //send new order to all clients\r\n        const msg = {name: \"presOrder\", pres: newList}\r\n        ws.send(JSON.stringify(msg))\r\n        window.scrollTo(0, 0)\r\n    }\r\n    const toggleMeetingLenMenu = () => {\r\n        setMeetingLenMenu(!meetingLenMenu);\r\n        setAddPresMenu(false)\r\n        setTimeMenu(false);\r\n    }\r\n    const toggleTimeMenu = () => {\r\n        setTimeMenu(!timeMenu);\r\n        setAddPresMenu(false)\r\n        setMeetingLenMenu(false)\r\n    }\r\n    const toggleAddPresMenu = () => {\r\n        setAddPresMenu(!addPresMenu);\r\n        setMeetingLenMenu(false)\r\n        setTimeMenu(false)\r\n    }\r\n    const togglePresenterWarning = () => {\r\n        setPresenterWarning(!presenterWarning);\r\n    }\r\n    const closeMenu = () => {\r\n        if (isAdmin) {\r\n            setMeetingLenMenu(false);\r\n            setAddPresMenu(false);\r\n            setTimeMenu(false)\r\n        }\r\n    }\r\n\r\n    function playTrumpetSound() {\r\n        trumpetSound.muted = false;\r\n        const playPromise = trumpetSound.play();\r\n        if (playPromise !== undefined) {\r\n            playPromise\r\n                .then(_ => {\r\n                    console.log(\"audio played auto\");\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n\r\n    //if pres takes less than set time\r\n    function presUnderTime() {\r\n        if (selected !== undefined) {\r\n            if (selected.overtime === 0 && realTime < selected.time) {\r\n                let difference = selected.time - realTime;\r\n                let presDecreased = getTimeLost();\r\n                //if other pres are under time\r\n                if (presDecreased > 0) {\r\n                    let subtract = Math.floor(difference / presDecreased)\r\n                    //increase subsequent pres that are under time (until they are back to their set times)\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        if (pres[i].time < pres[i].initTime) {\r\n                            pres[i].time += subtract;\r\n                            difference -= subtract;\r\n                        }\r\n                    }\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        while (difference > 0 && pres[i].time < pres[i].initTime) {\r\n                            pres[i].time += 1;\r\n                            difference -= 1;\r\n                        }\r\n                    }\r\n                }\r\n                setBonus(bonusTime + difference);\r\n\r\n                selected.extra += selected.time - realTime\r\n            }\r\n        }\r\n    }\r\n\r\n    function beforeUnderTime() {\r\n        if (before !== undefined) {\r\n            //if slot before took less than designated time\r\n            if (before.extra > 0) {\r\n                let difference = before.extra;\r\n                let timeLost = getTimeLost();\r\n                before.extra = 0;\r\n                if (timeLost > 0) {\r\n                    let subtract = Math.floor(difference / timeLost)\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        pres[i].time -= subtract;\r\n                        difference -= subtract;\r\n                    }\r\n                    //increase subsequent slots that are under time (until they are back to their set times)\r\n                    for (let i = cursor + 1; i < pres.length; i++) {\r\n                        while (difference > 0 && pres[i].time < pres[i].initTime) {\r\n                            pres[i].time -= 1;\r\n                            difference -= 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    setBonus(bonusTime - difference);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function presOvertime() {\r\n        if (selected !== undefined) {\r\n            //if person goes overtime\r\n            if (realTime > Math.round(selected.time - selected.extra) && !(cursor === pres.length - 1 && bonusTime <= 0)) {\r\n                //increase selected.overtime so their box increases in size\r\n                //only increase box when there is bonusTime or other people's time left to take from\r\n                if (isTimeLeft() || bonusTime > 0) {\r\n                    selected.overtime = (realTime - Math.round(selected.time - selected.extra));\r\n                }\r\n                //decrease other slots if bonusTime == 0\r\n                if (bonusTime < incValue) {\r\n                    if (isTimeLeft()) {\r\n                        if (cursor + lastIndex >= pres.length) { //reset lastIndex at 1\r\n                            setLastIndex(getLastIndex(1));\r\n                        }\r\n                        pres[cursor + lastIndex].time -= incValue;\r\n                        setAmountSubtract(amountSubtract + incValue)\r\n                        if (amountSubtract === divValue) { //when 1 minute has been taken from presenter, move to next presenter\r\n                            if (lastIndex + 1 < pres.length) {\r\n                                setLastIndex(getLastIndex(lastIndex + 1));\r\n                            }\r\n                            //if presenter with index = cursor + lastIndex is <= 1 minute, begin taking time from next presenter\r\n                            else { //reset lastIndex at 1 if cursor + lastIndex >= pres.length\r\n                                setLastIndex(getLastIndex(1));\r\n                            }\r\n                            setAmountSubtract(0)\r\n                        }\r\n                    }\r\n                } else if (bonusTime >= incValue) { //decrease bonusTime\r\n                    setBonus(bonusTime - incValue)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //time is taken from presenter with index = cursor + lastIndex when active pres is overtime\r\n    function getLastIndex(lastIndex: number) {\r\n        //find next presenter with time > 1 min\r\n        for (let i = cursor + lastIndex; i < pres.length; i++) {\r\n            if (pres[i].time > divValue) {\r\n                return i - cursor;\r\n            }\r\n        }\r\n        //if no presenter following lastIndex with time > 1 min and presenter at cursor + 1 has time < 1\r\n        //find next presenter after cursor + 1 with time > 1 min\r\n        if (pres[cursor + 1].time <= divValue) {\r\n            for (let i = cursor + 2; i < pres.length; i++) {\r\n                if (pres[i].time > divValue) {\r\n                    return i - cursor;\r\n                }\r\n            }\r\n        } //otherwise, return 1 (reset lastIndex at 1)\r\n        return 1;\r\n    }\r\n\r\n    //when down key is pressed\r\n    function downPressFn() {\r\n        //play sound only when meeting starts (cursor = -1 --> cursor = 0)\r\n        if (cursor === -1) {\r\n            playTrumpetSound();\r\n        }\r\n        setLastIndex(1);\r\n        presUnderTime();\r\n        if (cursor < pres.length) {\r\n            setCursor(prevState =>\r\n                prevState < pres.length ? prevState + 1 : prevState)\r\n        } else {\r\n            setCursor(pres.length + 1);\r\n        }\r\n        setBefore(pres[cursor])\r\n        setSelected(pres[cursor + 1]);\r\n    }\r\n\r\n    //when up key is pressed\r\n    function upPressFn() {\r\n        setLastIndex(1);\r\n        beforeUnderTime();\r\n        setBefore(pres[cursor - 2]);\r\n        setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n        setSelected(pres[cursor - 1]);\r\n    }\r\n\r\n    //set time of each presenter back to original non compressed time\r\n    function resetPres() {\r\n        for (let i = 0; i < pres.length; i++) {\r\n            pres[i].initTime = pres[i].nonCompressedTime;\r\n            pres[i].time = pres[i].nonCompressedTime;\r\n        }\r\n        setTotTime(getTotTime())\r\n    }\r\n\r\n    //get time from presenter\r\n    const timeCallback = (presenterTime: number) => {\r\n        setTime(presenterTime);\r\n    }\r\n\r\n    //compress time of presenters if meetingLen< total time of presenters\r\n    function compressPres() {\r\n        console.log('here')\r\n        if (pres[compressIndex] !== undefined) {\r\n            if (pres[compressIndex].time > divValue) {\r\n                pres[compressIndex].initTime -= divValue;\r\n                pres[compressIndex].time -= divValue;\r\n                setDiff(diff - divValue)\r\n            }\r\n            setCompressIndex(compressIndex + 1);\r\n            if (compressIndex === pres.length - 1) {\r\n                setCompressIndex(cursor + 1);\r\n            }\r\n        }\r\n        setTotTime(getTotTime());\r\n    }\r\n\r\n    //returns total (compressed) time of presenters\r\n    const getTotTime = () => {\r\n        let totTime = 0;\r\n        for (let i = 0; i < pres.length; i++) {\r\n            totTime += pres[i].time + pres[i].overtime - pres[i].extra;\r\n        }\r\n        return totTime;\r\n    }\r\n    //returns true if any presenter has time > 1 minute\r\n    const isTimeLeft = () => {\r\n        for (let i = cursor + 1; i < pres.length; i++) {\r\n            if (pres[i].time > divValue) {\r\n                return true\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    //returns total time lost for all presenters (from people going overtime)\r\n    const getTimeLost = (): number => {\r\n        let timeLost = 0;\r\n        for (let i = cursor + 1; i < pres.length; i++) {\r\n            if (pres[i].initTime > pres[i].time) {\r\n                timeLost += pres[i].initTime - pres[i].time;\r\n            }\r\n        }\r\n        return timeLost;\r\n    }\r\n\r\n    //change meeting style (seconds or minutes)\r\n    function changeMeetingStyle() {\r\n        setDebug(!debug)\r\n    }\r\n\r\n    useEffect(() => { //get meeting length and presenters at start\r\n        console.log('meetingLen'+ meetingLen)\r\n        if (debug) { //convert to seconds version\r\n            setDivValue(1000)\r\n            setIncValue(100)\r\n            for (let i = 0; i < pres.length; i++) {\r\n                pres[i].time = (pres[i].time/60)*1000;\r\n                pres[i].initTime = (pres[i].initTime/60)*1000;\r\n                pres[i].nonCompressedTime = (pres[i].nonCompressedTime/60)*1000;\r\n            }\r\n            setMeetingLen(meetingLen/60*1000)\r\n            console.log('here0'+ meetingLen)\r\n        } else {\r\n            setDivValue(60)\r\n            setIncValue(1)\r\n            for (let i = 0; i < pres.length; i++) {\r\n                pres[i].time = (pres[i].time/1000)*60;\r\n                pres[i].initTime = (pres[i].initTime/1000)*60;\r\n                pres[i].nonCompressedTime = (pres[i].nonCompressedTime/1000)*60;\r\n            }\r\n            console.log('here1'+ meetingLen)\r\n            setMeetingLen(meetingLen/60*1000)\r\n        }\r\n        fetchMeetingLen()\r\n    }, [debug])\r\n\r\n    useEffect(() => { //get meeting length and presenters at start\r\n        fetchMeetingLen()\r\n    }, [])\r\n    useEffect(() => { //get meeting length and presenters at start\r\n        fetchPres();\r\n    }, [])\r\n    useEffect(() => { //when delete/add pres, get and set new total time\r\n        setTotTime(getTotTime())\r\n    }, [pres])\r\n    useEffect(() => {\r\n        if (meetingLen > totTime) { //set bonus time\r\n            setOrigBonus(meetingLen - totTime);\r\n            setDiff(0)\r\n        } else {\r\n            setOrigBonus(0) //set diff to trigger compressPres\r\n            if (meetingLen < totTime) {\r\n                setDiff(totTime - meetingLen)\r\n            }\r\n        }\r\n    }, [totTime, meetingLen])\r\n    useEffect(() => {\r\n        if (diff > 0 && totTime !== pres.length * divValue) {\r\n            compressPres();\r\n        }\r\n    }, [compressIndex, diff])\r\n    useEffect(() => {\r\n        setCompressIndex(0) //reset start index for compress pres\r\n        resetPres(); //reset pres times when meeting len changes\r\n    }, [meetingLen])\r\n    useEffect(() => { //set bonusTime when origBonus changes\r\n        setBonus(origBonus)\r\n    }, [origBonus])\r\n    useEffect(() => {\r\n        presOvertime() //\r\n    }, [realTime])\r\n    useEffect(() => { //refresh all clients if admin refreshes\r\n        window.onbeforeunload = () => {\r\n            if (isAdmin) {\r\n                ws.send('refresh')\r\n            }\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        if (presenterWarning) {\r\n            setTimeout(() => {\r\n                togglePresenterWarning();\r\n            }, 1000)\r\n        }\r\n    }, [presenterWarning])\r\n\r\n    //delete pres in database\r\n    const handleDeletePres = (_id: string, index: number): void => {\r\n        deletePres(_id)\r\n            .then(({status,}) => {\r\n                if (status !== 200) {\r\n                    throw new Error('Error! Presenter not deleted')\r\n                } else {\r\n                    //send index of deleted pres to all clients\r\n                    const msg = {name: \"deletePres\", index: index};\r\n                    ws.send(JSON.stringify(msg))\r\n                }\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n    //delete pres in frontend\r\n    const deletePresHelper = (index: number) => {\r\n        pres.splice(index, 1);\r\n        setPres(pres)\r\n        resetPres()\r\n        //ensure same order of presenters after pres is deleted\r\n        const msg = {name: \"presOrder\", pres: pres}\r\n        ws.send(JSON.stringify(msg))\r\n    }\r\n    //only admin can control the meeting with up/down keys\r\n    useEffect(() => {\r\n        if (downPress && isAdmin) {\r\n            ws.send('downPress')\r\n        }\r\n    }, [downPress]);\r\n    useEffect(() => {\r\n        if (upPress && isAdmin) {\r\n            ws.send('upPress')\r\n        }\r\n    }, [upPress]);\r\n\r\n    //get pres from database, and shuffle order\r\n    const fetchPres = (): void => {\r\n        getPresDatabase()\r\n            .then(({data: {pres}}: IPresenter[] | any) =>\r\n                shufflePres(pres))\r\n            .catch((err: Error) => console.log(err));\r\n    }\r\n\r\n    //shuffle pres\r\n    function shufflePres(inputPres: IPresenter[]) {\r\n        //hardcoded arrays\r\n        let interns = ['Daron', 'Srishti', 'Matthew', 'Vikram', 'Saralin', 'Damien', 'Tobias', 'Karthik', 'Michael']\r\n        let fullTimers = ['Jo', 'Kendra', 'Qian', 'Bon', 'David', 'Frederik']\r\n        let finalWord = ['Fraser', 'Justin']\r\n\r\n        let namesList: string[] = [];\r\n        let finalList: IPresenter[] = [];\r\n        let presList: IPresenter[] = [];\r\n        let otherList: IPresenter[] = []; //presenters not in hardcoded arrays\r\n\r\n        //shuffle each array\r\n        shuffleArray(interns);\r\n        shuffleArray(fullTimers);\r\n        shuffleArray(finalWord)\r\n        //combine 3 arrays into one\r\n        let orderedList = interns.concat(fullTimers, finalWord);\r\n\r\n        inputPres.forEach(element => {\r\n            if (orderedList.includes(element.name)) {\r\n                namesList.push(element.name);\r\n                presList.push(element)\r\n            } else {\r\n                otherList.push(element)\r\n            }\r\n        });\r\n        //add other presenters (not in hardcoded arrays) to final list\r\n        otherList.forEach(element => {\r\n            finalList.push(element);\r\n        });\r\n        for (let i = 0; i < orderedList.length; i++) {\r\n            if (namesList.includes(orderedList[i])) {\r\n                let file = presList[namesList.indexOf(orderedList[i])]\r\n                finalList.push(file);\r\n            }\r\n        }\r\n        for (let i = 0; i < finalList.length; i++) {\r\n            minToSec(finalList[i]);\r\n        }\r\n\r\n        setPres(finalList);\r\n        //send order of presenters to each client\r\n        const msg = {name: \"presOrder\", pres: finalList}\r\n        ws.send(JSON.stringify(msg))\r\n    }\r\n\r\n    //convert time (minutes in DB) to seconds\r\n    function minToSec(pres: IPresenter) {\r\n        pres.time = pres.time * divValue;\r\n        pres.initTime = pres.initTime * divValue;\r\n        pres.nonCompressedTime = pres.nonCompressedTime * divValue;\r\n    }\r\n\r\n    //get meetingLen from database, set meetingLen in seconds\r\n    function fetchMeetingLen() {\r\n        getMeetingLen()\r\n            .then(({data: {meetingLen}}: number | any) => setMeetingLen(meetingLen * divValue))\r\n            .catch((err: Error) => console.log(err));\r\n    }\r\n\r\n    //update meetingLen in database, set meetingLen in seconds\r\n    const handleMeetingLen = (e: React.FormEvent, meetingLen: number | undefined): void => {\r\n        e.preventDefault()\r\n        if (meetingLen !== undefined) {\r\n            postMeetingLen(meetingLen).then(response => {\r\n                console.log(response)\r\n            });\r\n            setMeetingLen(meetingLen * divValue)\r\n            setMeetingLenMenu(false)\r\n            //send new meetingLen to each client\r\n            const msg = {name: \"meetingLen\", meetingLen: meetingLen}\r\n            ws.send(JSON.stringify(msg))\r\n        }\r\n    }\r\n\r\n    const handleAddPres = (e: React.FormEvent, formData: IPresenter): void => {\r\n        e.preventDefault()\r\n        let presNames = pres.map(a => a.name); //array of pres names\r\n        //if new presenter name does not already exist in pres array AND bonus time is not active --> add pres\r\n        if (!presNames.includes(formData.name) && !bonusActive) {\r\n            addPres(formData)\r\n                .then(({status, data}) => {\r\n                    if (status !== 201) {\r\n                        throw new Error('Error! Presenter not saved')\r\n                    } else if (data.presenter) {\r\n                        const msg = {name: \"addPres\", newPres: data.presenter}\r\n                        ws.send(JSON.stringify(msg))\r\n                        setAddPresMenu(false)\r\n                    }\r\n                })\r\n                .catch((err) => console.log(err))\r\n        } else { //display warning as either presenter name is not unique, or bonus time is active\r\n            togglePresenterWarning()\r\n        }\r\n    }\r\n    //add pres to frontend\r\n    const addPresHelper = (newPres: IPresenter) => {\r\n        minToSec(newPres) //convert time to seconds\r\n        pres.push(newPres) //add new pres to pres array\r\n        setPres(pres) //update state of pres array\r\n        resetPres()\r\n        const msg = {name: \"presOrder\", pres: pres} //send new order of presenters to each client\r\n        ws.send(JSON.stringify(msg))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <main className='App'>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <DragDropContext onDragEnd={onDragEnd}>\r\n                            <PresenterList\r\n                                meetingLen={meetingLen} isAdmin={isAdmin} pres={pres}\r\n                                cursor={cursor} bonusTime={bonusTime} origBonus={origBonus} totTime={totTime}\r\n                                bonusActive={bonusActive} bonusDone={bonusDone} closeMenu={closeMenu}\r\n                                timeCallback={timeCallback} handleDeletePres={handleDeletePres} debug={debug}/>\r\n                        </DragDropContext>\r\n                    </Route>\r\n                    <Route exact path=\"/admin\">\r\n                        <DragDropContext onDragEnd={onDragEnd}>\r\n                            <MeetingLenMenu meetingLenCallback={handleMeetingLen}\r\n                                            meetingLenMenu={meetingLenMenu}\r\n                                            toggleMeetingLenMenu={toggleMeetingLenMenu}/>\r\n                            <AddPresMenu toggleAddPresMenu={toggleAddPresMenu} addPresMenu={addPresMenu}\r\n                                         bonusActive={bonusActive} handleAddPres={handleAddPres}\r\n                                         presenterWarning={presenterWarning}/>\r\n                            <PresenterList\r\n                                meetingLen={meetingLen} isAdmin={isAdmin} pres={pres}\r\n                                cursor={cursor} bonusTime={bonusTime} origBonus={origBonus} totTime={totTime}\r\n                                bonusActive={bonusActive} bonusDone={bonusDone} closeMenu={closeMenu}\r\n                                timeCallback={timeCallback} handleDeletePres={handleDeletePres} debug={debug}/>\r\n                            <TimeMenu isDebug={changeMeetingStyle} toggleTimeMenu={toggleTimeMenu}\r\n                                      meetingActive = {cursor > -1} timeMenu={timeMenu}/>\r\n                            <Settings toggleMeetingLenMenu={toggleMeetingLenMenu}\r\n                                      toggleAddPresMenu={toggleAddPresMenu} toggleTimeMenu={toggleTimeMenu}/>\r\n                        </DragDropContext>\r\n\r\n                    </Route>\r\n                </Switch>\r\n            </main>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}