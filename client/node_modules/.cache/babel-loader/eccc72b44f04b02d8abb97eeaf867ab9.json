{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Bonus.tsx\";\nimport React, { useState } from 'react';\nimport './cssFiles/Bonus.css';\nimport Timer from \"./Timer\";\nimport Slider from \"./Slider\";\nimport './cssFiles/DiagonalCrossOut.css';\n\nfunction Bonus(props) {\n  const [realTime, setTime] = useState(0);\n  const origBonus = Math.ceil(props.origBonus / 60);\n  const time = Math.ceil(props.time / 60); //set time using time from Timer class\n\n  const myCallback = time => {\n    setTime(time);\n  }; //returns color to indicate how much of the designated bonus time was used\n\n\n  function getColor() {\n    const diff = realTime - props.time;\n\n    if (diff > 4) {\n      //overtime\n      return 'rgb(255,125,255)';\n    } else if (diff > 1) {\n      //slightly overtime\n      return 'rgb(255,202,255)';\n    } else {\n      //undertime\n      return 'rgb(160,240,232)';\n    }\n  } //returns background color of bonus time\n\n\n  function backgroundColor() {\n    if (props.done) {\n      return getColor();\n    } else if (!props.done && !props.active) {\n      return 'rgb(245, 245, 245)';\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottomPanel\",\n    style: {\n      height: props.height + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    start: props.active,\n    time: props.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: realTime < props.time ? \"bonusForward bonusWrap\" : \"bonusReverse bonusWrap\",\n    style: {\n      animationDuration: props.time + 's',\n      animationPlayState: props.active ? 'running' : 'paused',\n      background: backgroundColor(),\n      textDecoration: props.done ? 'grey line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bonus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Bonus Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bonusTime\",\n    style: {\n      display: props.height < 6.25 ? 'none' : '',\n      textDecoration: props.done ? 'grey line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"setBonus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, origBonus !== time ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"crossedOut\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 41\n    }\n  }, \" \", origBonus), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 45\n    }\n  }, \" \", time)) : origBonus, \" min\", /*#__PURE__*/React.createElement(Timer, {\n    callbackFromParent: myCallback,\n    active: props.active,\n    done: props.done,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Bonus;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Bonus.tsx"],"names":["React","useState","Timer","Slider","Bonus","props","realTime","setTime","origBonus","Math","ceil","time","myCallback","getColor","diff","backgroundColor","done","active","height","animationDuration","animationPlayState","background","textDecoration","display"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport './cssFiles/Bonus.css'\r\nimport Timer from \"./Timer\";\r\nimport Slider from \"./Slider\";\r\nimport './cssFiles/DiagonalCrossOut.css'\r\n\r\nfunction Bonus(props: { origBonus: number, time: number, active: boolean, done: boolean, height: number }) {\r\n    const [realTime, setTime] = useState<number>(0);\r\n    const origBonus = Math.ceil(props.origBonus/60)\r\n    const time = Math.ceil(props.time/60)\r\n\r\n    //set time using time from Timer class\r\n    const myCallback = (time: number) => {\r\n        setTime(time);\r\n    }\r\n\r\n    //returns color to indicate how much of the designated bonus time was used\r\n    function getColor() {\r\n        const diff = realTime - props.time\r\n        if (diff > 4) { //overtime\r\n            return 'rgb(255,125,255)';\r\n        } else if (diff > 1) { //slightly overtime\r\n            return 'rgb(255,202,255)';\r\n        } else { //undertime\r\n            return 'rgb(160,240,232)';\r\n        }\r\n    }\r\n\r\n    //returns background color of bonus time\r\n    function backgroundColor(){\r\n        if(props.done){\r\n            return getColor();\r\n        } else if(!props.done && !props.active){\r\n            return 'rgb(245, 245, 245)'\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"bottomPanel\" style={{\r\n            height: props.height + '%'\r\n        }}>\r\n            <Slider start={props.active} time={props.time}/>\r\n            <div className={(realTime < props.time) ? \"bonusForward bonusWrap\" : \"bonusReverse bonusWrap\"}\r\n                 style={{\r\n                     animationDuration: props.time + 's',\r\n                     animationPlayState: props.active ? 'running' : 'paused',\r\n                     background: backgroundColor(),\r\n                     textDecoration: props.done ? 'grey line-through' : 'none',\r\n                 }}>\r\n                <div className=\"bonus\">Bonus Time</div>\r\n                <div className=\"bonusTime\" style={{\r\n                    display: props.height < 6.25 ? 'none' : '',\r\n                    textDecoration: props.done ? 'grey line-through' : 'none'}}>\r\n                    <div className=\"setBonus\">\r\n                        {origBonus !== time ?\r\n                            <span style={{display: 'inline'}}>\r\n                                        <span className=\"crossedOut\"> {origBonus}</span>\r\n                                            <span> {time}</span>\r\n                                        </span> : origBonus} min\r\n                        <Timer callbackFromParent={myCallback} active={props.active} done={props.done}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Bonus"]},"metadata":{},"sourceType":"module"}