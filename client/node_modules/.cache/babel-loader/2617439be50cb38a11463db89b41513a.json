{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\Timer.tsx\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst Timer = props => {\n  const [seconds, setSeconds] = useState(0);\n  const [milSeconds, setMilSeconds] = useState(0); // useEffect(() => {\n  //     let secondInterval = setInterval(() => {\n  //         if (props.active) {\n  //             setSeconds(seconds + 1)\n  //         }\n  //     }, 1000)\n  //     return () => {\n  //         clearInterval(secondInterval);\n  //         // clearInterval(milInterval);\n  //     };\n  // });\n\n  useEffect(() => {\n    let milInterval = setInterval(() => {\n      if (props.active) {\n        if (milSeconds == 100) {\n          setSeconds(seconds + 1);\n          setMilSeconds(0);\n        }\n\n        setMilSeconds(milSeconds + 1);\n      }\n    }, 10);\n    return () => {\n      clearInterval(milInterval);\n    };\n  });\n\n  const sendSeconds = () => {\n    props.callbackFromParent(seconds);\n  };\n\n  useEffect(() => {\n    sendSeconds();\n  }); // const sendMilSecond = () => {\n  //     props.callbackFromParentM(milSeconds);\n  // }\n  // useEffect(() => {\n  //     sendMilSecond()\n  // },)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer\",\n    style: {\n      fontSize: \"10px\",\n      marginTop: '-2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.active || props.done ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 43\n    }\n  }, seconds, \" min \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \" - min \"));\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/Timer.tsx"],"names":["React","useState","useEffect","Timer","props","seconds","setSeconds","milSeconds","setMilSeconds","milInterval","setInterval","active","clearInterval","sendSeconds","callbackFromParent","fontSize","marginTop","done"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAGR;AACF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C,CAFE,CAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIO,WAAW,GAAGC,WAAW,CAAC,MAAM;AAChC,UAAIN,KAAK,CAACO,MAAV,EAAkB;AACd,YAAIJ,UAAU,IAAI,GAAlB,EAAuB;AACnBD,UAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAG,UAAAA,aAAa,CAAC,CAAD,CAAb;AACH;;AACDA,QAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH;AACJ,KAR4B,EAQ1B,EAR0B,CAA7B;AASA,WAAO,MAAM;AACTK,MAAAA,aAAa,CAACH,WAAD,CAAb;AACH,KAFD;AAGH,GAbQ,CAAT;;AAcA,QAAMI,WAAW,GAAG,MAAM;AACtBT,IAAAA,KAAK,CAACU,kBAAN,CAAyBT,OAAzB;AACH,GAFD;;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,CAAT,CAhCE,CAmCF;AACA;AACA;AACA;AACA;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KAAK,CAACO,MAAN,IAAgBP,KAAK,CAACa,IAAtB,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrBZ,OADqB,UAA7B,gBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHR,CADJ;AAQH,CApDD;;AAsDA,eAAeF,KAAf","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Timer = (props:{ active: boolean, done: boolean,\r\n    callbackFromParent(listInfo: number): void\r\n    // callbackFromParentMil(listInfo: number): void;\r\n}) => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [milSeconds, setMilSeconds] = useState(0);\r\n\r\n    // useEffect(() => {\r\n    //     let secondInterval = setInterval(() => {\r\n    //         if (props.active) {\r\n    //             setSeconds(seconds + 1)\r\n    //         }\r\n    //     }, 1000)\r\n    //     return () => {\r\n    //         clearInterval(secondInterval);\r\n    //         // clearInterval(milInterval);\r\n    //     };\r\n    // });\r\n    useEffect(() => {\r\n        let milInterval = setInterval(() => {\r\n            if (props.active) {\r\n                if (milSeconds == 100) {\r\n                    setSeconds(seconds + 1)\r\n                    setMilSeconds(0)\r\n                }\r\n                setMilSeconds(milSeconds + 1)\r\n            }\r\n        }, 10)\r\n        return () => {\r\n            clearInterval(milInterval);\r\n        };\r\n    });\r\n    const sendSeconds = () => {\r\n        props.callbackFromParent(seconds);\r\n    }\r\n    useEffect(() => {\r\n        sendSeconds()\r\n    },)\r\n    // const sendMilSecond = () => {\r\n    //     props.callbackFromParentM(milSeconds);\r\n    // }\r\n    // useEffect(() => {\r\n    //     sendMilSecond()\r\n    // },)\r\n    return (\r\n        <div className=\"timer\" style={{fontSize: \"10px\", marginTop: '-2%'}}>\r\n            {props.active || props.done ? <div>\r\n                    {seconds} min </div> :\r\n                <div> - min </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}