{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\components\\\\MeetingTime.tsx\";\nimport React, { useState } from 'react';\nimport './MeetingTime.css'; //startTime used for styling (not actually needed since timer keeps going forever)\n\nconst MeetingTime = props => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const toggleVisible = () => {\n    setIsVisible(false);\n    props.callbackFromParent3(props.visible);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup\",\n    style: {\n      display: !isVisible ? 'none' : ''\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \" Meeting Length:\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"xOut\",\n    onClick: toggleVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"x\"));\n};\n\nexport default MeetingTime;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/components/MeetingTime.tsx"],"names":["React","useState","MeetingTime","props","isVisible","setIsVisible","toggleVisible","callbackFromParent3","visible","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,mBAAP,C,CAEA;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAA6E;AAC7F,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAU,IAAV,CAA1C;;AACA,QAAMK,aAAa,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,KAAK,CAACI,mBAAN,CAA0BJ,KAAK,CAACK,OAAhC;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,KAAK,EAAI;AAACC,MAAAA,OAAO,EAAE,CAACL,SAAD,GAAY,MAAZ,GAAmB;AAA7B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACA;AAAQ,IAAA,SAAS,EAAG,MAApB;AAA2B,IAAA,OAAO,EAAIE,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADJ;AAKH,CAXD;;AAcA,eAAeJ,WAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport './MeetingTime.css'\r\n\r\n//startTime used for styling (not actually needed since timer keeps going forever)\r\nconst MeetingTime = (props: {visible:boolean ,callbackFromParent3(visible: boolean): void; }) => {\r\n    const [isVisible, setIsVisible] = useState<boolean>(true);\r\n    const toggleVisible = () => {\r\n        setIsVisible(false);\r\n        props.callbackFromParent3(props.visible);\r\n    }\r\n    return (\r\n        <div className=\"popup\" style = {{display: !isVisible? 'none':''}}> Meeting Length:\r\n        <button className = \"xOut\" onClick = {toggleVisible}>x</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MeetingTime;"]},"metadata":{},"sourceType":"module"}