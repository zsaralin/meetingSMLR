{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saralin\\\\IdeaProjects\\\\fullstack-typescript-mern-todo\\\\client\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { getTodos } from './API';\nimport BonusItem from \"./components/BonusItem\";\n\nconst useKeyPress = function (targetKey) {\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n};\n\nconst App = () => {\n  const downPress = useKeyPress(\"ArrowDown\");\n  const upPress = useKeyPress(\"ArrowUp\");\n  const [todos, setTodos] = useState([]);\n  const [selected, setSelected] = useState();\n  const [cursor, setCursor] = useState(-1);\n  const [totalOver, setOver] = useState(0);\n  const [realTime, setTime] = useState(0); // useEffect(() => {\n  //     let myInterval = setInterval(() => {\n  //         if (cursor != -1) {\n  //             setTime(realTime + 1);\n  //         }\n  //     }, 1000)\n  //     return () => {\n  //         clearInterval(myInterval);\n  //     };\n  // });\n\n  const timeCallback = timerTime => {\n    setTime(timerTime);\n  };\n\n  useEffect(() => {\n    if (selected !== undefined) {\n      if (realTime >= selected.time) {\n        setOver(realTime - selected.time);\n      }\n    }\n  });\n\n  const getTodoTime = () => {\n    let todoTime = 0;\n\n    for (let i = 0; i < todos.length; i++) {\n      todoTime += todos[i].time;\n    }\n\n    return todoTime;\n  };\n\n  let todoTime = getTodoTime();\n  let bonusTime = 8;\n  useEffect(() => {\n    if (downPress) {\n      if (cursor < todos.length) {\n        setCursor(prevState => prevState < todos.length ? prevState + 1 : prevState);\n      } else {\n        setCursor(todos.length + 1);\n      } // setTime (0);\n\n\n      setSelected(todos[cursor + 1]);\n      let before = todos[cursor];\n\n      if (before !== undefined) {\n        before.status = true;\n      }\n\n      if (selected !== undefined) {\n        selected.status = true;\n      }\n    }\n  }, [downPress]);\n  useEffect(() => {\n    if (upPress) {\n      setCursor(prevState => prevState > 0 ? prevState - 1 : prevState);\n      setSelected(todos[cursor - 1]); // setTime (0);\n\n      let before = todos[cursor];\n\n      if (before !== undefined) {\n        before.status = false;\n      }\n\n      if (selected !== undefined) {\n        selected.status = true;\n      }\n    }\n  }, [upPress]);\n\n  const onDragEnd = ({\n    source,\n    destination\n  }) => {\n    // Make sure we have a valid destination\n    if (destination === undefined || destination === null || destination.index < source.index && destination.index <= cursor) return null; // Make sure we're actually moving the item\n\n    if (destination.index === source.index) return null; // Move the item within the list\n    // Start by making a new list without the dragged item\n\n    const newList = todos.filter((_, idx) => idx !== source.index); // Then insert the item at the right location\n\n    newList.splice(destination.index, 0, todos[source.index]); // Update the list\n\n    setTodos(newList);\n  };\n\n  const fetchTodos = () => {\n    getTodos().then(({\n      data: {\n        todos\n      }\n    }) => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, realTime, totalOver, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"col-1\",\n    isDropDisabled: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, provided => {\n    const style = {\n      height: (todoTime + totalOver) / (todoTime + bonusTime) * 100,\n      ...provided.droppableProps\n    };\n    return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n      className: \"characters\"\n    }, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), todos.map((todo, index) => /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo._id,\n      todo: todo,\n      index: index,\n      active: index === cursor,\n      done: index <= cursor - 1,\n      callbackFromParent2: timeCallback,\n      percent: todo.time / todoTime * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    })), provided.placeholder);\n  }), /*#__PURE__*/React.createElement(BonusItem, {\n    time: bonusTime - totalOver,\n    active: cursor === todos.length,\n    done: cursor === todos.length + 1,\n    percent: (bonusTime - totalOver) / (bonusTime + todoTime) * 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \" Settings \")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/App.tsx"],"names":["React","useEffect","useState","TodoItem","DragDropContext","Droppable","getTodos","BonusItem","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","App","downPress","upPress","todos","setTodos","selected","setSelected","cursor","setCursor","totalOver","setOver","realTime","setTime","timeCallback","timerTime","undefined","time","getTodoTime","todoTime","i","length","bonusTime","prevState","before","status","onDragEnd","source","destination","index","newList","filter","_","idx","splice","fetchTodos","then","data","catch","err","console","log","textAlign","provided","style","height","droppableProps","innerRef","map","todo","_id","placeholder"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport {DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\nimport {getTodos,} from './API'\r\nimport BonusItem from \"./components/BonusItem\";\r\n\r\nconst useKeyPress = function(targetKey: string) {\r\n    const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n    function downHandler({ key }: { key: string }) {\r\n        if (key === targetKey) {\r\n            setKeyPressed(true);\r\n        }\r\n    }\r\n    const upHandler = ({ key }: { key: string }) => {\r\n        if (key === targetKey) {\r\n            setKeyPressed(false);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener(\"keydown\", downHandler);\r\n        window.addEventListener(\"keyup\", upHandler);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", downHandler);\r\n            window.removeEventListener(\"keyup\", upHandler);\r\n        };\r\n    });\r\n\r\n    return keyPressed;\r\n};\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const downPress = useKeyPress(\"ArrowDown\");\r\n    const upPress = useKeyPress(\"ArrowUp\");\r\n\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n    const [selected, setSelected] =  useState<ITodo>();\r\n    const [cursor, setCursor] = useState<number>(-1);\r\n    const [totalOver, setOver] = useState<number>(0);\r\n    const [realTime, setTime] = useState<number>(0);\r\n    // useEffect(() => {\r\n    //     let myInterval = setInterval(() => {\r\n    //         if (cursor != -1) {\r\n    //             setTime(realTime + 1);\r\n    //         }\r\n    //     }, 1000)\r\n    //     return () => {\r\n    //         clearInterval(myInterval);\r\n    //     };\r\n    // });\r\n\r\n    const timeCallback = (timerTime: number) => {\r\n        setTime(timerTime);\r\n    }\r\n    useEffect(()=>{\r\n        if (selected !== undefined){\r\n            if(realTime >= selected.time){\r\n            setOver(realTime - selected.time);\r\n        }}\r\n    })\r\n    const getTodoTime = (): number => {\r\n        let todoTime = 0;\r\n        for(let i=0; i<todos.length; i++){\r\n            todoTime += todos[i].time;\r\n        }\r\n        return todoTime;\r\n    }\r\n    let todoTime = getTodoTime();\r\n    let bonusTime = 8;\r\n\r\n    useEffect(() => {\r\n        if (downPress) {\r\n            if (cursor < todos.length) {\r\n                setCursor(prevState =>\r\n                    prevState < todos.length ? prevState + 1 : prevState)\r\n            } else {\r\n                setCursor(todos.length + 1);\r\n            }\r\n            // setTime (0);\r\n            setSelected(todos[cursor+1]);\r\n\r\n            let before = todos[cursor ];\r\n            if (before !== undefined) {\r\n                before.status = true\r\n            }\r\n            if (selected !== undefined) {\r\n                selected.status = true\r\n            }\r\n        }\r\n    }, [downPress]);\r\n\r\n    useEffect(() => {\r\n        if (upPress) {\r\n            setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n            setSelected(todos[cursor-1]);\r\n            // setTime (0);\r\n            let before = todos[cursor];\r\n            if (before!== undefined){ before.status = false}\r\n            if (selected!== undefined){ selected.status = true}\r\n        }\r\n    }, [upPress]);\r\n\r\n\r\n    const onDragEnd = ({ source, destination }: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null ||\r\n            destination.index < source.index && destination.index <= cursor ) return null\r\n        // Make sure we're actually moving the item\r\n        if (destination.index === source.index) return null\r\n        // Move the item within the list\r\n        // Start by making a new list without the dragged item\r\n        const newList = todos.filter((_: any, idx: number) => idx !== source.index)\r\n        // Then insert the item at the right location\r\n        newList.splice(destination.index, 0, todos[source.index])\r\n        // Update the list\r\n          setTodos(newList)\r\n    }\r\n\r\n  const fetchTodos = (): void => {\r\n    getTodos()\r\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\r\n    .catch((err: Error) => console.log(err))\r\n  }\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, [])\r\n\r\n        return (\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n            <main className='App' >\r\n                <span style={{textAlign: 'right'}}>{realTime}{totalOver} </span>\r\n                <div className='test'>\r\n                <Droppable droppableId='col-1' isDropDisabled={false} >\r\n                    {provided => {\r\n                        const style = {\r\n                            height: (todoTime+totalOver)/(todoTime+bonusTime)*100,\r\n                            ...provided.droppableProps,\r\n                        };\r\n                        return (\r\n                <ul className=\"characters\"\r\n                    {...provided.droppableProps} ref={provided.innerRef} style = {style}>\r\n                    {todos.map((todo: ITodo, index) => (\r\n                        <TodoItem\r\n                            key={todo._id}\r\n                            todo={todo}\r\n                            index= {index}\r\n                            active={index===cursor}\r\n                            done = {index <= cursor-1}\r\n                            callbackFromParent2={timeCallback}\r\n                            percent = {(todo.time)/(todoTime)*100}/>\r\n                    ))}\r\n                    {provided.placeholder}\r\n                </ul> )}}\r\n                </Droppable>\r\n                <BonusItem\r\n                time = {bonusTime-totalOver} active = {cursor === todos.length} done = {cursor === todos.length+1}\r\n                percent = {(bonusTime-totalOver)/(bonusTime+todoTime)*100}/>\r\n                </div>\r\n                <button className = \"button\"> Settings </button>\r\n            </main>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}