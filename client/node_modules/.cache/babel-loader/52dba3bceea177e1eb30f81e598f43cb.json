{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\naxios.post(baseUrl + '/meetinglen', book).then(() => console.log('Book Created')).catch(err => {\n  console.error(err);\n});\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getLongestName = async () => {\n  try {\n    const longest = await axios.get(baseUrl + '/todos-long');\n    return longest;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getSize = async () => {\n  try {\n    const sizeArr = await axios.get(baseUrl + '/todos-len');\n    return sizeArr;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/API.ts"],"names":["axios","baseUrl","post","book","then","console","log","catch","err","error","getTodos","todos","get","Error","getLongestName","longest","getSize","sizeArr"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AACAD,KAAK,CACAE,IADL,CACUD,OAAO,GAAG,aADpB,EACmCE,IADnC,EAEKC,IAFL,CAEU,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAFhB,EAGKC,KAHL,CAGWC,GAAG,IAAI;AACZH,EAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,CALL;AAOA,OAAO,MAAME,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMX,KAAK,CAACY,GAAN,CAC9CX,OAAO,GAAG,QADoC,CAAhD;AAGA,WAAOU,KAAP;AACD,GALD,CAKE,OAAOF,KAAP,EAAc;AACd,UAAM,IAAII,KAAJ,CAAUJ,KAAV,CAAN;AACD;AACF,CATM;AAUP,OAAO,MAAMK,cAAc,GAAG,YAAiD;AAC7E,MAAI;AACF,UAAMC,OAAmC,GAAG,MAAMf,KAAK,CAACY,GAAN,CAC9CX,OAAO,GAAG,aADoC,CAAlD;AAGA,WAAOc,OAAP;AACD,GALD,CAKE,OAAON,KAAP,EAAc;AACd,UAAM,IAAII,KAAJ,CAAUJ,KAAV,CAAN;AACD;AACF,CATM;AAWP,OAAO,MAAMO,OAAO,GAAG,YAAiD;AACtE,MAAI;AACF,UAAMC,OAAmC,GAAG,MAAMjB,KAAK,CAACY,GAAN,CAC9CX,OAAO,GAAG,YADoC,CAAlD;AAGA,WAAOgB,OAAP;AACD,GALD,CAKE,OAAOR,KAAP,EAAc;AACd,UAAM,IAAII,KAAJ,CAAUJ,KAAV,CAAN;AACD;AACF,CATM","sourcesContent":["import axios, { AxiosResponse } from 'axios'\r\n\r\nconst baseUrl: string = 'http://localhost:4000'\r\naxios\r\n    .post(baseUrl + '/meetinglen', book)\r\n    .then(() => console.log('Book Created'))\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + '/todos'\r\n    )\r\n    return todos\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\nexport const getLongestName = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const longest: AxiosResponse<ApiDataType> = await axios.get(\r\n        baseUrl + '/todos-long'\r\n    )\r\n    return longest\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const getSize = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const sizeArr: AxiosResponse<ApiDataType> = await axios.get(\r\n        baseUrl + '/todos-len'\r\n    )\r\n    return sizeArr\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}