{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:4000';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl + '/todos');\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    const todo = {\n      index: 0,\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    const saveTodo = await axios.post(baseUrl + '/add-todo', todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async todo => {\n  try {\n    const todoUpdate = {\n      status: true\n    };\n    const updatedTodo = await axios.put(`${baseUrl}/edit-todo/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/delete-todo/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/Saralin/IdeaProjects/fullstack-typescript-mern-todo/client/src/API.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","addTodo","formData","todo","index","name","description","status","saveTodo","post","updateTodo","todoUpdate","updatedTodo","put","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,MAAMC,OAAe,GAAG,uBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACvE,MAAI;AACF,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC9CH,OAAO,GAAG,QADoC,CAAhD;AAGA,WAAOE,KAAP;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CATM;AAWP,OAAO,MAAME,OAAO,GAAG,MACrBC,QADqB,IAEmB;AACxC,MAAI;AACF,UAAMC,IAAwB,GAAG;AAC/BC,MAAAA,KAAK,EAAE,CADwB;AAE/BC,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFgB;AAG/BC,MAAAA,WAAW,EAAEJ,QAAQ,CAACI,WAHS;AAI/BC,MAAAA,MAAM,EAAE;AAJuB,KAAjC;AAMA,UAAMC,QAAoC,GAAG,MAAMd,KAAK,CAACe,IAAN,CACjDd,OAAO,GAAG,WADuC,EAEjDQ,IAFiD,CAAnD;AAIA,WAAOK,QAAP;AACD,GAZD,CAYE,OAAOT,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAlBM;AAoBP,OAAO,MAAMW,UAAU,GAAG,MACxBP,IADwB,IAEgB;AACxC,MAAI;AACF,UAAMQ,UAAiC,GAAG;AACxCJ,MAAAA,MAAM,EAAE;AADgC,KAA1C;AAGA,UAAMK,WAAuC,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CACnD,GAAElB,OAAQ,cAAaQ,IAAI,CAACW,GAAI,EADmB,EAEpDH,UAFoD,CAAtD;AAIA,WAAOC,WAAP;AACD,GATD,CASE,OAAOb,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAfM;AAiBP,OAAO,MAAMgB,UAAU,GAAG,MACxBD,GADwB,IAEgB;AACxC,MAAI;AACF,UAAME,WAAuC,GAAG,MAAMtB,KAAK,CAACuB,MAAN,CACnD,GAAEtB,OAAQ,gBAAemB,GAAI,EADsB,CAAtD;AAGA,WAAOE,WAAP;AACD,GALD,CAKE,OAAOjB,KAAP,EAAc;AACd,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD;AACF,CAXM","sourcesContent":["import axios, { AxiosResponse } from 'axios'\r\n\r\nconst baseUrl: string = 'http://localhost:4000'\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + '/todos'\r\n    )\r\n    return todos\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const addTodo = async (\r\n  formData: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todo: Omit<ITodo, '_id'> = {\r\n      index: 0,\r\n      name: formData.name,\r\n      description: formData.description,\r\n      status: false\r\n    }\r\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\r\n      baseUrl + '/add-todo',\r\n      todo\r\n    )\r\n    return saveTodo\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const updateTodo = async (\r\n  todo: ITodo\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todoUpdate: Pick<ITodo, 'status'> = {\r\n      status: true,\r\n    }\r\n    const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\r\n      `${baseUrl}/edit-todo/${todo._id}`,\r\n      todoUpdate\r\n    )\r\n    return updatedTodo\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const deleteTodo = async (\r\n  _id: string\r\n): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\r\n      `${baseUrl}/delete-todo/${_id}`\r\n    )\r\n    return deletedTodo\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}